

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 21:47:05 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	smallconst
    84  000600                     __psmallconst:
    85                           	callstack 0
    86  000600  00                 	db	0
    87  000601                     _valor:
    88                           	callstack 0
    89  000601  3F                 	db	63
    90  000602  06                 	db	6
    91  000603  5B                 	db	91
    92  000604  4F                 	db	79
    93  000605  66                 	db	102
    94  000606  6D                 	db	109
    95  000607  7D                 	db	125
    96  000608  07                 	db	7
    97  000609  7F                 	db	127
    98  00060A  6F                 	db	111
    99  00060B  77                 	db	119
   100  00060C  7C                 	db	124
   101  00060D  39                 	db	57
   102  00060E  5E                 	db	94
   103  00060F  79                 	db	121
   104  000610  71                 	db	113
   105  000611                     __end_of_valor:
   106                           	callstack 0
   107  000611  55                 	db	85
   108  000612  4C                 	db	76
   109  000613  44                 	db	68
   110  000614  52                 	db	82
   111  000615  53                 	db	83
   112  000616  58                 	db	88
   113  000617  41                 	db	65
   114  000618  42                 	db	66
   115  000619  59                 	db	89
   116  00061A  73                 	db	115
   117  00061B                     __end_of_charKey:
   118                           	callstack 0
   119  0000                     _T0CON	set	4053
   120  0000                     _TMR0L	set	4054
   121  0000                     _TMR0H	set	4055
   122  0000                     _INTCON	set	4082
   123  0000                     _SPBRG	set	4015
   124  0000                     _SPBRGH	set	4016
   125  0000                     _BAUDCON	set	4024
   126  0000                     _TXSTA	set	4012
   127  0000                     _RCREG	set	4014
   128  0000                     _RCSTA	set	4011
   129  0000                     _TXREG	set	4013
   130  0000                     _PIR1	set	3998
   131  0000                     _T2CON	set	4042
   132  0000                     _CCP2CON	set	4026
   133  0000                     _CCPR2L	set	4027
   134  0000                     _PR2	set	4043
   135  0000                     _TRISE	set	3990
   136  0000                     _TRISD	set	3989
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISB	set	3987
   139  0000                     _TRISA	set	3986
   140  0000                     _PORTE	set	3972
   141  0000                     _PORTD	set	3971
   142  0000                     _PORTC	set	3970
   143  0000                     _PORTB	set	3969
   144  0000                     _PORTA	set	3968
   145  0000                     _ADRESL	set	4035
   146  0000                     _ADRESH	set	4036
   147  0000                     _ADCON2	set	4032
   148  0000                     _ADCON1	set	4033
   149  0000                     _ADCON0	set	4034
   150  00061B  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155  001E4A                     __pcinit:
   156                           	callstack 0
   157  001E4A                     start_initialization:
   158                           	callstack 0
   159  001E4A                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (13 bytes)
   163  001E4A  EE00  F038         	lfsr	0,__pbssCOMRAM
   164  001E4E  0E0D               	movlw	13
   165  001E50                     clear_0:
   166  001E50  6AEE               	clrf	postinc0,c
   167  001E52  06E8               	decf	wreg,f,c
   168  001E54  E1FD               	bnz	clear_0
   169  001E56                     end_of_initialization:
   170                           	callstack 0
   171  001E56                     __end_of__initialization:
   172                           	callstack 0
   173  001E56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  001E58  6EF8               	movwf	tblptru,c
   175  001E5A  0100               	movlb	0
   176  001E5C  EF0E  F003         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  000038                     __pbssCOMRAM:
   180                           	callstack 0
   181  000038                     kpDebounce@oldRead:
   182                           	callstack 0
   183  000038                     	ds	2
   184  00003A                     kpDebounce@newRead:
   185                           	callstack 0
   186  00003A                     	ds	2
   187  00003C                     _keys:
   188                           	callstack 0
   189  00003C                     	ds	2
   190  00003E                     _v3:
   191                           	callstack 0
   192  00003E                     	ds	1
   193  00003F                     _v2:
   194                           	callstack 0
   195  00003F                     	ds	1
   196  000040                     _v1:
   197                           	callstack 0
   198  000040                     	ds	1
   199  000041                     _v0:
   200                           	callstack 0
   201  000041                     	ds	1
   202  000042                     _display:
   203                           	callstack 0
   204  000042                     	ds	1
   205  000043                     kpDebounce@tempo:
   206                           	callstack 0
   207  000043                     	ds	1
   208  000044                     _started:
   209                           	callstack 0
   210  000044                     	ds	1
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	callstack 0
   215  000001                     ?_digitalRead:
   216                           	callstack 0
   217  000001                     ?_kpRead:
   218                           	callstack 0
   219  000001                     ?___wmul:
   220                           	callstack 0
   221  000001                     ?___lwdiv:
   222                           	callstack 0
   223  000001                     ?___lldiv:
   224                           	callstack 0
   225  000001                     ?___aldiv:
   226                           	callstack 0
   227  000001                     ssdDigit@pos:
   228                           	callstack 0
   229  000001                     digitalWrite@pin:
   230                           	callstack 0
   231  000001                     digitalRead@pin:
   232                           	callstack 0
   233  000001                     pinMode@pin:
   234                           	callstack 0
   235  000001                     delayMicro@a:
   236                           	callstack 0
   237  000001                     delayMili@a:
   238                           	callstack 0
   239  000001                     ___wmul@multiplier:
   240                           	callstack 0
   241  000001                     ___lwdiv@dividend:
   242                           	callstack 0
   243  000001                     ___lldiv@dividend:
   244                           	callstack 0
   245  000001                     ___aldiv@dividend:
   246                           	callstack 0
   247                           
   248                           ; 4 bytes @ 0x0
   249  000001                     	ds	1
   250  000002                     ssdDigit@val:
   251                           	callstack 0
   252                           
   253                           ; 1 bytes @ 0x1
   254  000002                     	ds	1
   255  000003                     ??_digitalRead:
   256  000003                     ??_delayMili:
   257  000003                     digitalWrite@value:
   258                           	callstack 0
   259  000003                     pinMode@type:
   260                           	callstack 0
   261  000003                     ___wmul@multiplicand:
   262                           	callstack 0
   263  000003                     ___lwdiv@divisor:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x2
   267  000003                     	ds	1
   268  000004                     delayMili@i:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x3
   272  000004                     	ds	1
   273  000005                     ??_pinMode:
   274  000005                     ??_digitalWrite:
   275  000005                     ___wmul@product:
   276                           	callstack 0
   277  000005                     ___lwdiv@quotient:
   278                           	callstack 0
   279  000005                     ___lldiv@divisor:
   280                           	callstack 0
   281  000005                     ___aldiv@divisor:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x4
   285  000005                     	ds	2
   286  000007                     ___lwdiv@counter:
   287                           	callstack 0
   288  000007                     rgbColor@led:
   289                           	callstack 0
   290  000007                     soWrite@value:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x6
   294  000007                     	ds	1
   295  000008                     ??_pwmSet:
   296                           
   297                           ; 1 bytes @ 0x7
   298  000008                     	ds	1
   299  000009                     soWrite@i:
   300                           	callstack 0
   301  000009                     ___aldiv@counter:
   302                           	callstack 0
   303  000009                     ___lldiv@quotient:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x8
   307  000009                     	ds	1
   308  00000A                     ??_kpDebounce:
   309  00000A                     ??_ssdUpdate:
   310  00000A                     pwmSet@porcento:
   311                           	callstack 0
   312  00000A                     ___aldiv@sign:
   313                           	callstack 0
   314  00000A                     pushNibble@rs:
   315                           	callstack 0
   316  00000A                     pushByte@rs:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x9
   320  00000A                     	ds	1
   321  00000B                     pwmSet@val:
   322                           	callstack 0
   323  00000B                     ___aldiv@quotient:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0xA
   327  00000B                     	ds	1
   328  00000C                     ??_pushByte:
   329  00000C                     pushNibble@value:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xB
   333  00000C                     	ds	1
   334  00000D                     pushByte@value:
   335                           	callstack 0
   336  00000D                     ___lldiv@counter:
   337                           	callstack 0
   338  00000D                     kpDebounce@i:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0xC
   342  00000D                     	ds	1
   343  00000E                     ?___llmod:
   344                           	callstack 0
   345  00000E                     lcdCommand@value:
   346                           	callstack 0
   347  00000E                     lcdChar@value:
   348                           	callstack 0
   349  00000E                     ___llmod@dividend:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0xD
   353  00000E                     	ds	1
   354  00000F                     lcdPosition@line:
   355                           	callstack 0
   356  00000F                     pwmFrequency@freq:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0xE
   360  00000F                     	ds	2
   361  000011                     lcdPosition@col:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x10
   365  000011                     	ds	1
   366  000012                     ___llmod@divisor:
   367                           	callstack 0
   368                           
   369                           ; 4 bytes @ 0x11
   370  000012                     	ds	1
   371  000013                     
   372                           ; 1 bytes @ 0x12
   373  000013                     	ds	3
   374  000016                     ___llmod@counter:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x15
   378  000016                     	ds	1
   379  000017                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x16
   382  000017                     	ds	2
   383  000019                     main@nled:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x18
   387  000019                     	ds	4
   388  00001D                     _main$1350:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x1C
   392  00001D                     	ds	4
   393  000021                     _main$1351:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x20
   397  000021                     	ds	4
   398  000025                     main@win:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x24
   402  000025                     	ds	2
   403  000027                     main@op:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x26
   407  000027                     	ds	1
   408  000028                     main@round:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x27
   412  000028                     	ds	4
   413  00002C                     main@i:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x2B
   417  00002C                     	ds	4
   418  000030                     main@i_615:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x2F
   422  000030                     	ds	1
   423  000031                     main@stoped:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x30
   427  000031                     	ds	1
   428  000032                     main@tecla:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x31
   432  000032                     	ds	2
   433  000034                     main@cont:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0x33
   437  000034                     	ds	4
   438                           
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 15 in file "main.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;  i               1   47[COMRAM] unsigned char 
   449 ;;  cont            4   51[COMRAM] unsigned long 
   450 ;;  i               4   43[COMRAM] unsigned long 
   451 ;;  round           4   39[COMRAM] unsigned long 
   452 ;;  nled            4   24[COMRAM] unsigned long 
   453 ;;  tecla           2   49[COMRAM] unsigned int 
   454 ;;  win             2   36[COMRAM] unsigned int 
   455 ;;  stoped          1   48[COMRAM] unsigned char 
   456 ;;  op              1   38[COMRAM] unsigned char 
   457 ;; Return value:  Size  Location     Type
   458 ;;                  1    wreg      void 
   459 ;; Registers used:
   460 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   466 ;;      Params:         0       0       0       0       0       0       0
   467 ;;      Locals:        31       0       0       0       0       0       0
   468 ;;      Temps:          2       0       0       0       0       0       0
   469 ;;      Totals:        33       0       0       0       0       0       0
   470 ;;Total ram usage:       33 bytes
   471 ;; Hardware stack levels required when called: 6
   472 ;; This function calls:
   473 ;;		___lldiv
   474 ;;		___llmod
   475 ;;		_adcInit
   476 ;;		_kpDebounce
   477 ;;		_kpInit
   478 ;;		_kpRead
   479 ;;		_lcdChar
   480 ;;		_lcdInit
   481 ;;		_lcdPosition
   482 ;;		_pwmInit
   483 ;;		_pwmSet
   484 ;;		_rgbColor
   485 ;;		_ssdDigit
   486 ;;		_ssdInit
   487 ;;		_ssdUpdate
   488 ;;		_timerInit
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495  00061C                     __ptext0:
   496                           	callstack 0
   497  00061C                     _main:
   498                           	callstack 25
   499  00061C                     
   500                           ;main.c: 16:     unsigned long int cont = 1800000, round=1, i=0, nled=0;
   501  00061C  0E40               	movlw	64
   502  00061E  6E34               	movwf	main@cont^0,c
   503  000620  0E77               	movlw	119
   504  000622  6E35               	movwf	(main@cont+1)^0,c
   505  000624  0E1B               	movlw	27
   506  000626  6E36               	movwf	(main@cont+2)^0,c
   507  000628  0E00               	movlw	0
   508  00062A  6E37               	movwf	(main@cont+3)^0,c
   509  00062C  0E01               	movlw	1
   510  00062E  6E28               	movwf	main@round^0,c
   511  000630  0E00               	movlw	0
   512  000632  6E29               	movwf	(main@round+1)^0,c
   513  000634  0E00               	movlw	0
   514  000636  6E2A               	movwf	(main@round+2)^0,c
   515  000638  0E00               	movlw	0
   516  00063A  6E2B               	movwf	(main@round+3)^0,c
   517  00063C  0E00               	movlw	0
   518  00063E  6E19               	movwf	main@nled^0,c
   519  000640  0E00               	movlw	0
   520  000642  6E1A               	movwf	(main@nled+1)^0,c
   521  000644  0E00               	movlw	0
   522  000646  6E1B               	movwf	(main@nled+2)^0,c
   523  000648  0E00               	movlw	0
   524  00064A  6E1C               	movwf	(main@nled+3)^0,c
   525                           
   526                           ;main.c: 17:     unsigned int tecla = 16, win = 0;
   527  00064C  0E00               	movlw	0
   528  00064E  6E33               	movwf	(main@tecla+1)^0,c
   529  000650  0E10               	movlw	16
   530  000652  6E32               	movwf	main@tecla^0,c
   531  000654  0E00               	movlw	0
   532  000656  6E26               	movwf	(main@win+1)^0,c
   533  000658  0E00               	movlw	0
   534  00065A  6E25               	movwf	main@win^0,c
   535                           
   536                           ;main.c: 18:     unsigned char stoped = 0, op = 0;
   537  00065C  0E00               	movlw	0
   538  00065E  6E31               	movwf	main@stoped^0,c
   539  000660  0E00               	movlw	0
   540  000662  6E27               	movwf	main@op^0,c
   541  000664                     
   542                           ;main.c: 20:     lcdInit();
   543  000664  EC82  F00B         	call	_lcdInit	;wreg free
   544  000668                     
   545                           ;main.c: 21:     ssdInit();
   546  000668  EC93  F00D         	call	_ssdInit	;wreg free
   547  00066C                     
   548                           ;main.c: 22:     adcInit();
   549  00066C  ECE5  F00D         	call	_adcInit	;wreg free
   550  000670                     
   551                           ;main.c: 23:     kpInit();
   552  000670  EC66  F00E         	call	_kpInit	;wreg free
   553  000674                     
   554                           ;main.c: 24:     pwmInit();
   555  000674  EC18  F00F         	call	_pwmInit	;wreg free
   556  000678                     
   557                           ;main.c: 25:     timerInit();
   558  000678  EC35  F00F         	call	_timerInit	;wreg free
   559  00067C                     l2919:
   560                           
   561                           ;main.c: 28:         ssdUpdate();
   562  00067C  ECF6  F008         	call	_ssdUpdate	;wreg free
   563                           
   564                           ;main.c: 29:         switch(op){
   565  000680  EF89  F006         	goto	l3163
   566  000684                     l2921:
   567                           
   568                           ;main.c: 31:                 for(i=0;i<100;i++){
   569  000684  0E00               	movlw	0
   570  000686  6E2C               	movwf	main@i^0,c
   571  000688  0E00               	movlw	0
   572  00068A  6E2D               	movwf	(main@i+1)^0,c
   573  00068C  0E00               	movlw	0
   574  00068E  6E2E               	movwf	(main@i+2)^0,c
   575  000690  0E00               	movlw	0
   576  000692  6E2F               	movwf	(main@i+3)^0,c
   577  000694                     l2927:
   578                           
   579                           ;main.c: 32:                     if(stoped == 1){
   580  000694  0431               	decf	main@stoped^0,w,c
   581  000696  A4D8               	btfss	status,2,c
   582  000698  EF50  F003         	goto	u2451
   583  00069C  EF52  F003         	goto	u2450
   584  0006A0                     u2451:
   585  0006A0  EF57  F003         	goto	l530
   586  0006A4                     u2450:
   587  0006A4                     
   588                           ;main.c: 33:                         cont--;
   589  0006A4  0634               	decf	main@cont^0,f,c
   590  0006A6  0E00               	movlw	0
   591  0006A8  5A35               	subwfb	(main@cont+1)^0,f,c
   592  0006AA  5A36               	subwfb	(main@cont+2)^0,f,c
   593  0006AC  5A37               	subwfb	(main@cont+3)^0,f,c
   594  0006AE                     l530:
   595                           
   596                           ;main.c: 35:                 }
   597  0006AE  0E01               	movlw	1
   598  0006B0  262C               	addwf	main@i^0,f,c
   599  0006B2  0E00               	movlw	0
   600  0006B4  222D               	addwfc	(main@i+1)^0,f,c
   601  0006B6  222E               	addwfc	(main@i+2)^0,f,c
   602  0006B8  222F               	addwfc	(main@i+3)^0,f,c
   603  0006BA  502F               	movf	(main@i+3)^0,w,c
   604  0006BC  102E               	iorwf	(main@i+2)^0,w,c
   605  0006BE  102D               	iorwf	(main@i+1)^0,w,c
   606  0006C0  E109               	bnz	u2460
   607  0006C2  0E64               	movlw	100
   608  0006C4  5C2C               	subwf	main@i^0,w,c
   609  0006C6  A0D8               	btfss	status,0,c
   610  0006C8  EF68  F003         	goto	u2461
   611  0006CC  EF6A  F003         	goto	u2460
   612  0006D0                     u2461:
   613  0006D0  EF4A  F003         	goto	l2927
   614  0006D4                     u2460:
   615  0006D4                     
   616                           ;main.c: 36:                 rgbColor((1 +2 +4));
   617  0006D4  0E00               	movlw	0
   618  0006D6  6E08               	movwf	(rgbColor@led+1)^0,c
   619  0006D8  0E07               	movlw	7
   620  0006DA  6E07               	movwf	rgbColor@led^0,c
   621  0006DC  ECDC  F00B         	call	_rgbColor	;wreg free
   622                           
   623                           ;main.c: 37:                 lcdPosition(0, 0);
   624  0006E0  0E00               	movlw	0
   625  0006E2  6E10               	movwf	(lcdPosition@line+1)^0,c
   626  0006E4  0E00               	movlw	0
   627  0006E6  6E0F               	movwf	lcdPosition@line^0,c
   628  0006E8  0E00               	movlw	0
   629  0006EA  6E12               	movwf	(lcdPosition@col+1)^0,c
   630  0006EC  0E00               	movlw	0
   631  0006EE  6E11               	movwf	lcdPosition@col^0,c
   632  0006F0  EC49  F00E         	call	_lcdPosition	;wreg free
   633                           
   634                           ;main.c: 38:                 lcdChar((((cont / 360000) % 24) / 10) + 48);
   635  0006F4  0E18               	movlw	24
   636  0006F6  6E12               	movwf	___llmod@divisor^0,c
   637  0006F8  0E00               	movlw	0
   638  0006FA  6E13               	movwf	(___llmod@divisor+1)^0,c
   639  0006FC  0E00               	movlw	0
   640  0006FE  6E14               	movwf	(___llmod@divisor+2)^0,c
   641  000700  0E00               	movlw	0
   642  000702  6E15               	movwf	(___llmod@divisor+3)^0,c
   643  000704  0E40               	movlw	64
   644  000706  6E05               	movwf	___lldiv@divisor^0,c
   645  000708  0E7E               	movlw	126
   646  00070A  6E06               	movwf	(___lldiv@divisor+1)^0,c
   647  00070C  0E05               	movlw	5
   648  00070E  6E07               	movwf	(___lldiv@divisor+2)^0,c
   649  000710  0E00               	movlw	0
   650  000712  6E08               	movwf	(___lldiv@divisor+3)^0,c
   651  000714  C034  F001         	movff	main@cont,___lldiv@dividend
   652  000718  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   653  00071C  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   654  000720  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   655  000724  EC34  F00C         	call	___lldiv	;wreg free
   656  000728  C001  F00E         	movff	?___lldiv,___llmod@dividend
   657  00072C  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   658  000730  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   659  000734  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   660  000738  EC86  F00C         	call	___llmod	;wreg free
   661  00073C  C00E  F01D         	movff	?___llmod,_main$1350
   662  000740  C00F  F01E         	movff	?___llmod+1,_main$1350+1
   663  000744  C010  F01F         	movff	?___llmod+2,_main$1350+2
   664  000748  C011  F020         	movff	?___llmod+3,_main$1350+3
   665                           
   666                           ;main.c: 38:                 lcdChar((((cont / 360000) % 24) / 10) + 48);
   667  00074C  C01D  F001         	movff	_main$1350,___lldiv@dividend
   668  000750  C01E  F002         	movff	_main$1350+1,___lldiv@dividend+1
   669  000754  C01F  F003         	movff	_main$1350+2,___lldiv@dividend+2
   670  000758  C020  F004         	movff	_main$1350+3,___lldiv@dividend+3
   671  00075C  0E0A               	movlw	10
   672  00075E  6E05               	movwf	___lldiv@divisor^0,c
   673  000760  0E00               	movlw	0
   674  000762  6E06               	movwf	(___lldiv@divisor+1)^0,c
   675  000764  0E00               	movlw	0
   676  000766  6E07               	movwf	(___lldiv@divisor+2)^0,c
   677  000768  0E00               	movlw	0
   678  00076A  6E08               	movwf	(___lldiv@divisor+3)^0,c
   679  00076C  EC34  F00C         	call	___lldiv	;wreg free
   680  000770  5001               	movf	?___lldiv^0,w,c
   681  000772  0F30               	addlw	48
   682  000774  EC09  F00F         	call	_lcdChar
   683                           
   684                           ;main.c: 39:                 lcdChar((((cont / 360000) % 24) % 10) + 48);
   685  000778  0E18               	movlw	24
   686  00077A  6E12               	movwf	___llmod@divisor^0,c
   687  00077C  0E00               	movlw	0
   688  00077E  6E13               	movwf	(___llmod@divisor+1)^0,c
   689  000780  0E00               	movlw	0
   690  000782  6E14               	movwf	(___llmod@divisor+2)^0,c
   691  000784  0E00               	movlw	0
   692  000786  6E15               	movwf	(___llmod@divisor+3)^0,c
   693  000788  0E40               	movlw	64
   694  00078A  6E05               	movwf	___lldiv@divisor^0,c
   695  00078C  0E7E               	movlw	126
   696  00078E  6E06               	movwf	(___lldiv@divisor+1)^0,c
   697  000790  0E05               	movlw	5
   698  000792  6E07               	movwf	(___lldiv@divisor+2)^0,c
   699  000794  0E00               	movlw	0
   700  000796  6E08               	movwf	(___lldiv@divisor+3)^0,c
   701  000798  C034  F001         	movff	main@cont,___lldiv@dividend
   702  00079C  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   703  0007A0  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   704  0007A4  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   705  0007A8  EC34  F00C         	call	___lldiv	;wreg free
   706  0007AC  C001  F00E         	movff	?___lldiv,___llmod@dividend
   707  0007B0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   708  0007B4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   709  0007B8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   710  0007BC  EC86  F00C         	call	___llmod	;wreg free
   711  0007C0  C00E  F021         	movff	?___llmod,_main$1351
   712  0007C4  C00F  F022         	movff	?___llmod+1,_main$1351+1
   713  0007C8  C010  F023         	movff	?___llmod+2,_main$1351+2
   714  0007CC  C011  F024         	movff	?___llmod+3,_main$1351+3
   715                           
   716                           ;main.c: 39:                 lcdChar((((cont / 360000) % 24) % 10) + 48);
   717  0007D0  C021  F00E         	movff	_main$1351,___llmod@dividend
   718  0007D4  C022  F00F         	movff	_main$1351+1,___llmod@dividend+1
   719  0007D8  C023  F010         	movff	_main$1351+2,___llmod@dividend+2
   720  0007DC  C024  F011         	movff	_main$1351+3,___llmod@dividend+3
   721  0007E0  0E0A               	movlw	10
   722  0007E2  6E12               	movwf	___llmod@divisor^0,c
   723  0007E4  0E00               	movlw	0
   724  0007E6  6E13               	movwf	(___llmod@divisor+1)^0,c
   725  0007E8  0E00               	movlw	0
   726  0007EA  6E14               	movwf	(___llmod@divisor+2)^0,c
   727  0007EC  0E00               	movlw	0
   728  0007EE  6E15               	movwf	(___llmod@divisor+3)^0,c
   729  0007F0  EC86  F00C         	call	___llmod	;wreg free
   730  0007F4  500E               	movf	?___llmod^0,w,c
   731  0007F6  0F30               	addlw	48
   732  0007F8  EC09  F00F         	call	_lcdChar
   733                           
   734                           ;main.c: 40:                 lcdChar(':');
   735  0007FC  0E3A               	movlw	58
   736  0007FE  EC09  F00F         	call	_lcdChar
   737                           
   738                           ;main.c: 41:                 lcdChar((cont / 60000) % 6 + 48);
   739  000802  0E60               	movlw	96
   740  000804  6E05               	movwf	___lldiv@divisor^0,c
   741  000806  0EEA               	movlw	234
   742  000808  6E06               	movwf	(___lldiv@divisor+1)^0,c
   743  00080A  0E00               	movlw	0
   744  00080C  6E07               	movwf	(___lldiv@divisor+2)^0,c
   745  00080E  0E00               	movlw	0
   746  000810  6E08               	movwf	(___lldiv@divisor+3)^0,c
   747  000812  C034  F001         	movff	main@cont,___lldiv@dividend
   748  000816  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   749  00081A  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   750  00081E  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   751  000822  EC34  F00C         	call	___lldiv	;wreg free
   752  000826  C001  F00E         	movff	?___lldiv,___llmod@dividend
   753  00082A  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   754  00082E  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   755  000832  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   756  000836  0E06               	movlw	6
   757  000838  6E12               	movwf	___llmod@divisor^0,c
   758  00083A  0E00               	movlw	0
   759  00083C  6E13               	movwf	(___llmod@divisor+1)^0,c
   760  00083E  0E00               	movlw	0
   761  000840  6E14               	movwf	(___llmod@divisor+2)^0,c
   762  000842  0E00               	movlw	0
   763  000844  6E15               	movwf	(___llmod@divisor+3)^0,c
   764  000846  EC86  F00C         	call	___llmod	;wreg free
   765  00084A  500E               	movf	?___llmod^0,w,c
   766  00084C  0F30               	addlw	48
   767  00084E  EC09  F00F         	call	_lcdChar
   768                           
   769                           ;main.c: 42:                 lcdChar((cont / 6000) % 10 + 48);
   770  000852  0E70               	movlw	112
   771  000854  6E05               	movwf	___lldiv@divisor^0,c
   772  000856  0E17               	movlw	23
   773  000858  6E06               	movwf	(___lldiv@divisor+1)^0,c
   774  00085A  0E00               	movlw	0
   775  00085C  6E07               	movwf	(___lldiv@divisor+2)^0,c
   776  00085E  0E00               	movlw	0
   777  000860  6E08               	movwf	(___lldiv@divisor+3)^0,c
   778  000862  C034  F001         	movff	main@cont,___lldiv@dividend
   779  000866  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   780  00086A  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   781  00086E  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   782  000872  EC34  F00C         	call	___lldiv	;wreg free
   783  000876  C001  F00E         	movff	?___lldiv,___llmod@dividend
   784  00087A  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   785  00087E  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   786  000882  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   787  000886  0E0A               	movlw	10
   788  000888  6E12               	movwf	___llmod@divisor^0,c
   789  00088A  0E00               	movlw	0
   790  00088C  6E13               	movwf	(___llmod@divisor+1)^0,c
   791  00088E  0E00               	movlw	0
   792  000890  6E14               	movwf	(___llmod@divisor+2)^0,c
   793  000892  0E00               	movlw	0
   794  000894  6E15               	movwf	(___llmod@divisor+3)^0,c
   795  000896  EC86  F00C         	call	___llmod	;wreg free
   796  00089A  500E               	movf	?___llmod^0,w,c
   797  00089C  0F30               	addlw	48
   798  00089E  EC09  F00F         	call	_lcdChar
   799                           
   800                           ;main.c: 43:                 lcdChar(':');
   801  0008A2  0E3A               	movlw	58
   802  0008A4  EC09  F00F         	call	_lcdChar
   803                           
   804                           ;main.c: 44:                 lcdChar((cont / 1000) % 6 + 48);
   805  0008A8  0EE8               	movlw	232
   806  0008AA  6E05               	movwf	___lldiv@divisor^0,c
   807  0008AC  0E03               	movlw	3
   808  0008AE  6E06               	movwf	(___lldiv@divisor+1)^0,c
   809  0008B0  0E00               	movlw	0
   810  0008B2  6E07               	movwf	(___lldiv@divisor+2)^0,c
   811  0008B4  0E00               	movlw	0
   812  0008B6  6E08               	movwf	(___lldiv@divisor+3)^0,c
   813  0008B8  C034  F001         	movff	main@cont,___lldiv@dividend
   814  0008BC  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   815  0008C0  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   816  0008C4  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   817  0008C8  EC34  F00C         	call	___lldiv	;wreg free
   818  0008CC  C001  F00E         	movff	?___lldiv,___llmod@dividend
   819  0008D0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   820  0008D4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   821  0008D8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   822  0008DC  0E06               	movlw	6
   823  0008DE  6E12               	movwf	___llmod@divisor^0,c
   824  0008E0  0E00               	movlw	0
   825  0008E2  6E13               	movwf	(___llmod@divisor+1)^0,c
   826  0008E4  0E00               	movlw	0
   827  0008E6  6E14               	movwf	(___llmod@divisor+2)^0,c
   828  0008E8  0E00               	movlw	0
   829  0008EA  6E15               	movwf	(___llmod@divisor+3)^0,c
   830  0008EC  EC86  F00C         	call	___llmod	;wreg free
   831  0008F0  500E               	movf	?___llmod^0,w,c
   832  0008F2  0F30               	addlw	48
   833  0008F4  EC09  F00F         	call	_lcdChar
   834                           
   835                           ;main.c: 45:                 lcdChar((cont / 100) % 10 + 48);
   836  0008F8  0E64               	movlw	100
   837  0008FA  6E05               	movwf	___lldiv@divisor^0,c
   838  0008FC  0E00               	movlw	0
   839  0008FE  6E06               	movwf	(___lldiv@divisor+1)^0,c
   840  000900  0E00               	movlw	0
   841  000902  6E07               	movwf	(___lldiv@divisor+2)^0,c
   842  000904  0E00               	movlw	0
   843  000906  6E08               	movwf	(___lldiv@divisor+3)^0,c
   844  000908  C034  F001         	movff	main@cont,___lldiv@dividend
   845  00090C  C035  F002         	movff	main@cont+1,___lldiv@dividend+1
   846  000910  C036  F003         	movff	main@cont+2,___lldiv@dividend+2
   847  000914  C037  F004         	movff	main@cont+3,___lldiv@dividend+3
   848  000918  EC34  F00C         	call	___lldiv	;wreg free
   849  00091C  C001  F00E         	movff	?___lldiv,___llmod@dividend
   850  000920  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   851  000924  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   852  000928  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   853  00092C  0E0A               	movlw	10
   854  00092E  6E12               	movwf	___llmod@divisor^0,c
   855  000930  0E00               	movlw	0
   856  000932  6E13               	movwf	(___llmod@divisor+1)^0,c
   857  000934  0E00               	movlw	0
   858  000936  6E14               	movwf	(___llmod@divisor+2)^0,c
   859  000938  0E00               	movlw	0
   860  00093A  6E15               	movwf	(___llmod@divisor+3)^0,c
   861  00093C  EC86  F00C         	call	___llmod	;wreg free
   862  000940  500E               	movf	?___llmod^0,w,c
   863  000942  0F30               	addlw	48
   864  000944  EC09  F00F         	call	_lcdChar
   865  000948                     
   866                           ;main.c: 47:                 if(cont == 0){
   867  000948  5034               	movf	main@cont^0,w,c
   868  00094A  1035               	iorwf	(main@cont+1)^0,w,c
   869  00094C  1036               	iorwf	(main@cont+2)^0,w,c
   870  00094E  1037               	iorwf	(main@cont+3)^0,w,c
   871  000950  A4D8               	btfss	status,2,c
   872  000952  EFAD  F004         	goto	u2471
   873  000956  EFAF  F004         	goto	u2470
   874  00095A                     u2471:
   875  00095A  EF11  F005         	goto	l2989
   876  00095E                     u2470:
   877  00095E                     
   878                           ;main.c: 48:                     win = 1;
   879  00095E  0E00               	movlw	0
   880  000960  6E26               	movwf	(main@win+1)^0,c
   881  000962  0E01               	movlw	1
   882  000964  6E25               	movwf	main@win^0,c
   883                           
   884                           ;main.c: 49:                     stoped = 0;
   885  000966  0E00               	movlw	0
   886  000968  6E31               	movwf	main@stoped^0,c
   887  00096A                     
   888                           ;main.c: 50:                     lcdPosition(0, 9);
   889  00096A  0E00               	movlw	0
   890  00096C  6E10               	movwf	(lcdPosition@line+1)^0,c
   891  00096E  0E00               	movlw	0
   892  000970  6E0F               	movwf	lcdPosition@line^0,c
   893  000972  0E00               	movlw	0
   894  000974  6E12               	movwf	(lcdPosition@col+1)^0,c
   895  000976  0E09               	movlw	9
   896  000978  6E11               	movwf	lcdPosition@col^0,c
   897  00097A  EC49  F00E         	call	_lcdPosition	;wreg free
   898  00097E                     
   899                           ;main.c: 51:                     lcdChar(' ');
   900  00097E  0E20               	movlw	32
   901  000980  EC09  F00F         	call	_lcdChar
   902  000984                     
   903                           ;main.c: 52:                     lcdChar(' ');
   904  000984  0E20               	movlw	32
   905  000986  EC09  F00F         	call	_lcdChar
   906  00098A                     
   907                           ;main.c: 53:                     lcdChar(' ');
   908  00098A  0E20               	movlw	32
   909  00098C  EC09  F00F         	call	_lcdChar
   910  000990                     
   911                           ;main.c: 54:                     lcdChar(' ');
   912  000990  0E20               	movlw	32
   913  000992  EC09  F00F         	call	_lcdChar
   914  000996                     
   915                           ;main.c: 55:                     lcdChar(' ');
   916  000996  0E20               	movlw	32
   917  000998  EC09  F00F         	call	_lcdChar
   918  00099C                     
   919                           ;main.c: 56:                     lcdChar(' ');
   920  00099C  0E20               	movlw	32
   921  00099E  EC09  F00F         	call	_lcdChar
   922  0009A2                     
   923                           ;main.c: 57:                     lcdChar(' ');
   924  0009A2  0E20               	movlw	32
   925  0009A4  EC09  F00F         	call	_lcdChar
   926  0009A8                     
   927                           ;main.c: 58:                     lcdChar(' ');
   928  0009A8  0E20               	movlw	32
   929  0009AA  EC09  F00F         	call	_lcdChar
   930  0009AE                     
   931                           ;main.c: 61:                     lcdPosition(1, 0);
   932  0009AE  0E00               	movlw	0
   933  0009B0  6E10               	movwf	(lcdPosition@line+1)^0,c
   934  0009B2  0E01               	movlw	1
   935  0009B4  6E0F               	movwf	lcdPosition@line^0,c
   936  0009B6  0E00               	movlw	0
   937  0009B8  6E12               	movwf	(lcdPosition@col+1)^0,c
   938  0009BA  0E00               	movlw	0
   939  0009BC  6E11               	movwf	lcdPosition@col^0,c
   940  0009BE  EC49  F00E         	call	_lcdPosition	;wreg free
   941  0009C2                     
   942                           ;main.c: 62:                     lcdChar('F');
   943  0009C2  0E46               	movlw	70
   944  0009C4  EC09  F00F         	call	_lcdChar
   945  0009C8                     
   946                           ;main.c: 63:                     lcdChar('I');
   947  0009C8  0E49               	movlw	73
   948  0009CA  EC09  F00F         	call	_lcdChar
   949  0009CE                     
   950                           ;main.c: 64:                     lcdChar('N');
   951  0009CE  0E4E               	movlw	78
   952  0009D0  EC09  F00F         	call	_lcdChar
   953  0009D4                     
   954                           ;main.c: 65:                     lcdChar('I');
   955  0009D4  0E49               	movlw	73
   956  0009D6  EC09  F00F         	call	_lcdChar
   957  0009DA                     
   958                           ;main.c: 66:                     lcdChar('S');
   959  0009DA  0E53               	movlw	83
   960  0009DC  EC09  F00F         	call	_lcdChar
   961  0009E0                     
   962                           ;main.c: 67:                     lcdChar('H');
   963  0009E0  0E48               	movlw	72
   964  0009E2  EC09  F00F         	call	_lcdChar
   965  0009E6                     
   966                           ;main.c: 68:                     lcdChar(' ');
   967  0009E6  0E20               	movlw	32
   968  0009E8  EC09  F00F         	call	_lcdChar
   969  0009EC                     
   970                           ;main.c: 69:                     lcdChar('R');
   971  0009EC  0E52               	movlw	82
   972  0009EE  EC09  F00F         	call	_lcdChar
   973  0009F2                     
   974                           ;main.c: 70:                     lcdChar('O');
   975  0009F2  0E4F               	movlw	79
   976  0009F4  EC09  F00F         	call	_lcdChar
   977  0009F8                     
   978                           ;main.c: 71:                     lcdChar('U');
   979  0009F8  0E55               	movlw	85
   980  0009FA  EC09  F00F         	call	_lcdChar
   981  0009FE                     
   982                           ;main.c: 72:                     lcdChar('N');
   983  0009FE  0E4E               	movlw	78
   984  000A00  EC09  F00F         	call	_lcdChar
   985  000A04                     
   986                           ;main.c: 73:                     lcdChar('D');
   987  000A04  0E44               	movlw	68
   988  000A06  EC09  F00F         	call	_lcdChar
   989  000A0A                     
   990                           ;main.c: 74:                     lcdChar(' ');
   991  000A0A  0E20               	movlw	32
   992  000A0C  EC09  F00F         	call	_lcdChar
   993  000A10                     
   994                           ;main.c: 75:                     lcdChar('!');
   995  000A10  0E21               	movlw	33
   996  000A12  EC09  F00F         	call	_lcdChar
   997  000A16                     
   998                           ;main.c: 76:                     lcdChar('!');
   999  000A16  0E21               	movlw	33
  1000  000A18  EC09  F00F         	call	_lcdChar
  1001  000A1C                     
  1002                           ;main.c: 77:                     lcdChar('!');
  1003  000A1C  0E21               	movlw	33
  1004  000A1E  EC09  F00F         	call	_lcdChar
  1005  000A22                     l2989:
  1006                           
  1007                           ;main.c: 81:                 if (win == 1){
  1008  000A22  0425               	decf	main@win^0,w,c
  1009  000A24  1026               	iorwf	(main@win+1)^0,w,c
  1010  000A26  A4D8               	btfss	status,2,c
  1011  000A28  EF18  F005         	goto	u2481
  1012  000A2C  EF1A  F005         	goto	u2480
  1013  000A30                     u2481:
  1014  000A30  EF23  F005         	goto	l2995
  1015  000A34                     u2480:
  1016  000A34                     
  1017                           ;main.c: 82:                     pwmSet(100);
  1018  000A34  0E64               	movlw	100
  1019  000A36  EC04  F00D         	call	_pwmSet
  1020  000A3A                     
  1021                           ;main.c: 83:                     rgbColor(1);
  1022  000A3A  0E00               	movlw	0
  1023  000A3C  6E08               	movwf	(rgbColor@led+1)^0,c
  1024  000A3E  0E01               	movlw	1
  1025  000A40  6E07               	movwf	rgbColor@led^0,c
  1026  000A42  ECDC  F00B         	call	_rgbColor	;wreg free
  1027  000A46                     l2995:
  1028                           
  1029                           ;main.c: 91:                 kpDebounce();
  1030  000A46  EC61  F00A         	call	_kpDebounce	;wreg free
  1031  000A4A                     
  1032                           ;main.c: 92:                 op = 2;
  1033  000A4A  0E02               	movlw	2
  1034  000A4C  6E27               	movwf	main@op^0,c
  1035                           
  1036                           ;main.c: 93:                 break;
  1037  000A4E  EF3E  F003         	goto	l2919
  1038  000A52                     l2999:
  1039                           
  1040                           ;main.c: 95:                 if (kpRead()!=tecla){
  1041  000A52  EC30  F00F         	call	_kpRead	;wreg free
  1042  000A56  5032               	movf	main@tecla^0,w,c
  1043  000A58  1801               	xorwf	?_kpRead^0,w,c
  1044  000A5A  E109               	bnz	u2490
  1045  000A5C  5033               	movf	(main@tecla+1)^0,w,c
  1046  000A5E  1802               	xorwf	(?_kpRead+1)^0,w,c
  1047  000A60  B4D8               	btfsc	status,2,c
  1048  000A62  EF35  F005         	goto	u2491
  1049  000A66  EF37  F005         	goto	u2490
  1050  000A6A                     u2491:
  1051  000A6A  EF6B  F006         	goto	l536
  1052  000A6E                     u2490:
  1053  000A6E                     
  1054                           ;main.c: 96:                     tecla = kpRead();
  1055  000A6E  EC30  F00F         	call	_kpRead	;wreg free
  1056  000A72  C001  F032         	movff	?_kpRead,main@tecla
  1057  000A76  C002  F033         	movff	?_kpRead+1,main@tecla+1
  1058  000A7A                     
  1059                           ;main.c: 97:                     if(((tecla) & (1<<(0)))){
  1060  000A7A  A032               	btfss	main@tecla^0,0,c
  1061  000A7C  EF42  F005         	goto	u2501
  1062  000A80  EF44  F005         	goto	u2500
  1063  000A84                     u2501:
  1064  000A84  EF59  F005         	goto	l3015
  1065  000A88                     u2500:
  1066  000A88                     
  1067                           ;main.c: 98:                         pwmSet(0);
  1068  000A88  0E00               	movlw	0
  1069  000A8A  EC04  F00D         	call	_pwmSet
  1070  000A8E                     
  1071                           ;main.c: 99:                         win = 0;
  1072  000A8E  0E00               	movlw	0
  1073  000A90  6E26               	movwf	(main@win+1)^0,c
  1074  000A92  0E00               	movlw	0
  1075  000A94  6E25               	movwf	main@win^0,c
  1076  000A96                     
  1077                           ;main.c: 100:                         if(stoped == 0){
  1078  000A96  5031               	movf	main@stoped^0,w,c
  1079  000A98  A4D8               	btfss	status,2,c
  1080  000A9A  EF51  F005         	goto	u2511
  1081  000A9E  EF53  F005         	goto	u2510
  1082  000AA2                     u2511:
  1083  000AA2  EF57  F005         	goto	l3013
  1084  000AA6                     u2510:
  1085  000AA6                     
  1086                           ;main.c: 101:                             stoped = 1;
  1087  000AA6  0E01               	movlw	1
  1088  000AA8  6E31               	movwf	main@stoped^0,c
  1089                           
  1090                           ;main.c: 102:                         }else{
  1091  000AAA  EF59  F005         	goto	l3015
  1092  000AAE                     l3013:
  1093                           
  1094                           ;main.c: 103:                             stoped = 0;
  1095  000AAE  0E00               	movlw	0
  1096  000AB0  6E31               	movwf	main@stoped^0,c
  1097  000AB2                     l3015:
  1098                           
  1099                           ;main.c: 106:                     if(((tecla) & (1<<(1)))){
  1100  000AB2  A232               	btfss	main@tecla^0,1,c
  1101  000AB4  EF5E  F005         	goto	u2521
  1102  000AB8  EF60  F005         	goto	u2520
  1103  000ABC                     u2521:
  1104  000ABC  EFD3  F005         	goto	l3079
  1105  000AC0                     u2520:
  1106  000AC0                     
  1107                           ;main.c: 107:                         rgbColor((1 +2 +4));
  1108  000AC0  0E00               	movlw	0
  1109  000AC2  6E08               	movwf	(rgbColor@led+1)^0,c
  1110  000AC4  0E07               	movlw	7
  1111  000AC6  6E07               	movwf	rgbColor@led^0,c
  1112  000AC8  ECDC  F00B         	call	_rgbColor	;wreg free
  1113  000ACC                     
  1114                           ;main.c: 108:                         pwmSet(0);
  1115  000ACC  0E00               	movlw	0
  1116  000ACE  EC04  F00D         	call	_pwmSet
  1117  000AD2                     
  1118                           ;main.c: 109:                         win = 0;
  1119  000AD2  0E00               	movlw	0
  1120  000AD4  6E26               	movwf	(main@win+1)^0,c
  1121  000AD6  0E00               	movlw	0
  1122  000AD8  6E25               	movwf	main@win^0,c
  1123  000ADA                     
  1124                           ;main.c: 110:                         cont = 50000;
  1125  000ADA  0E50               	movlw	80
  1126  000ADC  6E34               	movwf	main@cont^0,c
  1127  000ADE  0EC3               	movlw	195
  1128  000AE0  6E35               	movwf	(main@cont+1)^0,c
  1129  000AE2  0E00               	movlw	0
  1130  000AE4  6E36               	movwf	(main@cont+2)^0,c
  1131  000AE6  0E00               	movlw	0
  1132  000AE8  6E37               	movwf	(main@cont+3)^0,c
  1133  000AEA                     
  1134                           ;main.c: 111:                         stoped = 0;
  1135  000AEA  0E00               	movlw	0
  1136  000AEC  6E31               	movwf	main@stoped^0,c
  1137  000AEE                     
  1138                           ;main.c: 112:                         lcdPosition(1, 0);
  1139  000AEE  0E00               	movlw	0
  1140  000AF0  6E10               	movwf	(lcdPosition@line+1)^0,c
  1141  000AF2  0E01               	movlw	1
  1142  000AF4  6E0F               	movwf	lcdPosition@line^0,c
  1143  000AF6  0E00               	movlw	0
  1144  000AF8  6E12               	movwf	(lcdPosition@col+1)^0,c
  1145  000AFA  0E00               	movlw	0
  1146  000AFC  6E11               	movwf	lcdPosition@col^0,c
  1147  000AFE  EC49  F00E         	call	_lcdPosition	;wreg free
  1148  000B02                     
  1149                           ;main.c: 113:                         lcdChar(' ');
  1150  000B02  0E20               	movlw	32
  1151  000B04  EC09  F00F         	call	_lcdChar
  1152  000B08                     
  1153                           ;main.c: 114:                         lcdChar(' ');
  1154  000B08  0E20               	movlw	32
  1155  000B0A  EC09  F00F         	call	_lcdChar
  1156  000B0E                     
  1157                           ;main.c: 115:                         lcdChar(' ');
  1158  000B0E  0E20               	movlw	32
  1159  000B10  EC09  F00F         	call	_lcdChar
  1160  000B14                     
  1161                           ;main.c: 116:                         lcdChar(' ');
  1162  000B14  0E20               	movlw	32
  1163  000B16  EC09  F00F         	call	_lcdChar
  1164  000B1A                     
  1165                           ;main.c: 117:                         lcdChar(' ');
  1166  000B1A  0E20               	movlw	32
  1167  000B1C  EC09  F00F         	call	_lcdChar
  1168  000B20                     
  1169                           ;main.c: 118:                         lcdChar(' ');
  1170  000B20  0E20               	movlw	32
  1171  000B22  EC09  F00F         	call	_lcdChar
  1172  000B26                     
  1173                           ;main.c: 119:                         lcdChar(' ');
  1174  000B26  0E20               	movlw	32
  1175  000B28  EC09  F00F         	call	_lcdChar
  1176  000B2C                     
  1177                           ;main.c: 120:                         lcdChar(' ');
  1178  000B2C  0E20               	movlw	32
  1179  000B2E  EC09  F00F         	call	_lcdChar
  1180  000B32                     
  1181                           ;main.c: 121:                         lcdChar(' ');
  1182  000B32  0E20               	movlw	32
  1183  000B34  EC09  F00F         	call	_lcdChar
  1184  000B38                     
  1185                           ;main.c: 122:                         lcdChar(' ');
  1186  000B38  0E20               	movlw	32
  1187  000B3A  EC09  F00F         	call	_lcdChar
  1188  000B3E                     
  1189                           ;main.c: 123:                         lcdChar(' ');
  1190  000B3E  0E20               	movlw	32
  1191  000B40  EC09  F00F         	call	_lcdChar
  1192  000B44                     
  1193                           ;main.c: 124:                         lcdChar(' ');
  1194  000B44  0E20               	movlw	32
  1195  000B46  EC09  F00F         	call	_lcdChar
  1196  000B4A                     
  1197                           ;main.c: 125:                         lcdChar(' ');
  1198  000B4A  0E20               	movlw	32
  1199  000B4C  EC09  F00F         	call	_lcdChar
  1200  000B50                     
  1201                           ;main.c: 126:                         lcdChar(' ');
  1202  000B50  0E20               	movlw	32
  1203  000B52  EC09  F00F         	call	_lcdChar
  1204  000B56                     
  1205                           ;main.c: 127:                         lcdChar(' ');
  1206  000B56  0E20               	movlw	32
  1207  000B58  EC09  F00F         	call	_lcdChar
  1208  000B5C                     
  1209                           ;main.c: 128:                         lcdChar(' ');
  1210  000B5C  0E20               	movlw	32
  1211  000B5E  EC09  F00F         	call	_lcdChar
  1212  000B62                     
  1213                           ;main.c: 129:                         lcdPosition(0, 9);
  1214  000B62  0E00               	movlw	0
  1215  000B64  6E10               	movwf	(lcdPosition@line+1)^0,c
  1216  000B66  0E00               	movlw	0
  1217  000B68  6E0F               	movwf	lcdPosition@line^0,c
  1218  000B6A  0E00               	movlw	0
  1219  000B6C  6E12               	movwf	(lcdPosition@col+1)^0,c
  1220  000B6E  0E09               	movlw	9
  1221  000B70  6E11               	movwf	lcdPosition@col^0,c
  1222  000B72  EC49  F00E         	call	_lcdPosition	;wreg free
  1223  000B76                     
  1224                           ;main.c: 130:                         lcdChar(' ');
  1225  000B76  0E20               	movlw	32
  1226  000B78  EC09  F00F         	call	_lcdChar
  1227  000B7C                     
  1228                           ;main.c: 131:                         lcdChar(' ');
  1229  000B7C  0E20               	movlw	32
  1230  000B7E  EC09  F00F         	call	_lcdChar
  1231  000B82                     
  1232                           ;main.c: 132:                         lcdChar(' ');
  1233  000B82  0E20               	movlw	32
  1234  000B84  EC09  F00F         	call	_lcdChar
  1235  000B88                     
  1236                           ;main.c: 133:                         lcdChar(' ');
  1237  000B88  0E20               	movlw	32
  1238  000B8A  EC09  F00F         	call	_lcdChar
  1239  000B8E                     
  1240                           ;main.c: 134:                         lcdChar(' ');
  1241  000B8E  0E20               	movlw	32
  1242  000B90  EC09  F00F         	call	_lcdChar
  1243  000B94                     
  1244                           ;main.c: 135:                         lcdChar(' ');
  1245  000B94  0E20               	movlw	32
  1246  000B96  EC09  F00F         	call	_lcdChar
  1247  000B9A                     
  1248                           ;main.c: 136:                         lcdChar(' ');
  1249  000B9A  0E20               	movlw	32
  1250  000B9C  EC09  F00F         	call	_lcdChar
  1251  000BA0                     
  1252                           ;main.c: 137:                         lcdChar(' ');
  1253  000BA0  0E20               	movlw	32
  1254  000BA2  EC09  F00F         	call	_lcdChar
  1255  000BA6                     l3079:
  1256                           
  1257                           ;main.c: 140:                     if(((tecla) & (1<<(2)))){
  1258  000BA6  A432               	btfss	main@tecla^0,2,c
  1259  000BA8  EFD8  F005         	goto	u2531
  1260  000BAC  EFDA  F005         	goto	u2530
  1261  000BB0                     u2531:
  1262  000BB0  EF47  F006         	goto	l3137
  1263  000BB4                     u2530:
  1264  000BB4                     
  1265                           ;main.c: 141:                         if(cont!=0){
  1266  000BB4  5034               	movf	main@cont^0,w,c
  1267  000BB6  1035               	iorwf	(main@cont+1)^0,w,c
  1268  000BB8  1036               	iorwf	(main@cont+2)^0,w,c
  1269  000BBA  1037               	iorwf	(main@cont+3)^0,w,c
  1270  000BBC  B4D8               	btfsc	status,2,c
  1271  000BBE  EFE3  F005         	goto	u2541
  1272  000BC2  EFE5  F005         	goto	u2540
  1273  000BC6                     u2541:
  1274  000BC6  EF47  F006         	goto	l3137
  1275  000BCA                     u2540:
  1276  000BCA                     
  1277                           ;main.c: 142:                             stoped = 0;
  1278  000BCA  0E00               	movlw	0
  1279  000BCC  6E31               	movwf	main@stoped^0,c
  1280  000BCE                     
  1281                           ;main.c: 143:                             lcdPosition(0, 9);
  1282  000BCE  0E00               	movlw	0
  1283  000BD0  6E10               	movwf	(lcdPosition@line+1)^0,c
  1284  000BD2  0E00               	movlw	0
  1285  000BD4  6E0F               	movwf	lcdPosition@line^0,c
  1286  000BD6  0E00               	movlw	0
  1287  000BD8  6E12               	movwf	(lcdPosition@col+1)^0,c
  1288  000BDA  0E09               	movlw	9
  1289  000BDC  6E11               	movwf	lcdPosition@col^0,c
  1290  000BDE  EC49  F00E         	call	_lcdPosition	;wreg free
  1291  000BE2                     
  1292                           ;main.c: 144:                             lcdChar('K');
  1293  000BE2  0E4B               	movlw	75
  1294  000BE4  EC09  F00F         	call	_lcdChar
  1295  000BE8                     
  1296                           ;main.c: 145:                             lcdChar('.');
  1297  000BE8  0E2E               	movlw	46
  1298  000BEA  EC09  F00F         	call	_lcdChar
  1299  000BEE                     
  1300                           ;main.c: 146:                             lcdChar('O');
  1301  000BEE  0E4F               	movlw	79
  1302  000BF0  EC09  F00F         	call	_lcdChar
  1303  000BF4                     
  1304                           ;main.c: 147:                             lcdChar('!');
  1305  000BF4  0E21               	movlw	33
  1306  000BF6  EC09  F00F         	call	_lcdChar
  1307  000BFA                     
  1308                           ;main.c: 148:                             lcdChar('!');
  1309  000BFA  0E21               	movlw	33
  1310  000BFC  EC09  F00F         	call	_lcdChar
  1311  000C00                     
  1312                           ;main.c: 149:                             lcdChar(' ');
  1313  000C00  0E20               	movlw	32
  1314  000C02  EC09  F00F         	call	_lcdChar
  1315  000C06                     
  1316                           ;main.c: 150:                             lcdChar(' ');
  1317  000C06  0E20               	movlw	32
  1318  000C08  EC09  F00F         	call	_lcdChar
  1319  000C0C                     
  1320                           ;main.c: 151:                             lcdChar(' ');
  1321  000C0C  0E20               	movlw	32
  1322  000C0E  EC09  F00F         	call	_lcdChar
  1323  000C12                     
  1324                           ;main.c: 152:                             lcdPosition(1, 0);
  1325  000C12  0E00               	movlw	0
  1326  000C14  6E10               	movwf	(lcdPosition@line+1)^0,c
  1327  000C16  0E01               	movlw	1
  1328  000C18  6E0F               	movwf	lcdPosition@line^0,c
  1329  000C1A  0E00               	movlw	0
  1330  000C1C  6E12               	movwf	(lcdPosition@col+1)^0,c
  1331  000C1E  0E00               	movlw	0
  1332  000C20  6E11               	movwf	lcdPosition@col^0,c
  1333  000C22  EC49  F00E         	call	_lcdPosition	;wreg free
  1334  000C26                     
  1335                           ;main.c: 153:                             lcdChar('E');
  1336  000C26  0E45               	movlw	69
  1337  000C28  EC09  F00F         	call	_lcdChar
  1338  000C2C                     
  1339                           ;main.c: 154:                             lcdChar('N');
  1340  000C2C  0E4E               	movlw	78
  1341  000C2E  EC09  F00F         	call	_lcdChar
  1342  000C32                     
  1343                           ;main.c: 155:                             lcdChar('D');
  1344  000C32  0E44               	movlw	68
  1345  000C34  EC09  F00F         	call	_lcdChar
  1346  000C38                     
  1347                           ;main.c: 156:                             lcdChar(' ');
  1348  000C38  0E20               	movlw	32
  1349  000C3A  EC09  F00F         	call	_lcdChar
  1350  000C3E                     
  1351                           ;main.c: 157:                             lcdChar('O');
  1352  000C3E  0E4F               	movlw	79
  1353  000C40  EC09  F00F         	call	_lcdChar
  1354  000C44                     
  1355                           ;main.c: 158:                             lcdChar('F');
  1356  000C44  0E46               	movlw	70
  1357  000C46  EC09  F00F         	call	_lcdChar
  1358  000C4A                     
  1359                           ;main.c: 159:                             lcdChar(' ');
  1360  000C4A  0E20               	movlw	32
  1361  000C4C  EC09  F00F         	call	_lcdChar
  1362  000C50                     
  1363                           ;main.c: 160:                             lcdChar('F');
  1364  000C50  0E46               	movlw	70
  1365  000C52  EC09  F00F         	call	_lcdChar
  1366  000C56                     
  1367                           ;main.c: 161:                             lcdChar('I');
  1368  000C56  0E49               	movlw	73
  1369  000C58  EC09  F00F         	call	_lcdChar
  1370  000C5C                     
  1371                           ;main.c: 162:                             lcdChar('G');
  1372  000C5C  0E47               	movlw	71
  1373  000C5E  EC09  F00F         	call	_lcdChar
  1374  000C62                     
  1375                           ;main.c: 163:                             lcdChar('H');
  1376  000C62  0E48               	movlw	72
  1377  000C64  EC09  F00F         	call	_lcdChar
  1378  000C68                     
  1379                           ;main.c: 164:                             lcdChar('T');
  1380  000C68  0E54               	movlw	84
  1381  000C6A  EC09  F00F         	call	_lcdChar
  1382  000C6E                     
  1383                           ;main.c: 165:                             lcdChar(' ');
  1384  000C6E  0E20               	movlw	32
  1385  000C70  EC09  F00F         	call	_lcdChar
  1386  000C74                     
  1387                           ;main.c: 166:                             lcdChar('!');
  1388  000C74  0E21               	movlw	33
  1389  000C76  EC09  F00F         	call	_lcdChar
  1390  000C7A                     
  1391                           ;main.c: 167:                             lcdChar('!');
  1392  000C7A  0E21               	movlw	33
  1393  000C7C  EC09  F00F         	call	_lcdChar
  1394  000C80                     
  1395                           ;main.c: 168:                             lcdChar('!');
  1396  000C80  0E21               	movlw	33
  1397  000C82  EC09  F00F         	call	_lcdChar
  1398                           
  1399                           ;main.c: 172:                             win = 1;
  1400  000C86  0E00               	movlw	0
  1401  000C88  6E26               	movwf	(main@win+1)^0,c
  1402  000C8A  0E01               	movlw	1
  1403  000C8C  6E25               	movwf	main@win^0,c
  1404  000C8E                     l3137:
  1405                           
  1406                           ;main.c: 177:                     if(((tecla) & (1<<(3)))){
  1407  000C8E  A632               	btfss	main@tecla^0,3,c
  1408  000C90  EF4C  F006         	goto	u2551
  1409  000C94  EF4E  F006         	goto	u2550
  1410  000C98                     u2551:
  1411  000C98  EF6B  F006         	goto	l536
  1412  000C9C                     u2550:
  1413  000C9C                     
  1414                           ;main.c: 178:                         if (round < 5)
  1415  000C9C  502B               	movf	(main@round+3)^0,w,c
  1416  000C9E  102A               	iorwf	(main@round+2)^0,w,c
  1417  000CA0  1029               	iorwf	(main@round+1)^0,w,c
  1418  000CA2  E107               	bnz	u2561
  1419  000CA4  0E05               	movlw	5
  1420  000CA6  5C28               	subwf	main@round^0,w,c
  1421  000CA8  B0D8               	btfsc	status,0,c
  1422  000CAA  EF59  F006         	goto	u2561
  1423  000CAE  EF5B  F006         	goto	u2560
  1424  000CB2                     u2561:
  1425  000CB2  EF63  F006         	goto	l3143
  1426  000CB6                     u2560:
  1427  000CB6                     
  1428                           ;main.c: 179:                             round ++;
  1429  000CB6  0E01               	movlw	1
  1430  000CB8  2628               	addwf	main@round^0,f,c
  1431  000CBA  0E00               	movlw	0
  1432  000CBC  2229               	addwfc	(main@round+1)^0,f,c
  1433  000CBE  222A               	addwfc	(main@round+2)^0,f,c
  1434  000CC0  222B               	addwfc	(main@round+3)^0,f,c
  1435  000CC2  EF6B  F006         	goto	l536
  1436  000CC6                     l3143:
  1437  000CC6  0E01               	movlw	1
  1438  000CC8  6E28               	movwf	main@round^0,c
  1439  000CCA  0E00               	movlw	0
  1440  000CCC  6E29               	movwf	(main@round+1)^0,c
  1441  000CCE  0E00               	movlw	0
  1442  000CD0  6E2A               	movwf	(main@round+2)^0,c
  1443  000CD2  0E00               	movlw	0
  1444  000CD4  6E2B               	movwf	(main@round+3)^0,c
  1445  000CD6                     l536:
  1446                           
  1447                           ;main.c: 184:                 op = 3;
  1448  000CD6  0E03               	movlw	3
  1449  000CD8  6E27               	movwf	main@op^0,c
  1450                           
  1451                           ;main.c: 185:                 break;
  1452  000CDA  EF3E  F003         	goto	l2919
  1453  000CDE                     l3145:
  1454                           
  1455                           ;main.c: 188:                 ssdDigit(0, 0);
  1456  000CDE  0E00               	movlw	0
  1457  000CE0  6E01               	movwf	ssdDigit@pos^0,c
  1458  000CE2  0E00               	movlw	0
  1459  000CE4  EC67  F00D         	call	_ssdDigit
  1460                           
  1461                           ;main.c: 189:                 ssdDigit(0, 1);
  1462  000CE8  0E01               	movlw	1
  1463  000CEA  6E01               	movwf	ssdDigit@pos^0,c
  1464  000CEC  0E00               	movlw	0
  1465  000CEE  EC67  F00D         	call	_ssdDigit
  1466                           
  1467                           ;main.c: 190:                 ssdDigit(0, 2);
  1468  000CF2  0E02               	movlw	2
  1469  000CF4  6E01               	movwf	ssdDigit@pos^0,c
  1470  000CF6  0E00               	movlw	0
  1471  000CF8  EC67  F00D         	call	_ssdDigit
  1472                           
  1473                           ;main.c: 191:                 ssdDigit(round, 3);
  1474  000CFC  0E03               	movlw	3
  1475  000CFE  6E01               	movwf	ssdDigit@pos^0,c
  1476  000D00  5028               	movf	main@round^0,w,c
  1477  000D02  EC67  F00D         	call	_ssdDigit
  1478  000D06                     
  1479                           ;main.c: 193:                 for(char i=0; i<50; i++)
  1480  000D06  0E00               	movlw	0
  1481  000D08  6E30               	movwf	main@i_615^0,c
  1482  000D0A                     l3159:
  1483                           
  1484                           ;main.c: 197:             op = 0;
  1485  000D0A  0E00               	movlw	0
  1486  000D0C  6E27               	movwf	main@op^0,c
  1487                           
  1488                           ;main.c: 198:             break;
  1489  000D0E  EF3E  F003         	goto	l2919
  1490  000D12                     l3163:
  1491  000D12  5027               	movf	main@op^0,w,c
  1492  000D14  6E17               	movwf	??_main^0,c
  1493  000D16  6A18               	clrf	(??_main+1)^0,c
  1494                           
  1495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1496                           ; Switch size 1, requested type "simple"
  1497                           ; Number of cases is 1, Range of values is 0 to 0
  1498                           ; switch strategies available:
  1499                           ; Name         Instructions Cycles
  1500                           ; simple_byte            4     3 (average)
  1501                           ;	Chosen strategy is simple_byte
  1502  000D18  5018               	movf	(??_main+1)^0,w,c
  1503  000D1A  0A00               	xorlw	0	; case 0
  1504  000D1C  B4D8               	btfsc	status,2,c
  1505  000D1E  EF93  F006         	goto	l3177
  1506  000D22  EF85  F006         	goto	l3159
  1507  000D26                     l3177:
  1508                           
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 4, Range of values is 0 to 3
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte           13     7 (average)
  1514                           ;	Chosen strategy is simple_byte
  1515  000D26  5017               	movf	??_main^0,w,c
  1516  000D28  0A00               	xorlw	0	; case 0
  1517  000D2A  B4D8               	btfsc	status,2,c
  1518  000D2C  EF42  F003         	goto	l2921
  1519  000D30  0A01               	xorlw	1	; case 1
  1520  000D32  B4D8               	btfsc	status,2,c
  1521  000D34  EF23  F005         	goto	l2995
  1522  000D38  0A03               	xorlw	3	; case 2
  1523  000D3A  B4D8               	btfsc	status,2,c
  1524  000D3C  EF29  F005         	goto	l2999
  1525  000D40  0A01               	xorlw	1	; case 3
  1526  000D42  B4D8               	btfsc	status,2,c
  1527  000D44  EF6F  F006         	goto	l3145
  1528  000D48  EF85  F006         	goto	l3159
  1529  000D4C  EF00  F000         	goto	start
  1530  000D50                     __end_of_main:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _timerInit *****************
  1534 ;; Defined at:
  1535 ;;		line 55 in file "timer.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1549 ;;      Params:         0       0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text1
  1563  001E6A                     __ptext1:
  1564                           	callstack 0
  1565  001E6A                     _timerInit:
  1566                           	callstack 30
  1567  001E6A                     
  1568                           ;timer.c: 57:  T0CON = 0b00001000;
  1569  001E6A  0E08               	movlw	8
  1570  001E6C  6ED5               	movwf	213,c	;volatile
  1571  001E6E                     
  1572                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1573  001E6E  8ED5               	bsf	213,7,c	;volatile
  1574  001E70  0012               	return		;funcret
  1575  001E72                     __end_of_timerInit:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _ssdUpdate *****************
  1579 ;; Defined at:
  1580 ;;		line 50 in file "ssd.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          2       0       0       0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 3
  1601 ;; This function calls:
  1602 ;;		_digitalWrite
  1603 ;;		_soWrite
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text2
  1610  0011EC                     __ptext2:
  1611                           	callstack 0
  1612  0011EC                     _ssdUpdate:
  1613                           	callstack 27
  1614  0011EC                     
  1615                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1616  0011EC  0E00               	movlw	0
  1617  0011EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1618  0011F0  0E18               	movlw	24
  1619  0011F2  6E01               	movwf	digitalWrite@pin^0,c
  1620  0011F4  0E00               	movlw	0
  1621  0011F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1622  0011F8  0E00               	movlw	0
  1623  0011FA  6E03               	movwf	digitalWrite@value^0,c
  1624  0011FC  ECA8  F006         	call	_digitalWrite	;wreg free
  1625                           
  1626                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1627  001200  0E00               	movlw	0
  1628  001202  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1629  001204  0E19               	movlw	25
  1630  001206  6E01               	movwf	digitalWrite@pin^0,c
  1631  001208  0E00               	movlw	0
  1632  00120A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1633  00120C  0E00               	movlw	0
  1634  00120E  6E03               	movwf	digitalWrite@value^0,c
  1635  001210  ECA8  F006         	call	_digitalWrite	;wreg free
  1636                           
  1637                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1638  001214  0E00               	movlw	0
  1639  001216  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1640  001218  0E1A               	movlw	26
  1641  00121A  6E01               	movwf	digitalWrite@pin^0,c
  1642  00121C  0E00               	movlw	0
  1643  00121E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1644  001220  0E00               	movlw	0
  1645  001222  6E03               	movwf	digitalWrite@value^0,c
  1646  001224  ECA8  F006         	call	_digitalWrite	;wreg free
  1647                           
  1648                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1649  001228  0E00               	movlw	0
  1650  00122A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1651  00122C  0E1B               	movlw	27
  1652  00122E  6E01               	movwf	digitalWrite@pin^0,c
  1653  001230  0E00               	movlw	0
  1654  001232  6E04               	movwf	(digitalWrite@value+1)^0,c
  1655  001234  0E00               	movlw	0
  1656  001236  6E03               	movwf	digitalWrite@value^0,c
  1657  001238  ECA8  F006         	call	_digitalWrite	;wreg free
  1658                           
  1659                           ;ssd.c: 60:     soWrite(0x00);
  1660  00123C  0E00               	movlw	0
  1661  00123E  6E08               	movwf	(soWrite@value+1)^0,c
  1662  001240  0E00               	movlw	0
  1663  001242  6E07               	movwf	soWrite@value^0,c
  1664  001244  ECBE  F00D         	call	_soWrite	;wreg free
  1665                           
  1666                           ;ssd.c: 62:     switch (display)
  1667  001248  EF8E  F009         	goto	l2747
  1668  00124C                     l2719:
  1669                           
  1670                           ;ssd.c: 65:             soWrite(valor[v0]);
  1671  00124C  0E01               	movlw	low _valor
  1672  00124E  2441               	addwf	_v0^0,w,c
  1673  001250  6EF6               	movwf	tblptrl,c
  1674  001252  6AF7               	clrf	tblptrh,c
  1675  001254  0E06               	movlw	high _valor
  1676  001256  22F7               	addwfc	tblptrh,f,c
  1677  001258                     	if	0	;There are less than 3 active tblptr bytes
  1678  001258                     	endif
  1679  001258  0008               	tblrd		*
  1680  00125A  50F5               	movf	tablat,w,c
  1681  00125C  6E07               	movwf	soWrite@value^0,c
  1682  00125E  6A08               	clrf	(soWrite@value+1)^0,c
  1683  001260  ECBE  F00D         	call	_soWrite	;wreg free
  1684  001264                     
  1685                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1686  001264  0E00               	movlw	0
  1687  001266  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1688  001268  0E18               	movlw	24
  1689  00126A  6E01               	movwf	digitalWrite@pin^0,c
  1690  00126C  0E00               	movlw	0
  1691  00126E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1692  001270  0E01               	movlw	1
  1693  001272  6E03               	movwf	digitalWrite@value^0,c
  1694  001274  ECA8  F006         	call	_digitalWrite	;wreg free
  1695  001278                     
  1696                           ;ssd.c: 67:             display = 1;
  1697  001278  0E01               	movlw	1
  1698  00127A  6E42               	movwf	_display^0,c
  1699                           
  1700                           ;ssd.c: 68:             break;
  1701  00127C  EFAB  F009         	goto	l423
  1702  001280                     l2725:
  1703                           
  1704                           ;ssd.c: 71:             soWrite(valor[v1]);
  1705  001280  0E01               	movlw	low _valor
  1706  001282  2440               	addwf	_v1^0,w,c
  1707  001284  6EF6               	movwf	tblptrl,c
  1708  001286  6AF7               	clrf	tblptrh,c
  1709  001288  0E06               	movlw	high _valor
  1710  00128A  22F7               	addwfc	tblptrh,f,c
  1711  00128C                     	if	0	;There are less than 3 active tblptr bytes
  1712  00128C                     	endif
  1713  00128C  0008               	tblrd		*
  1714  00128E  50F5               	movf	tablat,w,c
  1715  001290  6E07               	movwf	soWrite@value^0,c
  1716  001292  6A08               	clrf	(soWrite@value+1)^0,c
  1717  001294  ECBE  F00D         	call	_soWrite	;wreg free
  1718  001298                     
  1719                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1720  001298  0E00               	movlw	0
  1721  00129A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1722  00129C  0E19               	movlw	25
  1723  00129E  6E01               	movwf	digitalWrite@pin^0,c
  1724  0012A0  0E00               	movlw	0
  1725  0012A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1726  0012A4  0E01               	movlw	1
  1727  0012A6  6E03               	movwf	digitalWrite@value^0,c
  1728  0012A8  ECA8  F006         	call	_digitalWrite	;wreg free
  1729  0012AC                     
  1730                           ;ssd.c: 73:             display = 2;
  1731  0012AC  0E02               	movlw	2
  1732  0012AE  6E42               	movwf	_display^0,c
  1733                           
  1734                           ;ssd.c: 74:             break;
  1735  0012B0  EFAB  F009         	goto	l423
  1736  0012B4                     l2731:
  1737                           
  1738                           ;ssd.c: 77:             soWrite(valor[v2]);
  1739  0012B4  0E01               	movlw	low _valor
  1740  0012B6  243F               	addwf	_v2^0,w,c
  1741  0012B8  6EF6               	movwf	tblptrl,c
  1742  0012BA  6AF7               	clrf	tblptrh,c
  1743  0012BC  0E06               	movlw	high _valor
  1744  0012BE  22F7               	addwfc	tblptrh,f,c
  1745  0012C0                     	if	0	;There are less than 3 active tblptr bytes
  1746  0012C0                     	endif
  1747  0012C0  0008               	tblrd		*
  1748  0012C2  50F5               	movf	tablat,w,c
  1749  0012C4  6E07               	movwf	soWrite@value^0,c
  1750  0012C6  6A08               	clrf	(soWrite@value+1)^0,c
  1751  0012C8  ECBE  F00D         	call	_soWrite	;wreg free
  1752  0012CC                     
  1753                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1754  0012CC  0E00               	movlw	0
  1755  0012CE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1756  0012D0  0E1A               	movlw	26
  1757  0012D2  6E01               	movwf	digitalWrite@pin^0,c
  1758  0012D4  0E00               	movlw	0
  1759  0012D6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1760  0012D8  0E01               	movlw	1
  1761  0012DA  6E03               	movwf	digitalWrite@value^0,c
  1762  0012DC  ECA8  F006         	call	_digitalWrite	;wreg free
  1763  0012E0                     
  1764                           ;ssd.c: 79:             display = 3;
  1765  0012E0  0E03               	movlw	3
  1766  0012E2  6E42               	movwf	_display^0,c
  1767                           
  1768                           ;ssd.c: 80:             break;
  1769  0012E4  EFAB  F009         	goto	l423
  1770  0012E8                     l2737:
  1771                           
  1772                           ;ssd.c: 83:             soWrite(valor[v3]);
  1773  0012E8  0E01               	movlw	low _valor
  1774  0012EA  243E               	addwf	_v3^0,w,c
  1775  0012EC  6EF6               	movwf	tblptrl,c
  1776  0012EE  6AF7               	clrf	tblptrh,c
  1777  0012F0  0E06               	movlw	high _valor
  1778  0012F2  22F7               	addwfc	tblptrh,f,c
  1779  0012F4                     	if	0	;There are less than 3 active tblptr bytes
  1780  0012F4                     	endif
  1781  0012F4  0008               	tblrd		*
  1782  0012F6  50F5               	movf	tablat,w,c
  1783  0012F8  6E07               	movwf	soWrite@value^0,c
  1784  0012FA  6A08               	clrf	(soWrite@value+1)^0,c
  1785  0012FC  ECBE  F00D         	call	_soWrite	;wreg free
  1786  001300                     
  1787                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1788  001300  0E00               	movlw	0
  1789  001302  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1790  001304  0E1B               	movlw	27
  1791  001306  6E01               	movwf	digitalWrite@pin^0,c
  1792  001308  0E00               	movlw	0
  1793  00130A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1794  00130C  0E01               	movlw	1
  1795  00130E  6E03               	movwf	digitalWrite@value^0,c
  1796  001310  ECA8  F006         	call	_digitalWrite	;wreg free
  1797  001314                     l2741:
  1798                           
  1799                           ;ssd.c: 85:             display = 0;
  1800  001314  0E00               	movlw	0
  1801  001316  6E42               	movwf	_display^0,c
  1802                           
  1803                           ;ssd.c: 86:             break;
  1804  001318  EFAB  F009         	goto	l423
  1805  00131C                     l2747:
  1806  00131C  5042               	movf	_display^0,w,c
  1807  00131E  6E0A               	movwf	??_ssdUpdate^0,c
  1808  001320  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1809                           
  1810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 1, Range of values is 0 to 0
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            4     3 (average)
  1816                           ;	Chosen strategy is simple_byte
  1817  001322  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1818  001324  0A00               	xorlw	0	; case 0
  1819  001326  B4D8               	btfsc	status,2,c
  1820  001328  EF98  F009         	goto	l3179
  1821  00132C  EF8A  F009         	goto	l2741
  1822  001330                     l3179:
  1823                           
  1824                           ; Switch size 1, requested type "simple"
  1825                           ; Number of cases is 4, Range of values is 0 to 3
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte           13     7 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830  001330  500A               	movf	??_ssdUpdate^0,w,c
  1831  001332  0A00               	xorlw	0	; case 0
  1832  001334  B4D8               	btfsc	status,2,c
  1833  001336  EF26  F009         	goto	l2719
  1834  00133A  0A01               	xorlw	1	; case 1
  1835  00133C  B4D8               	btfsc	status,2,c
  1836  00133E  EF40  F009         	goto	l2725
  1837  001342  0A03               	xorlw	3	; case 2
  1838  001344  B4D8               	btfsc	status,2,c
  1839  001346  EF5A  F009         	goto	l2731
  1840  00134A  0A01               	xorlw	1	; case 3
  1841  00134C  B4D8               	btfsc	status,2,c
  1842  00134E  EF74  F009         	goto	l2737
  1843  001352  EF8A  F009         	goto	l2741
  1844  001356                     l423:
  1845  001356  0012               	return		;funcret
  1846  001358                     __end_of_ssdUpdate:
  1847                           	callstack 0
  1848                           
  1849 ;; *************** function _ssdInit *****************
  1850 ;; Defined at:
  1851 ;;		line 94 in file "ssd.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;		None
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, status,2, status,0, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1865 ;;      Params:         0       0       0       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0
  1868 ;;      Totals:         0       0       0       0       0       0       0
  1869 ;;Total ram usage:        0 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 2
  1872 ;; This function calls:
  1873 ;;		_pinMode
  1874 ;;		_soInit
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           	psect	text3
  1881  001B26                     __ptext3:
  1882                           	callstack 0
  1883  001B26                     _ssdInit:
  1884                           	callstack 28
  1885  001B26                     
  1886                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1887  001B26  0E00               	movlw	0
  1888  001B28  6E02               	movwf	(pinMode@pin+1)^0,c
  1889  001B2A  0E18               	movlw	24
  1890  001B2C  6E01               	movwf	pinMode@pin^0,c
  1891  001B2E  0E00               	movlw	0
  1892  001B30  6E04               	movwf	(pinMode@type+1)^0,c
  1893  001B32  0E00               	movlw	0
  1894  001B34  6E03               	movwf	pinMode@type^0,c
  1895  001B36  ECCF  F007         	call	_pinMode	;wreg free
  1896                           
  1897                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1898  001B3A  0E00               	movlw	0
  1899  001B3C  6E02               	movwf	(pinMode@pin+1)^0,c
  1900  001B3E  0E19               	movlw	25
  1901  001B40  6E01               	movwf	pinMode@pin^0,c
  1902  001B42  0E00               	movlw	0
  1903  001B44  6E04               	movwf	(pinMode@type+1)^0,c
  1904  001B46  0E00               	movlw	0
  1905  001B48  6E03               	movwf	pinMode@type^0,c
  1906  001B4A  ECCF  F007         	call	_pinMode	;wreg free
  1907                           
  1908                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1909  001B4E  0E00               	movlw	0
  1910  001B50  6E02               	movwf	(pinMode@pin+1)^0,c
  1911  001B52  0E1A               	movlw	26
  1912  001B54  6E01               	movwf	pinMode@pin^0,c
  1913  001B56  0E00               	movlw	0
  1914  001B58  6E04               	movwf	(pinMode@type+1)^0,c
  1915  001B5A  0E00               	movlw	0
  1916  001B5C  6E03               	movwf	pinMode@type^0,c
  1917  001B5E  ECCF  F007         	call	_pinMode	;wreg free
  1918                           
  1919                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1920  001B62  0E00               	movlw	0
  1921  001B64  6E02               	movwf	(pinMode@pin+1)^0,c
  1922  001B66  0E1B               	movlw	27
  1923  001B68  6E01               	movwf	pinMode@pin^0,c
  1924  001B6A  0E00               	movlw	0
  1925  001B6C  6E04               	movwf	(pinMode@type+1)^0,c
  1926  001B6E  0E00               	movlw	0
  1927  001B70  6E03               	movwf	pinMode@type^0,c
  1928  001B72  ECCF  F007         	call	_pinMode	;wreg free
  1929                           
  1930                           ;ssd.c: 102:     soInit();
  1931  001B76  EC2A  F00E         	call	_soInit	;wreg free
  1932  001B7A  0012               	return		;funcret
  1933  001B7C                     __end_of_ssdInit:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _ssdDigit *****************
  1937 ;; Defined at:
  1938 ;;		line 34 in file "ssd.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  val             1    wreg     unsigned char 
  1941 ;;  pos             1    0[COMRAM] unsigned char 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  val             1    1[COMRAM] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1953 ;;      Params:         1       0       0       0       0       0       0
  1954 ;;      Locals:         1       0       0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0
  1956 ;;      Totals:         2       0       0       0       0       0       0
  1957 ;;Total ram usage:        2 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text4
  1967  001ACE                     __ptext4:
  1968                           	callstack 0
  1969  001ACE                     _ssdDigit:
  1970                           	callstack 30
  1971                           
  1972                           ;incstack = 0
  1973                           ;ssdDigit@val stored from wreg
  1974  001ACE  6E02               	movwf	ssdDigit@val^0,c
  1975  001AD0                     
  1976                           ;ssd.c: 35:     if (pos == 0) {
  1977  001AD0  5001               	movf	ssdDigit@pos^0,w,c
  1978  001AD2  A4D8               	btfss	status,2,c
  1979  001AD4  EF6E  F00D         	goto	u2201
  1980  001AD8  EF70  F00D         	goto	u2200
  1981  001ADC                     u2201:
  1982  001ADC  EF72  F00D         	goto	l2705
  1983  001AE0                     u2200:
  1984  001AE0                     
  1985                           ;ssd.c: 36:         v0 = val;
  1986  001AE0  C002  F041         	movff	ssdDigit@val,_v0
  1987  001AE4                     l2705:
  1988                           
  1989                           ;ssd.c: 38:     if (pos == 1) {
  1990  001AE4  0401               	decf	ssdDigit@pos^0,w,c
  1991  001AE6  A4D8               	btfss	status,2,c
  1992  001AE8  EF78  F00D         	goto	u2211
  1993  001AEC  EF7A  F00D         	goto	u2210
  1994  001AF0                     u2211:
  1995  001AF0  EF7C  F00D         	goto	l2709
  1996  001AF4                     u2210:
  1997  001AF4                     
  1998                           ;ssd.c: 39:         v1 = val;
  1999  001AF4  C002  F040         	movff	ssdDigit@val,_v1
  2000  001AF8                     l2709:
  2001                           
  2002                           ;ssd.c: 41:     if (pos == 2) {
  2003  001AF8  0E02               	movlw	2
  2004  001AFA  1801               	xorwf	ssdDigit@pos^0,w,c
  2005  001AFC  A4D8               	btfss	status,2,c
  2006  001AFE  EF83  F00D         	goto	u2221
  2007  001B02  EF85  F00D         	goto	u2220
  2008  001B06                     u2221:
  2009  001B06  EF87  F00D         	goto	l2713
  2010  001B0A                     u2220:
  2011  001B0A                     
  2012                           ;ssd.c: 42:         v2 = val;
  2013  001B0A  C002  F03F         	movff	ssdDigit@val,_v2
  2014  001B0E                     l2713:
  2015                           
  2016                           ;ssd.c: 44:     if (pos == 3) {
  2017  001B0E  0E03               	movlw	3
  2018  001B10  1801               	xorwf	ssdDigit@pos^0,w,c
  2019  001B12  A4D8               	btfss	status,2,c
  2020  001B14  EF8E  F00D         	goto	u2231
  2021  001B18  EF90  F00D         	goto	u2230
  2022  001B1C                     u2231:
  2023  001B1C  EF92  F00D         	goto	l413
  2024  001B20                     u2230:
  2025  001B20                     
  2026                           ;ssd.c: 45:         v3 = val;
  2027  001B20  C002  F03E         	movff	ssdDigit@val,_v3
  2028  001B24                     l413:
  2029  001B24  0012               	return		;funcret
  2030  001B26                     __end_of_ssdDigit:
  2031                           	callstack 0
  2032                           
  2033 ;; *************** function _rgbColor *****************
  2034 ;; Defined at:
  2035 ;;		line 3 in file "rgb.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  led             2    6[COMRAM] int 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2049 ;;      Params:         2       0       0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0
  2052 ;;      Totals:         2       0       0       0       0       0       0
  2053 ;;Total ram usage:        2 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 1
  2056 ;; This function calls:
  2057 ;;		_digitalWrite
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text5
  2064  0017B8                     __ptext5:
  2065                           	callstack 0
  2066  0017B8                     _rgbColor:
  2067                           	callstack 29
  2068  0017B8                     
  2069                           ;rgb.c: 4:  if (led & 1) {
  2070  0017B8  A007               	btfss	rgbColor@led^0,0,c
  2071  0017BA  EFE1  F00B         	goto	u2171
  2072  0017BE  EFE3  F00B         	goto	u2170
  2073  0017C2                     u2171:
  2074  0017C2  EFEF  F00B         	goto	l2687
  2075  0017C6                     u2170:
  2076  0017C6                     
  2077                           ;rgb.c: 5:   digitalWrite(PIN_D0, 1);
  2078  0017C6  0E00               	movlw	0
  2079  0017C8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2080  0017CA  0E18               	movlw	24
  2081  0017CC  6E01               	movwf	digitalWrite@pin^0,c
  2082  0017CE  0E00               	movlw	0
  2083  0017D0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2084  0017D2  0E01               	movlw	1
  2085  0017D4  6E03               	movwf	digitalWrite@value^0,c
  2086  0017D6  ECA8  F006         	call	_digitalWrite	;wreg free
  2087                           
  2088                           ;rgb.c: 6:  } else {
  2089  0017DA  EFF9  F00B         	goto	l2689
  2090  0017DE                     l2687:
  2091                           
  2092                           ;rgb.c: 7:   digitalWrite(PIN_D0, 0);
  2093  0017DE  0E00               	movlw	0
  2094  0017E0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2095  0017E2  0E18               	movlw	24
  2096  0017E4  6E01               	movwf	digitalWrite@pin^0,c
  2097  0017E6  0E00               	movlw	0
  2098  0017E8  6E04               	movwf	(digitalWrite@value+1)^0,c
  2099  0017EA  0E00               	movlw	0
  2100  0017EC  6E03               	movwf	digitalWrite@value^0,c
  2101  0017EE  ECA8  F006         	call	_digitalWrite	;wreg free
  2102  0017F2                     l2689:
  2103                           
  2104                           ;rgb.c: 9:  if (led & 2) {
  2105  0017F2  A207               	btfss	rgbColor@led^0,1,c
  2106  0017F4  EFFE  F00B         	goto	u2181
  2107  0017F8  EF00  F00C         	goto	u2180
  2108  0017FC                     u2181:
  2109  0017FC  EF0C  F00C         	goto	l2693
  2110  001800                     u2180:
  2111  001800                     
  2112                           ;rgb.c: 10:   digitalWrite(PIN_D1, 1);
  2113  001800  0E00               	movlw	0
  2114  001802  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2115  001804  0E19               	movlw	25
  2116  001806  6E01               	movwf	digitalWrite@pin^0,c
  2117  001808  0E00               	movlw	0
  2118  00180A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2119  00180C  0E01               	movlw	1
  2120  00180E  6E03               	movwf	digitalWrite@value^0,c
  2121  001810  ECA8  F006         	call	_digitalWrite	;wreg free
  2122                           
  2123                           ;rgb.c: 11:  } else {
  2124  001814  EF16  F00C         	goto	l2695
  2125  001818                     l2693:
  2126                           
  2127                           ;rgb.c: 12:   digitalWrite(PIN_D1, 0);
  2128  001818  0E00               	movlw	0
  2129  00181A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2130  00181C  0E19               	movlw	25
  2131  00181E  6E01               	movwf	digitalWrite@pin^0,c
  2132  001820  0E00               	movlw	0
  2133  001822  6E04               	movwf	(digitalWrite@value+1)^0,c
  2134  001824  0E00               	movlw	0
  2135  001826  6E03               	movwf	digitalWrite@value^0,c
  2136  001828  ECA8  F006         	call	_digitalWrite	;wreg free
  2137  00182C                     l2695:
  2138                           
  2139                           ;rgb.c: 14:  if (led & 4) {
  2140  00182C  A407               	btfss	rgbColor@led^0,2,c
  2141  00182E  EF1B  F00C         	goto	u2191
  2142  001832  EF1D  F00C         	goto	u2190
  2143  001836                     u2191:
  2144  001836  EF29  F00C         	goto	l2699
  2145  00183A                     u2190:
  2146  00183A                     
  2147                           ;rgb.c: 15:   digitalWrite(PIN_D2, 1);
  2148  00183A  0E00               	movlw	0
  2149  00183C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2150  00183E  0E1A               	movlw	26
  2151  001840  6E01               	movwf	digitalWrite@pin^0,c
  2152  001842  0E00               	movlw	0
  2153  001844  6E04               	movwf	(digitalWrite@value+1)^0,c
  2154  001846  0E01               	movlw	1
  2155  001848  6E03               	movwf	digitalWrite@value^0,c
  2156  00184A  ECA8  F006         	call	_digitalWrite	;wreg free
  2157                           
  2158                           ;rgb.c: 16:  } else {
  2159  00184E  EF33  F00C         	goto	l321
  2160  001852                     l2699:
  2161                           
  2162                           ;rgb.c: 17:   digitalWrite(PIN_D2, 0);
  2163  001852  0E00               	movlw	0
  2164  001854  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2165  001856  0E1A               	movlw	26
  2166  001858  6E01               	movwf	digitalWrite@pin^0,c
  2167  00185A  0E00               	movlw	0
  2168  00185C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2169  00185E  0E00               	movlw	0
  2170  001860  6E03               	movwf	digitalWrite@value^0,c
  2171  001862  ECA8  F006         	call	_digitalWrite	;wreg free
  2172  001866                     l321:
  2173  001866  0012               	return		;funcret
  2174  001868                     __end_of_rgbColor:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _pwmSet *****************
  2178 ;; Defined at:
  2179 ;;		line 24 in file "pwm.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  porcento        1    wreg     unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  porcento        1    9[COMRAM] unsigned char 
  2184 ;;  val             2   10[COMRAM] unsigned int 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2194 ;;      Params:         0       0       0       0       0       0       0
  2195 ;;      Locals:         3       0       0       0       0       0       0
  2196 ;;      Temps:          2       0       0       0       0       0       0
  2197 ;;      Totals:         5       0       0       0       0       0       0
  2198 ;;Total ram usage:        5 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 1
  2201 ;; This function calls:
  2202 ;;		___lwdiv
  2203 ;;		___wmul
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text6
  2210  001A08                     __ptext6:
  2211                           	callstack 0
  2212  001A08                     _pwmSet:
  2213                           	callstack 29
  2214                           
  2215                           ;incstack = 0
  2216                           ;pwmSet@porcento stored from wreg
  2217  001A08  6E0A               	movwf	pwmSet@porcento^0,c
  2218  001A0A                     
  2219                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  2220  001A0A  0E01               	movlw	1
  2221  001A0C  24CB               	addwf	203,w,c	;volatile
  2222  001A0E  6E01               	movwf	___wmul@multiplier^0,c
  2223  001A10  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2224  001A12  0E00               	movlw	0
  2225  001A14  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2226  001A16  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  2227  001A1A  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2228  001A1C  ECC1  F00E         	call	___wmul	;wreg free
  2229  001A20  C001  F00B         	movff	?___wmul,pwmSet@val
  2230  001A24  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  2231  001A28                     
  2232                           ;pwm.c: 33:     val = val / 25;
  2233  001A28  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  2234  001A2C  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2235  001A30  0E00               	movlw	0
  2236  001A32  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2237  001A34  0E19               	movlw	25
  2238  001A36  6E03               	movwf	___lwdiv@divisor^0,c
  2239  001A38  ECCA  F00C         	call	___lwdiv	;wreg free
  2240  001A3C  C001  F00B         	movff	?___lwdiv,pwmSet@val
  2241  001A40  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  2242  001A44                     
  2243                           ;pwm.c: 35:  val &= 0x03ff;
  2244  001A44  0EFF               	movlw	255
  2245  001A46  160B               	andwf	pwmSet@val^0,f,c
  2246  001A48  0E03               	movlw	3
  2247  001A4A  160C               	andwf	(pwmSet@val+1)^0,f,c
  2248  001A4C                     
  2249                           ;pwm.c: 37:  CCPR2L = val >> 2;
  2250  001A4C  C00B  F008         	movff	pwmSet@val,??_pwmSet
  2251  001A50  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  2252  001A54  90D8               	bcf	status,0,c
  2253  001A56  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2254  001A58  3208               	rrcf	??_pwmSet^0,f,c
  2255  001A5A  90D8               	bcf	status,0,c
  2256  001A5C  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2257  001A5E  3208               	rrcf	??_pwmSet^0,f,c
  2258  001A60  5008               	movf	??_pwmSet^0,w,c
  2259  001A62  6EBB               	movwf	187,c	;volatile
  2260  001A64                     
  2261                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  2262  001A64  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  2263  001A68  0E03               	movlw	3
  2264  001A6A  1608               	andwf	??_pwmSet^0,f,c
  2265  001A6C  3808               	swapf	??_pwmSet^0,w,c
  2266  001A6E  0BF0               	andlw	240
  2267  001A70  12BA               	iorwf	186,f,c	;volatile
  2268  001A72  0012               	return		;funcret
  2269  001A74                     __end_of_pwmSet:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function ___wmul *****************
  2273 ;; Defined at:
  2274 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  multiplier      2    0[COMRAM] unsigned int 
  2277 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  product         2    4[COMRAM] unsigned int 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    0[COMRAM] unsigned int 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0, prodl, prodh
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2289 ;;      Params:         4       0       0       0       0       0       0
  2290 ;;      Locals:         2       0       0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0
  2292 ;;      Totals:         6       0       0       0       0       0       0
  2293 ;;Total ram usage:        6 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_pwmSet
  2299 ;;		_bcd2dec
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text7
  2304  001D82                     __ptext7:
  2305                           	callstack 0
  2306  001D82                     ___wmul:
  2307                           	callstack 29
  2308  001D82  5001               	movf	___wmul@multiplier^0,w,c
  2309  001D84  0203               	mulwf	___wmul@multiplicand^0,c
  2310  001D86  CFF3 F005          	movff	prodl,___wmul@product
  2311  001D8A  CFF4 F006          	movff	prodh,___wmul@product+1
  2312  001D8E  5001               	movf	___wmul@multiplier^0,w,c
  2313  001D90  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2314  001D92  50F3               	movf	243,w,c
  2315  001D94  2606               	addwf	(___wmul@product+1)^0,f,c
  2316  001D96  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2317  001D98  0203               	mulwf	___wmul@multiplicand^0,c
  2318  001D9A  50F3               	movf	243,w,c
  2319  001D9C  2606               	addwf	(___wmul@product+1)^0,f,c
  2320  001D9E  C005  F001         	movff	___wmul@product,?___wmul
  2321  001DA2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2322  001DA6  0012               	return		;funcret
  2323  001DA8                     __end_of___wmul:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function ___lwdiv *****************
  2327 ;; Defined at:
  2328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  dividend        2    0[COMRAM] unsigned int 
  2331 ;;  divisor         2    2[COMRAM] unsigned int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  quotient        2    4[COMRAM] unsigned int 
  2334 ;;  counter         1    6[COMRAM] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    0[COMRAM] unsigned int 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2344 ;;      Params:         4       0       0       0       0       0       0
  2345 ;;      Locals:         3       0       0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0
  2347 ;;      Totals:         7       0       0       0       0       0       0
  2348 ;;Total ram usage:        7 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_pwmSet
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text8
  2358  001994                     __ptext8:
  2359                           	callstack 0
  2360  001994                     ___lwdiv:
  2361                           	callstack 29
  2362  001994  0E00               	movlw	0
  2363  001996  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2364  001998  0E00               	movlw	0
  2365  00199A  6E05               	movwf	___lwdiv@quotient^0,c
  2366  00199C  5003               	movf	___lwdiv@divisor^0,w,c
  2367  00199E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2368  0019A0  B4D8               	btfsc	status,2,c
  2369  0019A2  EFD5  F00C         	goto	u1971
  2370  0019A6  EFD7  F00C         	goto	u1970
  2371  0019AA                     u1971:
  2372  0019AA  EFFF  F00C         	goto	l1045
  2373  0019AE                     u1970:
  2374  0019AE  0E01               	movlw	1
  2375  0019B0  6E07               	movwf	___lwdiv@counter^0,c
  2376  0019B2  EFDF  F00C         	goto	l2509
  2377  0019B6                     l2507:
  2378  0019B6  90D8               	bcf	status,0,c
  2379  0019B8  3603               	rlcf	___lwdiv@divisor^0,f,c
  2380  0019BA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2381  0019BC  2A07               	incf	___lwdiv@counter^0,f,c
  2382  0019BE                     l2509:
  2383  0019BE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2384  0019C0  EFE4  F00C         	goto	u1981
  2385  0019C4  EFE6  F00C         	goto	u1980
  2386  0019C8                     u1981:
  2387  0019C8  EFDB  F00C         	goto	l2507
  2388  0019CC                     u1980:
  2389  0019CC                     l2511:
  2390  0019CC  90D8               	bcf	status,0,c
  2391  0019CE  3605               	rlcf	___lwdiv@quotient^0,f,c
  2392  0019D0  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2393  0019D2  5003               	movf	___lwdiv@divisor^0,w,c
  2394  0019D4  5C01               	subwf	___lwdiv@dividend^0,w,c
  2395  0019D6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2396  0019D8  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2397  0019DA  A0D8               	btfss	status,0,c
  2398  0019DC  EFF2  F00C         	goto	u1991
  2399  0019E0  EFF4  F00C         	goto	u1990
  2400  0019E4                     u1991:
  2401  0019E4  EFF9  F00C         	goto	l2519
  2402  0019E8                     u1990:
  2403  0019E8  5003               	movf	___lwdiv@divisor^0,w,c
  2404  0019EA  5E01               	subwf	___lwdiv@dividend^0,f,c
  2405  0019EC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2406  0019EE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2407  0019F0  8005               	bsf	___lwdiv@quotient^0,0,c
  2408  0019F2                     l2519:
  2409  0019F2  90D8               	bcf	status,0,c
  2410  0019F4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2411  0019F6  3203               	rrcf	___lwdiv@divisor^0,f,c
  2412  0019F8  2E07               	decfsz	___lwdiv@counter^0,f,c
  2413  0019FA  EFE6  F00C         	goto	l2511
  2414  0019FE                     l1045:
  2415  0019FE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2416  001A02  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2417  001A06  0012               	return		;funcret
  2418  001A08                     __end_of___lwdiv:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _pwmInit *****************
  2422 ;; Defined at:
  2423 ;;		line 51 in file "pwm.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;		None
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;		None
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2437 ;;      Params:         0       0       0       0       0       0       0
  2438 ;;      Locals:         0       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0
  2440 ;;      Totals:         0       0       0       0       0       0       0
  2441 ;;Total ram usage:        0 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 2
  2444 ;; This function calls:
  2445 ;;		_pwmFrequency
  2446 ;; This function is called by:
  2447 ;;		_main
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text9
  2452  001E30                     __ptext9:
  2453                           	callstack 0
  2454  001E30                     _pwmInit:
  2455                           	callstack 28
  2456  001E30                     
  2457                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2458  001E30  9294               	bcf	148,1,c	;volatile
  2459  001E32                     
  2460                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2461  001E32  0E03               	movlw	3
  2462  001E34  12CA               	iorwf	202,f,c	;volatile
  2463  001E36                     
  2464                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2465  001E36  84CA               	bsf	202,2,c	;volatile
  2466  001E38                     
  2467                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2468  001E38  0E0C               	movlw	12
  2469  001E3A  6EBA               	movwf	186,c	;volatile
  2470  001E3C                     
  2471                           ;pwm.c: 60:     pwmFrequency(100);
  2472  001E3C  0E00               	movlw	0
  2473  001E3E  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2474  001E40  0E64               	movlw	100
  2475  001E42  6E0F               	movwf	pwmFrequency@freq^0,c
  2476  001E44  ECD4  F00E         	call	_pwmFrequency	;wreg free
  2477  001E48  0012               	return		;funcret
  2478  001E4A                     __end_of_pwmInit:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function _pwmFrequency *****************
  2482 ;; Defined at:
  2483 ;;		line 44 in file "pwm.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  freq            2   14[COMRAM] unsigned int 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2497 ;;      Params:         2       0       0       0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0
  2500 ;;      Totals:         2       0       0       0       0       0       0
  2501 ;;Total ram usage:        2 bytes
  2502 ;; Hardware stack levels used: 1
  2503 ;; Hardware stack levels required when called: 1
  2504 ;; This function calls:
  2505 ;;		___aldiv
  2506 ;; This function is called by:
  2507 ;;		_pwmInit
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text10
  2512  001DA8                     __ptext10:
  2513                           	callstack 0
  2514  001DA8                     _pwmFrequency:
  2515                           	callstack 28
  2516  001DA8                     
  2517                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2518  001DA8  0E48               	movlw	72
  2519  001DAA  6E01               	movwf	___aldiv@dividend^0,c
  2520  001DAC  0EE8               	movlw	232
  2521  001DAE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2522  001DB0  0E01               	movlw	1
  2523  001DB2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2524  001DB4  0E00               	movlw	0
  2525  001DB6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2526  001DB8  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2527  001DBC  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2528  001DC0  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2529  001DC2  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2530  001DC4  ECFC  F00A         	call	___aldiv	;wreg free
  2531  001DC8  0401               	decf	?___aldiv^0,w,c
  2532  001DCA  6ECB               	movwf	203,c	;volatile
  2533  001DCC  0012               	return		;funcret
  2534  001DCE                     __end_of_pwmFrequency:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function ___aldiv *****************
  2538 ;; Defined at:
  2539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  dividend        4    0[COMRAM] long 
  2542 ;;  divisor         4    4[COMRAM] long 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  quotient        4   10[COMRAM] long 
  2545 ;;  sign            1    9[COMRAM] unsigned char 
  2546 ;;  counter         1    8[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  4    0[COMRAM] long 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2556 ;;      Params:         8       0       0       0       0       0       0
  2557 ;;      Locals:         6       0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0
  2559 ;;      Totals:        14       0       0       0       0       0       0
  2560 ;;Total ram usage:       14 bytes
  2561 ;; Hardware stack levels used: 1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_pwmFrequency
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text11
  2570  0015F8                     __ptext11:
  2571                           	callstack 0
  2572  0015F8                     ___aldiv:
  2573                           	callstack 28
  2574  0015F8  0E00               	movlw	0
  2575  0015FA  6E0A               	movwf	___aldiv@sign^0,c
  2576  0015FC  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2577  0015FE  EF05  F00B         	goto	u1770
  2578  001602  EF03  F00B         	goto	u1771
  2579  001606                     u1771:
  2580  001606  EF0F  F00B         	goto	l2401
  2581  00160A                     u1770:
  2582  00160A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2583  00160C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2584  00160E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2585  001610  6C05               	negf	___aldiv@divisor^0,c
  2586  001612  0E00               	movlw	0
  2587  001614  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2588  001616  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2589  001618  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2590  00161A  0E01               	movlw	1
  2591  00161C  6E0A               	movwf	___aldiv@sign^0,c
  2592  00161E                     l2401:
  2593  00161E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2594  001620  EF16  F00B         	goto	u1780
  2595  001624  EF14  F00B         	goto	u1781
  2596  001628                     u1781:
  2597  001628  EF20  F00B         	goto	l2407
  2598  00162C                     u1780:
  2599  00162C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2600  00162E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2601  001630  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2602  001632  6C01               	negf	___aldiv@dividend^0,c
  2603  001634  0E00               	movlw	0
  2604  001636  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2605  001638  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2606  00163A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2607  00163C  0E01               	movlw	1
  2608  00163E  1A0A               	xorwf	___aldiv@sign^0,f,c
  2609  001640                     l2407:
  2610  001640  0E00               	movlw	0
  2611  001642  6E0B               	movwf	___aldiv@quotient^0,c
  2612  001644  0E00               	movlw	0
  2613  001646  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2614  001648  0E00               	movlw	0
  2615  00164A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2616  00164C  0E00               	movlw	0
  2617  00164E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2618  001650  5005               	movf	___aldiv@divisor^0,w,c
  2619  001652  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2620  001654  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2621  001656  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2622  001658  B4D8               	btfsc	status,2,c
  2623  00165A  EF31  F00B         	goto	u1791
  2624  00165E  EF33  F00B         	goto	u1790
  2625  001662                     u1791:
  2626  001662  EF69  F00B         	goto	l2429
  2627  001666                     u1790:
  2628  001666  0E01               	movlw	1
  2629  001668  6E09               	movwf	___aldiv@counter^0,c
  2630  00166A  EF3D  F00B         	goto	l2415
  2631  00166E                     l2413:
  2632  00166E  90D8               	bcf	status,0,c
  2633  001670  3605               	rlcf	___aldiv@divisor^0,f,c
  2634  001672  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2635  001674  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2636  001676  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2637  001678  2A09               	incf	___aldiv@counter^0,f,c
  2638  00167A                     l2415:
  2639  00167A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2640  00167C  EF42  F00B         	goto	u1801
  2641  001680  EF44  F00B         	goto	u1800
  2642  001684                     u1801:
  2643  001684  EF37  F00B         	goto	l2413
  2644  001688                     u1800:
  2645  001688                     l2417:
  2646  001688  90D8               	bcf	status,0,c
  2647  00168A  360B               	rlcf	___aldiv@quotient^0,f,c
  2648  00168C  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2649  00168E  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2650  001690  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2651  001692  5005               	movf	___aldiv@divisor^0,w,c
  2652  001694  5C01               	subwf	___aldiv@dividend^0,w,c
  2653  001696  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2654  001698  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2655  00169A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2656  00169C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2657  00169E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2658  0016A0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2659  0016A2  A0D8               	btfss	status,0,c
  2660  0016A4  EF56  F00B         	goto	u1811
  2661  0016A8  EF58  F00B         	goto	u1810
  2662  0016AC                     u1811:
  2663  0016AC  EF61  F00B         	goto	l2425
  2664  0016B0                     u1810:
  2665  0016B0  5005               	movf	___aldiv@divisor^0,w,c
  2666  0016B2  5E01               	subwf	___aldiv@dividend^0,f,c
  2667  0016B4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2668  0016B6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2669  0016B8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2670  0016BA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2671  0016BC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2672  0016BE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2673  0016C0  800B               	bsf	___aldiv@quotient^0,0,c
  2674  0016C2                     l2425:
  2675  0016C2  90D8               	bcf	status,0,c
  2676  0016C4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2677  0016C6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2678  0016C8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2679  0016CA  3205               	rrcf	___aldiv@divisor^0,f,c
  2680  0016CC  2E09               	decfsz	___aldiv@counter^0,f,c
  2681  0016CE  EF44  F00B         	goto	l2417
  2682  0016D2                     l2429:
  2683  0016D2  500A               	movf	___aldiv@sign^0,w,c
  2684  0016D4  B4D8               	btfsc	status,2,c
  2685  0016D6  EF6F  F00B         	goto	u1821
  2686  0016DA  EF71  F00B         	goto	u1820
  2687  0016DE                     u1821:
  2688  0016DE  EF79  F00B         	goto	l2433
  2689  0016E2                     u1820:
  2690  0016E2  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2691  0016E4  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2692  0016E6  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2693  0016E8  6C0B               	negf	___aldiv@quotient^0,c
  2694  0016EA  0E00               	movlw	0
  2695  0016EC  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2696  0016EE  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2697  0016F0  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2698  0016F2                     l2433:
  2699  0016F2  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2700  0016F6  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2701  0016FA  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2702  0016FE  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2703  001702  0012               	return		;funcret
  2704  001704                     __end_of___aldiv:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _lcdPosition *****************
  2708 ;; Defined at:
  2709 ;;		line 44 in file "lcd.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  line            2   14[COMRAM] int 
  2712 ;;  col             2   16[COMRAM] int 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2724 ;;      Params:         4       0       0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0
  2727 ;;      Totals:         4       0       0       0       0       0       0
  2728 ;;Total ram usage:        4 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 5
  2731 ;; This function calls:
  2732 ;;		_lcdCommand
  2733 ;; This function is called by:
  2734 ;;		_main
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text12
  2739  001C92                     __ptext12:
  2740                           	callstack 0
  2741  001C92                     _lcdPosition:
  2742                           	callstack 25
  2743  001C92                     
  2744                           ;lcd.c: 45:  if (line == 0) {
  2745  001C92  500F               	movf	lcdPosition@line^0,w,c
  2746  001C94  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2747  001C96  A4D8               	btfss	status,2,c
  2748  001C98  EF50  F00E         	goto	u2151
  2749  001C9C  EF52  F00E         	goto	u2150
  2750  001CA0                     u2151:
  2751  001CA0  EF57  F00E         	goto	l2639
  2752  001CA4                     u2150:
  2753  001CA4                     
  2754                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2755  001CA4  5011               	movf	lcdPosition@col^0,w,c
  2756  001CA6  0B0F               	andlw	15
  2757  001CA8  0F80               	addlw	128
  2758  001CAA  ECFA  F00E         	call	_lcdCommand
  2759  001CAE                     l2639:
  2760                           
  2761                           ;lcd.c: 48:  if (line == 1) {
  2762  001CAE  040F               	decf	lcdPosition@line^0,w,c
  2763  001CB0  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2764  001CB2  A4D8               	btfss	status,2,c
  2765  001CB4  EF5E  F00E         	goto	u2161
  2766  001CB8  EF60  F00E         	goto	u2160
  2767  001CBC                     u2161:
  2768  001CBC  EF65  F00E         	goto	l271
  2769  001CC0                     u2160:
  2770  001CC0                     
  2771                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2772  001CC0  5011               	movf	lcdPosition@col^0,w,c
  2773  001CC2  0B0F               	andlw	15
  2774  001CC4  0FC0               	addlw	192
  2775  001CC6  ECFA  F00E         	call	_lcdCommand
  2776  001CCA                     l271:
  2777  001CCA  0012               	return		;funcret
  2778  001CCC                     __end_of_lcdPosition:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _lcdInit *****************
  2782 ;; Defined at:
  2783 ;;		line 72 in file "lcd.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2797 ;;      Params:         0       0       0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; Hardware stack levels required when called: 5
  2804 ;; This function calls:
  2805 ;;		_delayMicro
  2806 ;;		_delayMili
  2807 ;;		_lcdCommand
  2808 ;;		_pinMode
  2809 ;;		_pushNibble
  2810 ;;		_soInit
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text13
  2817  001704                     __ptext13:
  2818                           	callstack 0
  2819  001704                     _lcdInit:
  2820                           	callstack 25
  2821  001704                     
  2822                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  2823  001704  0E00               	movlw	0
  2824  001706  6E02               	movwf	(pinMode@pin+1)^0,c
  2825  001708  0E1C               	movlw	28
  2826  00170A  6E01               	movwf	pinMode@pin^0,c
  2827  00170C  0E00               	movlw	0
  2828  00170E  6E04               	movwf	(pinMode@type+1)^0,c
  2829  001710  0E00               	movlw	0
  2830  001712  6E03               	movwf	pinMode@type^0,c
  2831  001714  ECCF  F007         	call	_pinMode	;wreg free
  2832                           
  2833                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  2834  001718  0E00               	movlw	0
  2835  00171A  6E02               	movwf	(pinMode@pin+1)^0,c
  2836  00171C  0E1D               	movlw	29
  2837  00171E  6E01               	movwf	pinMode@pin^0,c
  2838  001720  0E00               	movlw	0
  2839  001722  6E04               	movwf	(pinMode@type+1)^0,c
  2840  001724  0E00               	movlw	0
  2841  001726  6E03               	movwf	pinMode@type^0,c
  2842  001728  ECCF  F007         	call	_pinMode	;wreg free
  2843                           
  2844                           ;lcd.c: 75:  soInit();
  2845  00172C  EC2A  F00E         	call	_soInit	;wreg free
  2846                           
  2847                           ;lcd.c: 76:  delayMili(15);
  2848  001730  0E00               	movlw	0
  2849  001732  6E02               	movwf	(delayMili@a+1)^0,c
  2850  001734  0E0F               	movlw	15
  2851  001736  6E01               	movwf	delayMili@a^0,c
  2852  001738  EC7F  F00E         	call	_delayMili	;wreg free
  2853                           
  2854                           ;lcd.c: 78:  pushNibble(0x03, 0);
  2855  00173C  0E00               	movlw	0
  2856  00173E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2857  001740  0E00               	movlw	0
  2858  001742  6E0A               	movwf	pushNibble@rs^0,c
  2859  001744  0E03               	movlw	3
  2860  001746  ECE7  F00E         	call	_pushNibble
  2861                           
  2862                           ;lcd.c: 79:  delayMili(5);
  2863  00174A  0E00               	movlw	0
  2864  00174C  6E02               	movwf	(delayMili@a+1)^0,c
  2865  00174E  0E05               	movlw	5
  2866  001750  6E01               	movwf	delayMili@a^0,c
  2867  001752  EC7F  F00E         	call	_delayMili	;wreg free
  2868                           
  2869                           ;lcd.c: 80:  pushNibble(0x03, 0);
  2870  001756  0E00               	movlw	0
  2871  001758  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2872  00175A  0E00               	movlw	0
  2873  00175C  6E0A               	movwf	pushNibble@rs^0,c
  2874  00175E  0E03               	movlw	3
  2875  001760  ECE7  F00E         	call	_pushNibble
  2876  001764                     
  2877                           ;lcd.c: 81:  delayMicro(160);
  2878  001764  0E00               	movlw	0
  2879  001766  6E02               	movwf	(delayMicro@a+1)^0,c
  2880  001768  0EA0               	movlw	160
  2881  00176A  6E01               	movwf	delayMicro@a^0,c
  2882  00176C  EC39  F00F         	call	_delayMicro	;wreg free
  2883  001770                     
  2884                           ;lcd.c: 82:  pushNibble(0x03, 0);
  2885  001770  0E00               	movlw	0
  2886  001772  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2887  001774  0E00               	movlw	0
  2888  001776  6E0A               	movwf	pushNibble@rs^0,c
  2889  001778  0E03               	movlw	3
  2890  00177A  ECE7  F00E         	call	_pushNibble
  2891                           
  2892                           ;lcd.c: 83:  delayMicro(160);
  2893  00177E  0E00               	movlw	0
  2894  001780  6E02               	movwf	(delayMicro@a+1)^0,c
  2895  001782  0EA0               	movlw	160
  2896  001784  6E01               	movwf	delayMicro@a^0,c
  2897  001786  EC39  F00F         	call	_delayMicro	;wreg free
  2898  00178A                     
  2899                           ;lcd.c: 85:  pushNibble(0x02, 0);
  2900  00178A  0E00               	movlw	0
  2901  00178C  6E0B               	movwf	(pushNibble@rs+1)^0,c
  2902  00178E  0E00               	movlw	0
  2903  001790  6E0A               	movwf	pushNibble@rs^0,c
  2904  001792  0E02               	movlw	2
  2905  001794  ECE7  F00E         	call	_pushNibble
  2906  001798                     
  2907                           ;lcd.c: 86:  delayMili(10);
  2908  001798  0E00               	movlw	0
  2909  00179A  6E02               	movwf	(delayMili@a+1)^0,c
  2910  00179C  0E0A               	movlw	10
  2911  00179E  6E01               	movwf	delayMili@a^0,c
  2912  0017A0  EC7F  F00E         	call	_delayMili	;wreg free
  2913  0017A4                     
  2914                           ;lcd.c: 88:  lcdCommand(0x28);
  2915  0017A4  0E28               	movlw	40
  2916  0017A6  ECFA  F00E         	call	_lcdCommand
  2917  0017AA                     
  2918                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  2919  0017AA  0E0C               	movlw	12
  2920  0017AC  ECFA  F00E         	call	_lcdCommand
  2921  0017B0                     
  2922                           ;lcd.c: 90:  lcdCommand(0x01);
  2923  0017B0  0E01               	movlw	1
  2924  0017B2  ECFA  F00E         	call	_lcdCommand
  2925  0017B6  0012               	return		;funcret
  2926  0017B8                     __end_of_lcdInit:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _pushNibble *****************
  2930 ;; Defined at:
  2931 ;;		line 25 in file "lcd.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  value           1    wreg     unsigned char 
  2934 ;;  rs              2    9[COMRAM] int 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  value           1   11[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2946 ;;      Params:         2       0       0       0       0       0       0
  2947 ;;      Locals:         1       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0
  2949 ;;      Totals:         3       0       0       0       0       0       0
  2950 ;;Total ram usage:        3 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 3
  2953 ;; This function calls:
  2954 ;;		_digitalWrite
  2955 ;;		_pulseEnablePin
  2956 ;;		_soWrite
  2957 ;; This function is called by:
  2958 ;;		_lcdInit
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961                           
  2962                           	psect	text14
  2963  001DCE                     __ptext14:
  2964                           	callstack 0
  2965  001DCE                     _pushNibble:
  2966                           	callstack 26
  2967                           
  2968                           ;incstack = 0
  2969                           ;pushNibble@value stored from wreg
  2970  001DCE  6E0C               	movwf	pushNibble@value^0,c
  2971  001DD0                     
  2972                           ;lcd.c: 26:  soWrite(value);
  2973  001DD0  C00C  F007         	movff	pushNibble@value,soWrite@value
  2974  001DD4  6A08               	clrf	(soWrite@value+1)^0,c
  2975  001DD6  ECBE  F00D         	call	_soWrite	;wreg free
  2976                           
  2977                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  2978  001DDA  0E00               	movlw	0
  2979  001DDC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2980  001DDE  0E1D               	movlw	29
  2981  001DE0  6E01               	movwf	digitalWrite@pin^0,c
  2982  001DE2  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  2983  001DE6  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  2984  001DEA  ECA8  F006         	call	_digitalWrite	;wreg free
  2985                           
  2986                           ;lcd.c: 28:  pulseEnablePin();
  2987  001DEE  EC09  F00E         	call	_pulseEnablePin	;wreg free
  2988  001DF2  0012               	return		;funcret
  2989  001DF4                     __end_of_pushNibble:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _lcdCommand *****************
  2993 ;; Defined at:
  2994 ;;		line 40 in file "lcd.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  value           1    wreg     unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  value           1   13[COMRAM] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      void 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0, cstack
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3008 ;;      Params:         0       0       0       0       0       0       0
  3009 ;;      Locals:         1       0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0
  3011 ;;      Totals:         1       0       0       0       0       0       0
  3012 ;;Total ram usage:        1 bytes
  3013 ;; Hardware stack levels used: 1
  3014 ;; Hardware stack levels required when called: 4
  3015 ;; This function calls:
  3016 ;;		_delayMili
  3017 ;;		_pushByte
  3018 ;; This function is called by:
  3019 ;;		_lcdPosition
  3020 ;;		_lcdInit
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text15
  3025  001DF4                     __ptext15:
  3026                           	callstack 0
  3027  001DF4                     _lcdCommand:
  3028                           	callstack 25
  3029                           
  3030                           ;incstack = 0
  3031                           ;lcdCommand@value stored from wreg
  3032  001DF4  6E0E               	movwf	lcdCommand@value^0,c
  3033  001DF6                     
  3034                           ;lcd.c: 41:  pushByte(value, 0);
  3035  001DF6  0E00               	movlw	0
  3036  001DF8  6E0B               	movwf	(pushByte@rs+1)^0,c
  3037  001DFA  0E00               	movlw	0
  3038  001DFC  6E0A               	movwf	pushByte@rs^0,c
  3039  001DFE  500E               	movf	lcdCommand@value^0,w,c
  3040  001E00  EC3A  F00D         	call	_pushByte
  3041                           
  3042                           ;lcd.c: 42:  delayMili(2);
  3043  001E04  0E00               	movlw	0
  3044  001E06  6E02               	movwf	(delayMili@a+1)^0,c
  3045  001E08  0E02               	movlw	2
  3046  001E0A  6E01               	movwf	delayMili@a^0,c
  3047  001E0C  EC7F  F00E         	call	_delayMili	;wreg free
  3048  001E10  0012               	return		;funcret
  3049  001E12                     __end_of_lcdCommand:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _delayMili *****************
  3053 ;; Defined at:
  3054 ;;		line 10 in file "lcd.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  a               2    0[COMRAM] int 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  i               2    3[COMRAM] volatile int 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3068 ;;      Params:         2       0       0       0       0       0       0
  3069 ;;      Locals:         2       0       0       0       0       0       0
  3070 ;;      Temps:          1       0       0       0       0       0       0
  3071 ;;      Totals:         5       0       0       0       0       0       0
  3072 ;;Total ram usage:        5 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_lcdCommand
  3078 ;;		_lcdInit
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text16
  3083  001CFE                     __ptext16:
  3084                           	callstack 0
  3085  001CFE                     _delayMili:
  3086                           	callstack 28
  3087  001CFE                     
  3088                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3089  001CFE  0E00               	movlw	0
  3090  001D00  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3091  001D02  0E00               	movlw	0
  3092  001D04  6E04               	movwf	delayMili@i^0,c	;volatile
  3093  001D06  EF87  F00E         	goto	l2389
  3094  001D0A                     l2387:
  3095                           
  3096                           ;lcd.c: 15:  }
  3097  001D0A  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3098  001D0C  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3099  001D0E                     l2389:
  3100  001D0E  5001               	movf	delayMili@a^0,w,c
  3101  001D10  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3102  001D12  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3103  001D14  0A80               	xorlw	128
  3104  001D16  6E03               	movwf	??_delayMili^0,c
  3105  001D18  5002               	movf	(delayMili@a+1)^0,w,c
  3106  001D1A  0A80               	xorlw	128
  3107  001D1C  5803               	subwfb	??_delayMili^0,w,c
  3108  001D1E  A0D8               	btfss	status,0,c
  3109  001D20  EF94  F00E         	goto	u1761
  3110  001D24  EF96  F00E         	goto	u1760
  3111  001D28                     u1761:
  3112  001D28  EF85  F00E         	goto	l2387
  3113  001D2C                     u1760:
  3114  001D2C  0012               	return		;funcret
  3115  001D2E                     __end_of_delayMili:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _lcdChar *****************
  3119 ;; Defined at:
  3120 ;;		line 52 in file "lcd.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  value           1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  value           1   13[COMRAM] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3134 ;;      Params:         0       0       0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 4
  3141 ;; This function calls:
  3142 ;;		_delayMicro
  3143 ;;		_pushByte
  3144 ;; This function is called by:
  3145 ;;		_main
  3146 ;;		_lcdString
  3147 ;;		_lcdNumber
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text17
  3152  001E12                     __ptext17:
  3153                           	callstack 0
  3154  001E12                     _lcdChar:
  3155                           	callstack 26
  3156                           
  3157                           ;incstack = 0
  3158                           ;lcdChar@value stored from wreg
  3159  001E12  6E0E               	movwf	lcdChar@value^0,c
  3160  001E14                     
  3161                           ;lcd.c: 53:  pushByte(value, 1);
  3162  001E14  0E00               	movlw	0
  3163  001E16  6E0B               	movwf	(pushByte@rs+1)^0,c
  3164  001E18  0E01               	movlw	1
  3165  001E1A  6E0A               	movwf	pushByte@rs^0,c
  3166  001E1C  500E               	movf	lcdChar@value^0,w,c
  3167  001E1E  EC3A  F00D         	call	_pushByte
  3168  001E22                     
  3169                           ;lcd.c: 54:  delayMicro(80);
  3170  001E22  0E00               	movlw	0
  3171  001E24  6E02               	movwf	(delayMicro@a+1)^0,c
  3172  001E26  0E50               	movlw	80
  3173  001E28  6E01               	movwf	delayMicro@a^0,c
  3174  001E2A  EC39  F00F         	call	_delayMicro	;wreg free
  3175  001E2E  0012               	return		;funcret
  3176  001E30                     __end_of_lcdChar:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _pushByte *****************
  3180 ;; Defined at:
  3181 ;;		line 31 in file "lcd.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  value           1    wreg     unsigned char 
  3184 ;;  rs              2    9[COMRAM] int 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  value           1   12[COMRAM] unsigned char 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3196 ;;      Params:         2       0       0       0       0       0       0
  3197 ;;      Locals:         1       0       0       0       0       0       0
  3198 ;;      Temps:          1       0       0       0       0       0       0
  3199 ;;      Totals:         4       0       0       0       0       0       0
  3200 ;;Total ram usage:        4 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 3
  3203 ;; This function calls:
  3204 ;;		_digitalWrite
  3205 ;;		_pulseEnablePin
  3206 ;;		_soWrite
  3207 ;; This function is called by:
  3208 ;;		_lcdCommand
  3209 ;;		_lcdChar
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text18
  3214  001A74                     __ptext18:
  3215                           	callstack 0
  3216  001A74                     _pushByte:
  3217                           	callstack 25
  3218                           
  3219                           ;incstack = 0
  3220                           ;pushByte@value stored from wreg
  3221  001A74  6E0D               	movwf	pushByte@value^0,c
  3222  001A76                     
  3223                           ;lcd.c: 32:  soWrite(value >> 4);
  3224  001A76  C00D  F00C         	movff	pushByte@value,??_pushByte
  3225  001A7A  3A0C               	swapf	??_pushByte^0,f,c
  3226  001A7C  0E0F               	movlw	15
  3227  001A7E  160C               	andwf	??_pushByte^0,f,c
  3228  001A80  500C               	movf	??_pushByte^0,w,c
  3229  001A82  6E07               	movwf	soWrite@value^0,c
  3230  001A84  6A08               	clrf	(soWrite@value+1)^0,c
  3231  001A86  ECBE  F00D         	call	_soWrite	;wreg free
  3232                           
  3233                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3234  001A8A  0E00               	movlw	0
  3235  001A8C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3236  001A8E  0E1D               	movlw	29
  3237  001A90  6E01               	movwf	digitalWrite@pin^0,c
  3238  001A92  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3239  001A96  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3240  001A9A  ECA8  F006         	call	_digitalWrite	;wreg free
  3241                           
  3242                           ;lcd.c: 34:  pulseEnablePin();
  3243  001A9E  EC09  F00E         	call	_pulseEnablePin	;wreg free
  3244                           
  3245                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3246  001AA2  C00D  F00C         	movff	pushByte@value,??_pushByte
  3247  001AA6  0E0F               	movlw	15
  3248  001AA8  160C               	andwf	??_pushByte^0,f,c
  3249  001AAA  500C               	movf	??_pushByte^0,w,c
  3250  001AAC  6E07               	movwf	soWrite@value^0,c
  3251  001AAE  6A08               	clrf	(soWrite@value+1)^0,c
  3252  001AB0  ECBE  F00D         	call	_soWrite	;wreg free
  3253                           
  3254                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3255  001AB4  0E00               	movlw	0
  3256  001AB6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3257  001AB8  0E1D               	movlw	29
  3258  001ABA  6E01               	movwf	digitalWrite@pin^0,c
  3259  001ABC  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3260  001AC0  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3261  001AC4  ECA8  F006         	call	_digitalWrite	;wreg free
  3262                           
  3263                           ;lcd.c: 38:  pulseEnablePin();
  3264  001AC8  EC09  F00E         	call	_pulseEnablePin	;wreg free
  3265  001ACC  0012               	return		;funcret
  3266  001ACE                     __end_of_pushByte:
  3267                           	callstack 0
  3268                           
  3269 ;; *************** function _pulseEnablePin *****************
  3270 ;; Defined at:
  3271 ;;		line 18 in file "lcd.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;		None
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;		None
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3285 ;;      Params:         0       0       0       0       0       0       0
  3286 ;;      Locals:         0       0       0       0       0       0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0
  3288 ;;      Totals:         0       0       0       0       0       0       0
  3289 ;;Total ram usage:        0 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 1
  3292 ;; This function calls:
  3293 ;;		_delayMicro
  3294 ;;		_digitalWrite
  3295 ;; This function is called by:
  3296 ;;		_pushNibble
  3297 ;;		_pushByte
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text19
  3302  001C12                     __ptext19:
  3303                           	callstack 0
  3304  001C12                     _pulseEnablePin:
  3305                           	callstack 26
  3306  001C12                     
  3307                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3308  001C12  0E00               	movlw	0
  3309  001C14  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3310  001C16  0E1C               	movlw	28
  3311  001C18  6E01               	movwf	digitalWrite@pin^0,c
  3312  001C1A  0E00               	movlw	0
  3313  001C1C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3314  001C1E  0E01               	movlw	1
  3315  001C20  6E03               	movwf	digitalWrite@value^0,c
  3316  001C22  ECA8  F006         	call	_digitalWrite	;wreg free
  3317  001C26                     
  3318                           ;lcd.c: 20:  delayMicro(5);
  3319  001C26  0E00               	movlw	0
  3320  001C28  6E02               	movwf	(delayMicro@a+1)^0,c
  3321  001C2A  0E05               	movlw	5
  3322  001C2C  6E01               	movwf	delayMicro@a^0,c
  3323  001C2E  EC39  F00F         	call	_delayMicro	;wreg free
  3324  001C32                     
  3325                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3326  001C32  0E00               	movlw	0
  3327  001C34  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3328  001C36  0E1C               	movlw	28
  3329  001C38  6E01               	movwf	digitalWrite@pin^0,c
  3330  001C3A  0E00               	movlw	0
  3331  001C3C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3332  001C3E  0E00               	movlw	0
  3333  001C40  6E03               	movwf	digitalWrite@value^0,c
  3334  001C42  ECA8  F006         	call	_digitalWrite	;wreg free
  3335                           
  3336                           ;lcd.c: 22:  delayMicro(5);
  3337  001C46  0E00               	movlw	0
  3338  001C48  6E02               	movwf	(delayMicro@a+1)^0,c
  3339  001C4A  0E05               	movlw	5
  3340  001C4C  6E01               	movwf	delayMicro@a^0,c
  3341  001C4E  EC39  F00F         	call	_delayMicro	;wreg free
  3342  001C52  0012               	return		;funcret
  3343  001C54                     __end_of_pulseEnablePin:
  3344                           	callstack 0
  3345                           
  3346 ;; *************** function _delayMicro *****************
  3347 ;; Defined at:
  3348 ;;		line 5 in file "lcd.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  a               2    0[COMRAM] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  i               2    0        volatile int 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		None
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:         2       0       0       0       0       0       0
  3363 ;;      Locals:         0       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0
  3365 ;;      Totals:         2       0       0       0       0       0       0
  3366 ;;Total ram usage:        2 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_pulseEnablePin
  3372 ;;		_lcdChar
  3373 ;;		_lcdInit
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text20
  3378  001E72                     __ptext20:
  3379                           	callstack 0
  3380  001E72                     _delayMicro:
  3381                           	callstack 26
  3382  001E72  0012               	return		;funcret
  3383  001E74                     __end_of_delayMicro:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function _kpRead *****************
  3387 ;; Defined at:
  3388 ;;		line 14 in file "keypad.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  2    0[COMRAM] unsigned int 
  3395 ;; Registers used:
  3396 ;;		None
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3402 ;;      Params:         2       0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0
  3405 ;;      Totals:         2       0       0       0       0       0       0
  3406 ;;Total ram usage:        2 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text21
  3416  001E60                     __ptext21:
  3417                           	callstack 0
  3418  001E60                     _kpRead:
  3419                           	callstack 30
  3420  001E60                     
  3421                           ;keypad.c: 15:     return keys;
  3422  001E60  C03C  F001         	movff	_keys,?_kpRead
  3423  001E64  C03D  F002         	movff	_keys+1,?_kpRead+1
  3424  001E68  0012               	return		;funcret
  3425  001E6A                     __end_of_kpRead:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _kpInit *****************
  3429 ;; Defined at:
  3430 ;;		line 54 in file "keypad.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3444 ;;      Params:         0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 2
  3451 ;; This function calls:
  3452 ;;		_pinMode
  3453 ;;		_soInit
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           	psect	text22
  3460  001CCC                     __ptext22:
  3461                           	callstack 0
  3462  001CCC                     _kpInit:
  3463                           	callstack 28
  3464  001CCC                     
  3465                           ;keypad.c: 55:   soInit();
  3466  001CCC  EC2A  F00E         	call	_soInit	;wreg free
  3467                           
  3468                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3469  001CD0  0E00               	movlw	0
  3470  001CD2  6E02               	movwf	(pinMode@pin+1)^0,c
  3471  001CD4  0E0A               	movlw	10
  3472  001CD6  6E01               	movwf	pinMode@pin^0,c
  3473  001CD8  0E00               	movlw	0
  3474  001CDA  6E04               	movwf	(pinMode@type+1)^0,c
  3475  001CDC  0E01               	movlw	1
  3476  001CDE  6E03               	movwf	pinMode@type^0,c
  3477  001CE0  ECCF  F007         	call	_pinMode	;wreg free
  3478                           
  3479                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3480  001CE4  0E00               	movlw	0
  3481  001CE6  6E02               	movwf	(pinMode@pin+1)^0,c
  3482  001CE8  0E09               	movlw	9
  3483  001CEA  6E01               	movwf	pinMode@pin^0,c
  3484  001CEC  0E00               	movlw	0
  3485  001CEE  6E04               	movwf	(pinMode@type+1)^0,c
  3486  001CF0  0E01               	movlw	1
  3487  001CF2  6E03               	movwf	pinMode@type^0,c
  3488  001CF4  ECCF  F007         	call	_pinMode	;wreg free
  3489  001CF8                     
  3490                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3491  001CF8  0E0C               	movlw	12
  3492  001CFA  6EC1               	movwf	193,c	;volatile
  3493  001CFC  0012               	return		;funcret
  3494  001CFE                     __end_of_kpInit:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _soInit *****************
  3498 ;; Defined at:
  3499 ;;		line 3 in file "so.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3513 ;;      Params:         0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 1
  3520 ;; This function calls:
  3521 ;;		_pinMode
  3522 ;; This function is called by:
  3523 ;;		_kpInit
  3524 ;;		_lcdInit
  3525 ;;		_ssdInit
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text23
  3530  001C54                     __ptext23:
  3531                           	callstack 0
  3532  001C54                     _soInit:
  3533                           	callstack 28
  3534  001C54                     
  3535                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3536  001C54  0E00               	movlw	0
  3537  001C56  6E02               	movwf	(pinMode@pin+1)^0,c
  3538  001C58  0E1F               	movlw	31
  3539  001C5A  6E01               	movwf	pinMode@pin^0,c
  3540  001C5C  0E00               	movlw	0
  3541  001C5E  6E04               	movwf	(pinMode@type+1)^0,c
  3542  001C60  0E00               	movlw	0
  3543  001C62  6E03               	movwf	pinMode@type^0,c
  3544  001C64  ECCF  F007         	call	_pinMode	;wreg free
  3545                           
  3546                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3547  001C68  0E00               	movlw	0
  3548  001C6A  6E02               	movwf	(pinMode@pin+1)^0,c
  3549  001C6C  0E08               	movlw	8
  3550  001C6E  6E01               	movwf	pinMode@pin^0,c
  3551  001C70  0E00               	movlw	0
  3552  001C72  6E04               	movwf	(pinMode@type+1)^0,c
  3553  001C74  0E00               	movlw	0
  3554  001C76  6E03               	movwf	pinMode@type^0,c
  3555  001C78  ECCF  F007         	call	_pinMode	;wreg free
  3556                           
  3557                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3558  001C7C  0E00               	movlw	0
  3559  001C7E  6E02               	movwf	(pinMode@pin+1)^0,c
  3560  001C80  0E1E               	movlw	30
  3561  001C82  6E01               	movwf	pinMode@pin^0,c
  3562  001C84  0E00               	movlw	0
  3563  001C86  6E04               	movwf	(pinMode@type+1)^0,c
  3564  001C88  0E00               	movlw	0
  3565  001C8A  6E03               	movwf	pinMode@type^0,c
  3566  001C8C  ECCF  F007         	call	_pinMode	;wreg free
  3567  001C90  0012               	return		;funcret
  3568  001C92                     __end_of_soInit:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _kpDebounce *****************
  3572 ;; Defined at:
  3573 ;;		line 27 in file "keypad.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  i               2   12[COMRAM] int 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         0       0       0       0       0       0       0
  3588 ;;      Locals:         2       0       0       0       0       0       0
  3589 ;;      Temps:          3       0       0       0       0       0       0
  3590 ;;      Totals:         5       0       0       0       0       0       0
  3591 ;;Total ram usage:        5 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 3
  3594 ;; This function calls:
  3595 ;;		_digitalRead
  3596 ;;		_soWrite
  3597 ;; This function is called by:
  3598 ;;		_main
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text24
  3603  0014C2                     __ptext24:
  3604                           	callstack 0
  3605  0014C2                     _kpDebounce:
  3606                           	callstack 27
  3607  0014C2                     
  3608                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3609  0014C2  0E00               	movlw	0
  3610  0014C4  6E3B               	movwf	(kpDebounce@newRead+1)^0,c
  3611  0014C6  0E00               	movlw	0
  3612  0014C8  6E3A               	movwf	kpDebounce@newRead^0,c
  3613                           
  3614                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3615  0014CA  0E00               	movlw	0
  3616  0014CC  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3617  0014CE  0E00               	movlw	0
  3618  0014D0  6E0D               	movwf	kpDebounce@i^0,c
  3619  0014D2                     l2605:
  3620  0014D2  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3621  0014D4  EF75  F00A         	goto	u2071
  3622  0014D8  500E               	movf	(kpDebounce@i+1)^0,w,c
  3623  0014DA  E109               	bnz	u2070
  3624  0014DC  0E05               	movlw	5
  3625  0014DE  5C0D               	subwf	kpDebounce@i^0,w,c
  3626  0014E0  A0D8               	btfss	status,0,c
  3627  0014E2  EF75  F00A         	goto	u2071
  3628  0014E6  EF77  F00A         	goto	u2070
  3629  0014EA                     u2071:
  3630  0014EA  EF79  F00A         	goto	l2609
  3631  0014EE                     u2070:
  3632  0014EE  EFDA  F00A         	goto	l2621
  3633  0014F2                     l2609:
  3634                           
  3635                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3636  0014F2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3637  0014F6  0E03               	movlw	3
  3638  0014F8  260A               	addwf	??_kpDebounce^0,f,c
  3639  0014FA  0E01               	movlw	1
  3640  0014FC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3641  0014FE  0E00               	movlw	0
  3642  001500  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3643  001502  2A0A               	incf	??_kpDebounce^0,f,c
  3644  001504  EF87  F00A         	goto	u2084
  3645  001508                     u2085:
  3646  001508  90D8               	bcf	status,0,c
  3647  00150A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3648  00150C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3649  00150E                     u2084:
  3650  00150E  2E0A               	decfsz	??_kpDebounce^0,f,c
  3651  001510  EF84  F00A         	goto	u2085
  3652  001514  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3653  001518  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3654  00151C  ECBE  F00D         	call	_soWrite	;wreg free
  3655                           
  3656                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3657  001520  0E00               	movlw	0
  3658  001522  6E02               	movwf	(digitalRead@pin+1)^0,c
  3659  001524  0E0A               	movlw	10
  3660  001526  6E01               	movwf	digitalRead@pin^0,c
  3661  001528  ECAC  F009         	call	_digitalRead	;wreg free
  3662  00152C  5001               	movf	?_digitalRead^0,w,c
  3663  00152E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3664  001530  B4D8               	btfsc	status,2,c
  3665  001532  EF9D  F00A         	goto	u2091
  3666  001536  EF9F  F00A         	goto	u2090
  3667  00153A                     u2091:
  3668  00153A  EFB2  F00A         	goto	l2613
  3669  00153E                     u2090:
  3670  00153E                     
  3671                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3672  00153E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3673  001542  0E01               	movlw	1
  3674  001544  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3675  001546  0E00               	movlw	0
  3676  001548  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3677  00154A  2A0A               	incf	??_kpDebounce^0,f,c
  3678  00154C  EFAB  F00A         	goto	u2104
  3679  001550                     u2105:
  3680  001550  90D8               	bcf	status,0,c
  3681  001552  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3682  001554  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3683  001556                     u2104:
  3684  001556  2E0A               	decfsz	??_kpDebounce^0,f,c
  3685  001558  EFA8  F00A         	goto	u2105
  3686  00155C  500B               	movf	(??_kpDebounce+1)^0,w,c
  3687  00155E  123A               	iorwf	kpDebounce@newRead^0,f,c
  3688  001560  500C               	movf	(??_kpDebounce+2)^0,w,c
  3689  001562  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3690  001564                     l2613:
  3691                           
  3692                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3693  001564  0E00               	movlw	0
  3694  001566  6E02               	movwf	(digitalRead@pin+1)^0,c
  3695  001568  0E09               	movlw	9
  3696  00156A  6E01               	movwf	digitalRead@pin^0,c
  3697  00156C  ECAC  F009         	call	_digitalRead	;wreg free
  3698  001570  5001               	movf	?_digitalRead^0,w,c
  3699  001572  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3700  001574  B4D8               	btfsc	status,2,c
  3701  001576  EFBF  F00A         	goto	u2111
  3702  00157A  EFC1  F00A         	goto	u2110
  3703  00157E                     u2111:
  3704  00157E  EFD6  F00A         	goto	l2617
  3705  001582                     u2110:
  3706  001582                     
  3707                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3708  001582  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3709  001586  0E05               	movlw	5
  3710  001588  260A               	addwf	??_kpDebounce^0,f,c
  3711  00158A  0E01               	movlw	1
  3712  00158C  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3713  00158E  0E00               	movlw	0
  3714  001590  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3715  001592  2A0A               	incf	??_kpDebounce^0,f,c
  3716  001594  EFCF  F00A         	goto	u2124
  3717  001598                     u2125:
  3718  001598  90D8               	bcf	status,0,c
  3719  00159A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3720  00159C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3721  00159E                     u2124:
  3722  00159E  2E0A               	decfsz	??_kpDebounce^0,f,c
  3723  0015A0  EFCC  F00A         	goto	u2125
  3724  0015A4  500B               	movf	(??_kpDebounce+1)^0,w,c
  3725  0015A6  123A               	iorwf	kpDebounce@newRead^0,f,c
  3726  0015A8  500C               	movf	(??_kpDebounce+2)^0,w,c
  3727  0015AA  123B               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3728  0015AC                     l2617:
  3729                           
  3730                           ;keypad.c: 42:     }
  3731  0015AC  4A0D               	infsnz	kpDebounce@i^0,f,c
  3732  0015AE  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3733  0015B0  EF69  F00A         	goto	l2605
  3734  0015B4                     l2621:
  3735                           
  3736                           ;keypad.c: 43:     if (oldRead == newRead) {
  3737  0015B4  503A               	movf	kpDebounce@newRead^0,w,c
  3738  0015B6  1838               	xorwf	kpDebounce@oldRead^0,w,c
  3739  0015B8  E107               	bnz	u2131
  3740  0015BA  503B               	movf	(kpDebounce@newRead+1)^0,w,c
  3741  0015BC  1839               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3742  0015BE  A4D8               	btfss	status,2,c
  3743  0015C0  EFE4  F00A         	goto	u2131
  3744  0015C4  EFE6  F00A         	goto	u2130
  3745  0015C8                     u2131:
  3746  0015C8  EFE9  F00A         	goto	l2625
  3747  0015CC                     u2130:
  3748  0015CC                     
  3749                           ;keypad.c: 44:         tempo--;
  3750  0015CC  0643               	decf	kpDebounce@tempo^0,f,c
  3751                           
  3752                           ;keypad.c: 45:     } else {
  3753  0015CE  EFEF  F00A         	goto	l232
  3754  0015D2                     l2625:
  3755                           
  3756                           ;keypad.c: 46:         tempo = 1;
  3757  0015D2  0E01               	movlw	1
  3758  0015D4  6E43               	movwf	kpDebounce@tempo^0,c
  3759  0015D6                     
  3760                           ;keypad.c: 47:         oldRead = newRead;
  3761  0015D6  C03A  F038         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3762  0015DA  C03B  F039         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3763  0015DE                     l232:
  3764                           
  3765                           ;keypad.c: 49:     if (tempo == 0) {
  3766  0015DE  5043               	movf	kpDebounce@tempo^0,w,c
  3767  0015E0  A4D8               	btfss	status,2,c
  3768  0015E2  EFF5  F00A         	goto	u2141
  3769  0015E6  EFF7  F00A         	goto	u2140
  3770  0015EA                     u2141:
  3771  0015EA  EFFB  F00A         	goto	l234
  3772  0015EE                     u2140:
  3773  0015EE                     
  3774                           ;keypad.c: 50:         keys = oldRead;
  3775  0015EE  C038  F03C         	movff	kpDebounce@oldRead,_keys
  3776  0015F2  C039  F03D         	movff	kpDebounce@oldRead+1,_keys+1
  3777  0015F6                     l234:
  3778  0015F6  0012               	return		;funcret
  3779  0015F8                     __end_of_kpDebounce:
  3780                           	callstack 0
  3781                           
  3782 ;; *************** function _soWrite *****************
  3783 ;; Defined at:
  3784 ;;		line 18 in file "so.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  value           2    6[COMRAM] int 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  i               1    8[COMRAM] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3798 ;;      Params:         2       0       0       0       0       0       0
  3799 ;;      Locals:         1       0       0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0       0       0
  3801 ;;      Totals:         3       0       0       0       0       0       0
  3802 ;;Total ram usage:        3 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 2
  3805 ;; This function calls:
  3806 ;;		_PulseClockData
  3807 ;;		_PulseEnClock
  3808 ;;		_digitalWrite
  3809 ;; This function is called by:
  3810 ;;		_kpDebounce
  3811 ;;		_pushNibble
  3812 ;;		_pushByte
  3813 ;;		_ssdUpdate
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text25
  3818  001B7C                     __ptext25:
  3819                           	callstack 0
  3820  001B7C                     _soWrite:
  3821                           	callstack 27
  3822  001B7C                     
  3823                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3824  001B7C  0E00               	movlw	0
  3825  001B7E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3826  001B80  0E08               	movlw	8
  3827  001B82  6E01               	movwf	digitalWrite@pin^0,c
  3828  001B84  0E00               	movlw	0
  3829  001B86  6E04               	movwf	(digitalWrite@value+1)^0,c
  3830  001B88  0E00               	movlw	0
  3831  001B8A  6E03               	movwf	digitalWrite@value^0,c
  3832  001B8C  ECA8  F006         	call	_digitalWrite	;wreg free
  3833  001B90                     
  3834                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3835  001B90  0E00               	movlw	0
  3836  001B92  6E09               	movwf	soWrite@i^0,c
  3837  001B94                     l2329:
  3838                           
  3839                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3840  001B94  0E00               	movlw	0
  3841  001B96  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3842  001B98  0E1E               	movlw	30
  3843  001B9A  6E01               	movwf	digitalWrite@pin^0,c
  3844  001B9C  0E80               	movlw	128
  3845  001B9E  1407               	andwf	soWrite@value^0,w,c
  3846  001BA0  6E03               	movwf	digitalWrite@value^0,c
  3847  001BA2  6A04               	clrf	(digitalWrite@value+1)^0,c
  3848  001BA4  ECA8  F006         	call	_digitalWrite	;wreg free
  3849                           
  3850                           ;so.c: 23:   PulseClockData();
  3851  001BA8  ECAC  F00E         	call	_PulseClockData	;wreg free
  3852  001BAC                     
  3853                           ;so.c: 24:   value <<= 1;
  3854  001BAC  90D8               	bcf	status,0,c
  3855  001BAE  3607               	rlcf	soWrite@value^0,f,c
  3856  001BB0  3608               	rlcf	(soWrite@value+1)^0,f,c
  3857  001BB2                     
  3858                           ;so.c: 25:  }
  3859  001BB2  2A09               	incf	soWrite@i^0,f,c
  3860  001BB4  0E07               	movlw	7
  3861  001BB6  6409               	cpfsgt	soWrite@i^0,c
  3862  001BB8  EFE0  F00D         	goto	u1551
  3863  001BBC  EFE2  F00D         	goto	u1550
  3864  001BC0                     u1551:
  3865  001BC0  EFCA  F00D         	goto	l2329
  3866  001BC4                     u1550:
  3867  001BC4                     
  3868                           ;so.c: 26:  PulseEnClock();
  3869  001BC4  EC97  F00E         	call	_PulseEnClock	;wreg free
  3870  001BC8  0012               	return		;funcret
  3871  001BCA                     __end_of_soWrite:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _PulseEnClock *****************
  3875 ;; Defined at:
  3876 ;;		line 9 in file "so.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3890 ;;      Params:         0       0       0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		_digitalWrite
  3899 ;; This function is called by:
  3900 ;;		_soWrite
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text26
  3905  001D2E                     __ptext26:
  3906                           	callstack 0
  3907  001D2E                     _PulseEnClock:
  3908                           	callstack 27
  3909  001D2E                     
  3910                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  3911  001D2E  0E00               	movlw	0
  3912  001D30  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3913  001D32  0E1F               	movlw	31
  3914  001D34  6E01               	movwf	digitalWrite@pin^0,c
  3915  001D36  0E00               	movlw	0
  3916  001D38  6E04               	movwf	(digitalWrite@value+1)^0,c
  3917  001D3A  0E01               	movlw	1
  3918  001D3C  6E03               	movwf	digitalWrite@value^0,c
  3919  001D3E  ECA8  F006         	call	_digitalWrite	;wreg free
  3920                           
  3921                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  3922  001D42  0E00               	movlw	0
  3923  001D44  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3924  001D46  0E1F               	movlw	31
  3925  001D48  6E01               	movwf	digitalWrite@pin^0,c
  3926  001D4A  0E00               	movlw	0
  3927  001D4C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3928  001D4E  0E00               	movlw	0
  3929  001D50  6E03               	movwf	digitalWrite@value^0,c
  3930  001D52  ECA8  F006         	call	_digitalWrite	;wreg free
  3931  001D56  0012               	return		;funcret
  3932  001D58                     __end_of_PulseEnClock:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function _PulseClockData *****************
  3936 ;; Defined at:
  3937 ;;		line 14 in file "so.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0, cstack
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3951 ;;      Params:         0       0       0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 1
  3958 ;; This function calls:
  3959 ;;		_digitalWrite
  3960 ;; This function is called by:
  3961 ;;		_soWrite
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           	psect	text27
  3966  001D58                     __ptext27:
  3967                           	callstack 0
  3968  001D58                     _PulseClockData:
  3969                           	callstack 27
  3970  001D58                     
  3971                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  3972  001D58  0E00               	movlw	0
  3973  001D5A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3974  001D5C  0E08               	movlw	8
  3975  001D5E  6E01               	movwf	digitalWrite@pin^0,c
  3976  001D60  0E00               	movlw	0
  3977  001D62  6E04               	movwf	(digitalWrite@value+1)^0,c
  3978  001D64  0E01               	movlw	1
  3979  001D66  6E03               	movwf	digitalWrite@value^0,c
  3980  001D68  ECA8  F006         	call	_digitalWrite	;wreg free
  3981                           
  3982                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  3983  001D6C  0E00               	movlw	0
  3984  001D6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3985  001D70  0E08               	movlw	8
  3986  001D72  6E01               	movwf	digitalWrite@pin^0,c
  3987  001D74  0E00               	movlw	0
  3988  001D76  6E04               	movwf	(digitalWrite@value+1)^0,c
  3989  001D78  0E00               	movlw	0
  3990  001D7A  6E03               	movwf	digitalWrite@value^0,c
  3991  001D7C  ECA8  F006         	call	_digitalWrite	;wreg free
  3992  001D80  0012               	return		;funcret
  3993  001D82                     __end_of_PulseClockData:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _digitalWrite *****************
  3997 ;; Defined at:
  3998 ;;		line 14 in file "io.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  pin             2    0[COMRAM] int 
  4001 ;;  value           2    2[COMRAM] int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4013 ;;      Params:         4       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0
  4015 ;;      Temps:          2       0       0       0       0       0       0
  4016 ;;      Totals:         6       0       0       0       0       0       0
  4017 ;;Total ram usage:        6 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_pulseEnablePin
  4023 ;;		_pushNibble
  4024 ;;		_pushByte
  4025 ;;		_rgbColor
  4026 ;;		_PulseEnClock
  4027 ;;		_PulseClockData
  4028 ;;		_soWrite
  4029 ;;		_ssdUpdate
  4030 ;;		_clear_SCL
  4031 ;;		_clear_SDA
  4032 ;;		_turnOn
  4033 ;;		_turnOff
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text28
  4038  000D50                     __ptext28:
  4039                           	callstack 0
  4040  000D50                     _digitalWrite:
  4041                           	callstack 28
  4042  000D50                     
  4043                           ;io.c: 16:     if(pin <8){
  4044  000D50  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4045  000D52  EFB6  F006         	goto	u1350
  4046  000D56  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4047  000D58  E107               	bnz	u1351
  4048  000D5A  0E08               	movlw	8
  4049  000D5C  5C01               	subwf	digitalWrite@pin^0,w,c
  4050  000D5E  B0D8               	btfsc	status,0,c
  4051  000D60  EFB4  F006         	goto	u1351
  4052  000D64  EFB6  F006         	goto	u1350
  4053  000D68                     u1351:
  4054  000D68  EFE0  F006         	goto	l2285
  4055  000D6C                     u1350:
  4056  000D6C                     
  4057                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4058  000D6C  5003               	movf	digitalWrite@value^0,w,c
  4059  000D6E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4060  000D70  B4D8               	btfsc	status,2,c
  4061  000D72  EFBD  F006         	goto	u1361
  4062  000D76  EFBF  F006         	goto	u1360
  4063  000D7A                     u1361:
  4064  000D7A  EFCF  F006         	goto	l2283
  4065  000D7E                     u1360:
  4066  000D7E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4067  000D82  0E01               	movlw	1
  4068  000D84  6E06               	movwf	(??_digitalWrite+1)^0,c
  4069  000D86  2A05               	incf	??_digitalWrite^0,f,c
  4070  000D88  EFC8  F006         	goto	u1374
  4071  000D8C                     u1375:
  4072  000D8C  90D8               	bcf	status,0,c
  4073  000D8E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4074  000D90                     u1374:
  4075  000D90  2E05               	decfsz	??_digitalWrite^0,f,c
  4076  000D92  EFC6  F006         	goto	u1375
  4077  000D96  5006               	movf	(??_digitalWrite+1)^0,w,c
  4078  000D98  1280               	iorwf	128,f,c	;volatile
  4079  000D9A  EFCE  F007         	goto	l161
  4080  000D9E                     l2283:
  4081  000D9E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4082  000DA2  0E01               	movlw	1
  4083  000DA4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4084  000DA6  2A05               	incf	??_digitalWrite^0,f,c
  4085  000DA8  EFD8  F006         	goto	u1384
  4086  000DAC                     u1385:
  4087  000DAC  90D8               	bcf	status,0,c
  4088  000DAE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4089  000DB0                     u1384:
  4090  000DB0  2E05               	decfsz	??_digitalWrite^0,f,c
  4091  000DB2  EFD6  F006         	goto	u1385
  4092  000DB6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4093  000DB8  0AFF               	xorlw	255
  4094  000DBA  1680               	andwf	128,f,c	;volatile
  4095  000DBC  EFCE  F007         	goto	l161
  4096  000DC0                     l2285:
  4097  000DC0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4098  000DC2  EFEE  F006         	goto	u1390
  4099  000DC6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4100  000DC8  E107               	bnz	u1391
  4101  000DCA  0E10               	movlw	16
  4102  000DCC  5C01               	subwf	digitalWrite@pin^0,w,c
  4103  000DCE  B0D8               	btfsc	status,0,c
  4104  000DD0  EFEC  F006         	goto	u1391
  4105  000DD4  EFEE  F006         	goto	u1390
  4106  000DD8                     u1391:
  4107  000DD8  EF1C  F007         	goto	l2293
  4108  000DDC                     u1390:
  4109  000DDC                     
  4110                           ;io.c: 20:         pin -=8;
  4111  000DDC  0EF8               	movlw	248
  4112  000DDE  2601               	addwf	digitalWrite@pin^0,f,c
  4113  000DE0  0EFF               	movlw	255
  4114  000DE2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4115                           
  4116                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4117  000DE4  5003               	movf	digitalWrite@value^0,w,c
  4118  000DE6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4119  000DE8  B4D8               	btfsc	status,2,c
  4120  000DEA  EFF9  F006         	goto	u1401
  4121  000DEE  EFFB  F006         	goto	u1400
  4122  000DF2                     u1401:
  4123  000DF2  EF0B  F007         	goto	l2291
  4124  000DF6                     u1400:
  4125  000DF6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4126  000DFA  0E01               	movlw	1
  4127  000DFC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4128  000DFE  2A05               	incf	??_digitalWrite^0,f,c
  4129  000E00  EF04  F007         	goto	u1414
  4130  000E04                     u1415:
  4131  000E04  90D8               	bcf	status,0,c
  4132  000E06  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4133  000E08                     u1414:
  4134  000E08  2E05               	decfsz	??_digitalWrite^0,f,c
  4135  000E0A  EF02  F007         	goto	u1415
  4136  000E0E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4137  000E10  1281               	iorwf	129,f,c	;volatile
  4138  000E12  EFCE  F007         	goto	l161
  4139  000E16                     l2291:
  4140  000E16  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4141  000E1A  0E01               	movlw	1
  4142  000E1C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4143  000E1E  2A05               	incf	??_digitalWrite^0,f,c
  4144  000E20  EF14  F007         	goto	u1424
  4145  000E24                     u1425:
  4146  000E24  90D8               	bcf	status,0,c
  4147  000E26  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4148  000E28                     u1424:
  4149  000E28  2E05               	decfsz	??_digitalWrite^0,f,c
  4150  000E2A  EF12  F007         	goto	u1425
  4151  000E2E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4152  000E30  0AFF               	xorlw	255
  4153  000E32  1681               	andwf	129,f,c	;volatile
  4154  000E34  EFCE  F007         	goto	l161
  4155  000E38                     l2293:
  4156  000E38  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4157  000E3A  EF2A  F007         	goto	u1430
  4158  000E3E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4159  000E40  E107               	bnz	u1431
  4160  000E42  0E18               	movlw	24
  4161  000E44  5C01               	subwf	digitalWrite@pin^0,w,c
  4162  000E46  B0D8               	btfsc	status,0,c
  4163  000E48  EF28  F007         	goto	u1431
  4164  000E4C  EF2A  F007         	goto	u1430
  4165  000E50                     u1431:
  4166  000E50  EF58  F007         	goto	l2301
  4167  000E54                     u1430:
  4168  000E54                     
  4169                           ;io.c: 24:         pin -=16;
  4170  000E54  0EF0               	movlw	240
  4171  000E56  2601               	addwf	digitalWrite@pin^0,f,c
  4172  000E58  0EFF               	movlw	255
  4173  000E5A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4174                           
  4175                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4176  000E5C  5003               	movf	digitalWrite@value^0,w,c
  4177  000E5E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4178  000E60  B4D8               	btfsc	status,2,c
  4179  000E62  EF35  F007         	goto	u1441
  4180  000E66  EF37  F007         	goto	u1440
  4181  000E6A                     u1441:
  4182  000E6A  EF47  F007         	goto	l2299
  4183  000E6E                     u1440:
  4184  000E6E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4185  000E72  0E01               	movlw	1
  4186  000E74  6E06               	movwf	(??_digitalWrite+1)^0,c
  4187  000E76  2A05               	incf	??_digitalWrite^0,f,c
  4188  000E78  EF40  F007         	goto	u1454
  4189  000E7C                     u1455:
  4190  000E7C  90D8               	bcf	status,0,c
  4191  000E7E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4192  000E80                     u1454:
  4193  000E80  2E05               	decfsz	??_digitalWrite^0,f,c
  4194  000E82  EF3E  F007         	goto	u1455
  4195  000E86  5006               	movf	(??_digitalWrite+1)^0,w,c
  4196  000E88  1282               	iorwf	130,f,c	;volatile
  4197  000E8A  EFCE  F007         	goto	l161
  4198  000E8E                     l2299:
  4199  000E8E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4200  000E92  0E01               	movlw	1
  4201  000E94  6E06               	movwf	(??_digitalWrite+1)^0,c
  4202  000E96  2A05               	incf	??_digitalWrite^0,f,c
  4203  000E98  EF50  F007         	goto	u1464
  4204  000E9C                     u1465:
  4205  000E9C  90D8               	bcf	status,0,c
  4206  000E9E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4207  000EA0                     u1464:
  4208  000EA0  2E05               	decfsz	??_digitalWrite^0,f,c
  4209  000EA2  EF4E  F007         	goto	u1465
  4210  000EA6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4211  000EA8  0AFF               	xorlw	255
  4212  000EAA  1682               	andwf	130,f,c	;volatile
  4213  000EAC  EFCE  F007         	goto	l161
  4214  000EB0                     l2301:
  4215  000EB0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4216  000EB2  EF66  F007         	goto	u1470
  4217  000EB6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4218  000EB8  E107               	bnz	u1471
  4219  000EBA  0E20               	movlw	32
  4220  000EBC  5C01               	subwf	digitalWrite@pin^0,w,c
  4221  000EBE  B0D8               	btfsc	status,0,c
  4222  000EC0  EF64  F007         	goto	u1471
  4223  000EC4  EF66  F007         	goto	u1470
  4224  000EC8                     u1471:
  4225  000EC8  EF94  F007         	goto	l2309
  4226  000ECC                     u1470:
  4227  000ECC                     
  4228                           ;io.c: 28:         pin -=24;
  4229  000ECC  0EE8               	movlw	232
  4230  000ECE  2601               	addwf	digitalWrite@pin^0,f,c
  4231  000ED0  0EFF               	movlw	255
  4232  000ED2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4233                           
  4234                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4235  000ED4  5003               	movf	digitalWrite@value^0,w,c
  4236  000ED6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4237  000ED8  B4D8               	btfsc	status,2,c
  4238  000EDA  EF71  F007         	goto	u1481
  4239  000EDE  EF73  F007         	goto	u1480
  4240  000EE2                     u1481:
  4241  000EE2  EF83  F007         	goto	l2307
  4242  000EE6                     u1480:
  4243  000EE6  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4244  000EEA  0E01               	movlw	1
  4245  000EEC  6E06               	movwf	(??_digitalWrite+1)^0,c
  4246  000EEE  2A05               	incf	??_digitalWrite^0,f,c
  4247  000EF0  EF7C  F007         	goto	u1494
  4248  000EF4                     u1495:
  4249  000EF4  90D8               	bcf	status,0,c
  4250  000EF6  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4251  000EF8                     u1494:
  4252  000EF8  2E05               	decfsz	??_digitalWrite^0,f,c
  4253  000EFA  EF7A  F007         	goto	u1495
  4254  000EFE  5006               	movf	(??_digitalWrite+1)^0,w,c
  4255  000F00  1283               	iorwf	131,f,c	;volatile
  4256  000F02  EFCE  F007         	goto	l161
  4257  000F06                     l2307:
  4258  000F06  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4259  000F0A  0E01               	movlw	1
  4260  000F0C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4261  000F0E  2A05               	incf	??_digitalWrite^0,f,c
  4262  000F10  EF8C  F007         	goto	u1504
  4263  000F14                     u1505:
  4264  000F14  90D8               	bcf	status,0,c
  4265  000F16  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4266  000F18                     u1504:
  4267  000F18  2E05               	decfsz	??_digitalWrite^0,f,c
  4268  000F1A  EF8A  F007         	goto	u1505
  4269  000F1E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4270  000F20  0AFF               	xorlw	255
  4271  000F22  1683               	andwf	131,f,c	;volatile
  4272  000F24  EFCE  F007         	goto	l161
  4273  000F28                     l2309:
  4274  000F28  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4275  000F2A  EFA2  F007         	goto	u1510
  4276  000F2E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4277  000F30  E107               	bnz	u1511
  4278  000F32  0E28               	movlw	40
  4279  000F34  5C01               	subwf	digitalWrite@pin^0,w,c
  4280  000F36  B0D8               	btfsc	status,0,c
  4281  000F38  EFA0  F007         	goto	u1511
  4282  000F3C  EFA2  F007         	goto	u1510
  4283  000F40                     u1511:
  4284  000F40  EFCE  F007         	goto	l161
  4285  000F44                     u1510:
  4286  000F44                     
  4287                           ;io.c: 32:         pin -=32;
  4288  000F44  0EE0               	movlw	224
  4289  000F46  2601               	addwf	digitalWrite@pin^0,f,c
  4290  000F48  0EFF               	movlw	255
  4291  000F4A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4292                           
  4293                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4294  000F4C  5003               	movf	digitalWrite@value^0,w,c
  4295  000F4E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4296  000F50  B4D8               	btfsc	status,2,c
  4297  000F52  EFAD  F007         	goto	u1521
  4298  000F56  EFAF  F007         	goto	u1520
  4299  000F5A                     u1521:
  4300  000F5A  EFBF  F007         	goto	l2315
  4301  000F5E                     u1520:
  4302  000F5E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4303  000F62  0E01               	movlw	1
  4304  000F64  6E06               	movwf	(??_digitalWrite+1)^0,c
  4305  000F66  2A05               	incf	??_digitalWrite^0,f,c
  4306  000F68  EFB8  F007         	goto	u1534
  4307  000F6C                     u1535:
  4308  000F6C  90D8               	bcf	status,0,c
  4309  000F6E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4310  000F70                     u1534:
  4311  000F70  2E05               	decfsz	??_digitalWrite^0,f,c
  4312  000F72  EFB6  F007         	goto	u1535
  4313  000F76  5006               	movf	(??_digitalWrite+1)^0,w,c
  4314  000F78  1284               	iorwf	132,f,c	;volatile
  4315  000F7A  EFCE  F007         	goto	l161
  4316  000F7E                     l2315:
  4317  000F7E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4318  000F82  0E01               	movlw	1
  4319  000F84  6E06               	movwf	(??_digitalWrite+1)^0,c
  4320  000F86  2A05               	incf	??_digitalWrite^0,f,c
  4321  000F88  EFC8  F007         	goto	u1544
  4322  000F8C                     u1545:
  4323  000F8C  90D8               	bcf	status,0,c
  4324  000F8E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4325  000F90                     u1544:
  4326  000F90  2E05               	decfsz	??_digitalWrite^0,f,c
  4327  000F92  EFC6  F007         	goto	u1545
  4328  000F96  5006               	movf	(??_digitalWrite+1)^0,w,c
  4329  000F98  0AFF               	xorlw	255
  4330  000F9A  1684               	andwf	132,f,c	;volatile
  4331  000F9C                     l161:
  4332  000F9C  0012               	return		;funcret
  4333  000F9E                     __end_of_digitalWrite:
  4334                           	callstack 0
  4335                           
  4336 ;; *************** function _digitalRead *****************
  4337 ;; Defined at:
  4338 ;;		line 39 in file "io.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  pin             2    0[COMRAM] int 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;		None
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2    0[COMRAM] int 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4352 ;;      Params:         2       0       0       0       0       0       0
  4353 ;;      Locals:         0       0       0       0       0       0       0
  4354 ;;      Temps:          3       0       0       0       0       0       0
  4355 ;;      Totals:         5       0       0       0       0       0       0
  4356 ;;Total ram usage:        5 bytes
  4357 ;; Hardware stack levels used: 1
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_kpDebounce
  4362 ;;		_read_SCL
  4363 ;;		_read_SDA
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text29
  4368  001358                     __ptext29:
  4369                           	callstack 0
  4370  001358                     _digitalRead:
  4371                           	callstack 29
  4372  001358                     
  4373                           ;io.c: 40:     if(pin <8){
  4374  001358  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4375  00135A  EFBA  F009         	goto	u1850
  4376  00135E  5002               	movf	(digitalRead@pin+1)^0,w,c
  4377  001360  E107               	bnz	u1851
  4378  001362  0E08               	movlw	8
  4379  001364  5C01               	subwf	digitalRead@pin^0,w,c
  4380  001366  B0D8               	btfsc	status,0,c
  4381  001368  EFB8  F009         	goto	u1851
  4382  00136C  EFBA  F009         	goto	u1850
  4383  001370                     u1851:
  4384  001370  EFCE  F009         	goto	l2449
  4385  001374                     u1850:
  4386  001374                     
  4387                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4388  001374  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4389  001378  0E01               	movlw	1
  4390  00137A  6E04               	movwf	(??_digitalRead+1)^0,c
  4391  00137C  2A03               	incf	??_digitalRead^0,f,c
  4392  00137E  EFC3  F009         	goto	u1864
  4393  001382                     u1865:
  4394  001382  90D8               	bcf	status,0,c
  4395  001384  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4396  001386                     u1864:
  4397  001386  2E03               	decfsz	??_digitalRead^0,f,c
  4398  001388  EFC1  F009         	goto	u1865
  4399  00138C  5004               	movf	(??_digitalRead+1)^0,w,c
  4400  00138E  1480               	andwf	128,w,c	;volatile
  4401  001390  6E05               	movwf	(??_digitalRead+2)^0,c
  4402  001392  5005               	movf	(??_digitalRead+2)^0,w,c
  4403  001394  6E01               	movwf	?_digitalRead^0,c
  4404  001396  6A02               	clrf	(?_digitalRead+1)^0,c
  4405  001398  EF60  F00A         	goto	l165
  4406  00139C                     l2449:
  4407  00139C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4408  00139E  EFDC  F009         	goto	u1870
  4409  0013A2  5002               	movf	(digitalRead@pin+1)^0,w,c
  4410  0013A4  E107               	bnz	u1871
  4411  0013A6  0E10               	movlw	16
  4412  0013A8  5C01               	subwf	digitalRead@pin^0,w,c
  4413  0013AA  B0D8               	btfsc	status,0,c
  4414  0013AC  EFDA  F009         	goto	u1871
  4415  0013B0  EFDC  F009         	goto	u1870
  4416  0013B4                     u1871:
  4417  0013B4  EFF2  F009         	goto	l2457
  4418  0013B8                     u1870:
  4419  0013B8                     
  4420                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4421  0013B8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4422  0013BC  0EF8               	movlw	-8
  4423  0013BE  2603               	addwf	??_digitalRead^0,f,c
  4424  0013C0  0E01               	movlw	1
  4425  0013C2  6E04               	movwf	(??_digitalRead+1)^0,c
  4426  0013C4  2A03               	incf	??_digitalRead^0,f,c
  4427  0013C6  EFE7  F009         	goto	u1884
  4428  0013CA                     u1885:
  4429  0013CA  90D8               	bcf	status,0,c
  4430  0013CC  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4431  0013CE                     u1884:
  4432  0013CE  2E03               	decfsz	??_digitalRead^0,f,c
  4433  0013D0  EFE5  F009         	goto	u1885
  4434  0013D4  5004               	movf	(??_digitalRead+1)^0,w,c
  4435  0013D6  1481               	andwf	129,w,c	;volatile
  4436  0013D8  6E05               	movwf	(??_digitalRead+2)^0,c
  4437  0013DA  5005               	movf	(??_digitalRead+2)^0,w,c
  4438  0013DC  6E01               	movwf	?_digitalRead^0,c
  4439  0013DE  6A02               	clrf	(?_digitalRead+1)^0,c
  4440  0013E0  EF60  F00A         	goto	l165
  4441  0013E4                     l2457:
  4442  0013E4  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4443  0013E6  EF00  F00A         	goto	u1890
  4444  0013EA  5002               	movf	(digitalRead@pin+1)^0,w,c
  4445  0013EC  E107               	bnz	u1891
  4446  0013EE  0E18               	movlw	24
  4447  0013F0  5C01               	subwf	digitalRead@pin^0,w,c
  4448  0013F2  B0D8               	btfsc	status,0,c
  4449  0013F4  EFFE  F009         	goto	u1891
  4450  0013F8  EF00  F00A         	goto	u1890
  4451  0013FC                     u1891:
  4452  0013FC  EF16  F00A         	goto	l2465
  4453  001400                     u1890:
  4454  001400                     
  4455                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4456  001400  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4457  001404  0EF0               	movlw	-16
  4458  001406  2603               	addwf	??_digitalRead^0,f,c
  4459  001408  0E01               	movlw	1
  4460  00140A  6E04               	movwf	(??_digitalRead+1)^0,c
  4461  00140C  2A03               	incf	??_digitalRead^0,f,c
  4462  00140E  EF0B  F00A         	goto	u1904
  4463  001412                     u1905:
  4464  001412  90D8               	bcf	status,0,c
  4465  001414  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4466  001416                     u1904:
  4467  001416  2E03               	decfsz	??_digitalRead^0,f,c
  4468  001418  EF09  F00A         	goto	u1905
  4469  00141C  5004               	movf	(??_digitalRead+1)^0,w,c
  4470  00141E  1482               	andwf	130,w,c	;volatile
  4471  001420  6E05               	movwf	(??_digitalRead+2)^0,c
  4472  001422  5005               	movf	(??_digitalRead+2)^0,w,c
  4473  001424  6E01               	movwf	?_digitalRead^0,c
  4474  001426  6A02               	clrf	(?_digitalRead+1)^0,c
  4475  001428  EF60  F00A         	goto	l165
  4476  00142C                     l2465:
  4477  00142C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4478  00142E  EF24  F00A         	goto	u1910
  4479  001432  5002               	movf	(digitalRead@pin+1)^0,w,c
  4480  001434  E107               	bnz	u1911
  4481  001436  0E20               	movlw	32
  4482  001438  5C01               	subwf	digitalRead@pin^0,w,c
  4483  00143A  B0D8               	btfsc	status,0,c
  4484  00143C  EF22  F00A         	goto	u1911
  4485  001440  EF24  F00A         	goto	u1910
  4486  001444                     u1911:
  4487  001444  EF3A  F00A         	goto	l2473
  4488  001448                     u1910:
  4489  001448                     
  4490                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4491  001448  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4492  00144C  0EE8               	movlw	-24
  4493  00144E  2603               	addwf	??_digitalRead^0,f,c
  4494  001450  0E01               	movlw	1
  4495  001452  6E04               	movwf	(??_digitalRead+1)^0,c
  4496  001454  2A03               	incf	??_digitalRead^0,f,c
  4497  001456  EF2F  F00A         	goto	u1924
  4498  00145A                     u1925:
  4499  00145A  90D8               	bcf	status,0,c
  4500  00145C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4501  00145E                     u1924:
  4502  00145E  2E03               	decfsz	??_digitalRead^0,f,c
  4503  001460  EF2D  F00A         	goto	u1925
  4504  001464  5004               	movf	(??_digitalRead+1)^0,w,c
  4505  001466  1483               	andwf	131,w,c	;volatile
  4506  001468  6E05               	movwf	(??_digitalRead+2)^0,c
  4507  00146A  5005               	movf	(??_digitalRead+2)^0,w,c
  4508  00146C  6E01               	movwf	?_digitalRead^0,c
  4509  00146E  6A02               	clrf	(?_digitalRead+1)^0,c
  4510  001470  EF60  F00A         	goto	l165
  4511  001474                     l2473:
  4512  001474  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4513  001476  EF48  F00A         	goto	u1930
  4514  00147A  5002               	movf	(digitalRead@pin+1)^0,w,c
  4515  00147C  E107               	bnz	u1931
  4516  00147E  0E28               	movlw	40
  4517  001480  5C01               	subwf	digitalRead@pin^0,w,c
  4518  001482  B0D8               	btfsc	status,0,c
  4519  001484  EF46  F00A         	goto	u1931
  4520  001488  EF48  F00A         	goto	u1930
  4521  00148C                     u1931:
  4522  00148C  EF5E  F00A         	goto	l170
  4523  001490                     u1930:
  4524  001490                     
  4525                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4526  001490  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4527  001494  0EE0               	movlw	-32
  4528  001496  2603               	addwf	??_digitalRead^0,f,c
  4529  001498  0E01               	movlw	1
  4530  00149A  6E04               	movwf	(??_digitalRead+1)^0,c
  4531  00149C  2A03               	incf	??_digitalRead^0,f,c
  4532  00149E  EF53  F00A         	goto	u1944
  4533  0014A2                     u1945:
  4534  0014A2  90D8               	bcf	status,0,c
  4535  0014A4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4536  0014A6                     u1944:
  4537  0014A6  2E03               	decfsz	??_digitalRead^0,f,c
  4538  0014A8  EF51  F00A         	goto	u1945
  4539  0014AC  5004               	movf	(??_digitalRead+1)^0,w,c
  4540  0014AE  1484               	andwf	132,w,c	;volatile
  4541  0014B0  6E05               	movwf	(??_digitalRead+2)^0,c
  4542  0014B2  5005               	movf	(??_digitalRead+2)^0,w,c
  4543  0014B4  6E01               	movwf	?_digitalRead^0,c
  4544  0014B6  6A02               	clrf	(?_digitalRead+1)^0,c
  4545  0014B8  EF60  F00A         	goto	l165
  4546  0014BC                     l170:
  4547  0014BC                     
  4548                           ;io.c: 51:     return -1;
  4549  0014BC  6801               	setf	?_digitalRead^0,c
  4550  0014BE  6802               	setf	(?_digitalRead+1)^0,c
  4551  0014C0                     l165:
  4552  0014C0  0012               	return		;funcret
  4553  0014C2                     __end_of_digitalRead:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _adcInit *****************
  4557 ;; Defined at:
  4558 ;;		line 25 in file "adc.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4572 ;;      Params:         0       0       0       0       0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0
  4574 ;;      Temps:          0       0       0       0       0       0       0
  4575 ;;      Totals:         0       0       0       0       0       0       0
  4576 ;;Total ram usage:        0 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; Hardware stack levels required when called: 1
  4579 ;; This function calls:
  4580 ;;		_pinMode
  4581 ;; This function is called by:
  4582 ;;		_main
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text30
  4587  001BCA                     __ptext30:
  4588                           	callstack 0
  4589  001BCA                     _adcInit:
  4590                           	callstack 29
  4591  001BCA                     
  4592                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4593  001BCA  0E00               	movlw	0
  4594  001BCC  6E02               	movwf	(pinMode@pin+1)^0,c
  4595  001BCE  0E00               	movlw	0
  4596  001BD0  6E01               	movwf	pinMode@pin^0,c
  4597  001BD2  0E00               	movlw	0
  4598  001BD4  6E04               	movwf	(pinMode@type+1)^0,c
  4599  001BD6  0E01               	movlw	1
  4600  001BD8  6E03               	movwf	pinMode@type^0,c
  4601  001BDA  ECCF  F007         	call	_pinMode	;wreg free
  4602                           
  4603                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4604  001BDE  0E00               	movlw	0
  4605  001BE0  6E02               	movwf	(pinMode@pin+1)^0,c
  4606  001BE2  0E01               	movlw	1
  4607  001BE4  6E01               	movwf	pinMode@pin^0,c
  4608  001BE6  0E00               	movlw	0
  4609  001BE8  6E04               	movwf	(pinMode@type+1)^0,c
  4610  001BEA  0E01               	movlw	1
  4611  001BEC  6E03               	movwf	pinMode@type^0,c
  4612  001BEE  ECCF  F007         	call	_pinMode	;wreg free
  4613                           
  4614                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4615  001BF2  0E00               	movlw	0
  4616  001BF4  6E02               	movwf	(pinMode@pin+1)^0,c
  4617  001BF6  0E02               	movlw	2
  4618  001BF8  6E01               	movwf	pinMode@pin^0,c
  4619  001BFA  0E00               	movlw	0
  4620  001BFC  6E04               	movwf	(pinMode@type+1)^0,c
  4621  001BFE  0E01               	movlw	1
  4622  001C00  6E03               	movwf	pinMode@type^0,c
  4623  001C02  ECCF  F007         	call	_pinMode	;wreg free
  4624  001C06                     
  4625                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4626  001C06  80C2               	bsf	194,0,c	;volatile
  4627  001C08                     
  4628                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4629  001C08  0E0C               	movlw	12
  4630  001C0A  6EC1               	movwf	193,c	;volatile
  4631  001C0C                     
  4632                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4633  001C0C  0EAA               	movlw	170
  4634  001C0E  6EC0               	movwf	192,c	;volatile
  4635  001C10  0012               	return		;funcret
  4636  001C12                     __end_of_adcInit:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _pinMode *****************
  4640 ;; Defined at:
  4641 ;;		line 54 in file "io.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  pin             2    0[COMRAM] int 
  4644 ;;  type            2    2[COMRAM] int 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4656 ;;      Params:         4       0       0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0
  4658 ;;      Temps:          2       0       0       0       0       0       0
  4659 ;;      Totals:         6       0       0       0       0       0       0
  4660 ;;Total ram usage:        6 bytes
  4661 ;; Hardware stack levels used: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_adcInit
  4666 ;;		_kpInit
  4667 ;;		_lcdInit
  4668 ;;		_soInit
  4669 ;;		_ssdInit
  4670 ;;		_i2cInit
  4671 ;;		_read_SCL
  4672 ;;		_read_SDA
  4673 ;;		_clear_SCL
  4674 ;;		_clear_SDA
  4675 ;;		_rgbInit
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text31
  4680  000F9E                     __ptext31:
  4681                           	callstack 0
  4682  000F9E                     _pinMode:
  4683                           	callstack 28
  4684  000F9E                     
  4685                           ;io.c: 56:     if(pin <8){
  4686  000F9E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4687  000FA0  EFDD  F007         	goto	u1560
  4688  000FA4  5002               	movf	(pinMode@pin+1)^0,w,c
  4689  000FA6  E107               	bnz	u1561
  4690  000FA8  0E08               	movlw	8
  4691  000FAA  5C01               	subwf	pinMode@pin^0,w,c
  4692  000FAC  B0D8               	btfsc	status,0,c
  4693  000FAE  EFDB  F007         	goto	u1561
  4694  000FB2  EFDD  F007         	goto	u1560
  4695  000FB6                     u1561:
  4696  000FB6  EF07  F008         	goto	l2353
  4697  000FBA                     u1560:
  4698  000FBA                     
  4699                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4700  000FBA  5003               	movf	pinMode@type^0,w,c
  4701  000FBC  1004               	iorwf	(pinMode@type+1)^0,w,c
  4702  000FBE  B4D8               	btfsc	status,2,c
  4703  000FC0  EFE4  F007         	goto	u1571
  4704  000FC4  EFE6  F007         	goto	u1570
  4705  000FC8                     u1571:
  4706  000FC8  EFF6  F007         	goto	l2351
  4707  000FCC                     u1570:
  4708  000FCC  C001  F005         	movff	pinMode@pin,??_pinMode
  4709  000FD0  0E01               	movlw	1
  4710  000FD2  6E06               	movwf	(??_pinMode+1)^0,c
  4711  000FD4  2A05               	incf	??_pinMode^0,f,c
  4712  000FD6  EFEF  F007         	goto	u1584
  4713  000FDA                     u1585:
  4714  000FDA  90D8               	bcf	status,0,c
  4715  000FDC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4716  000FDE                     u1584:
  4717  000FDE  2E05               	decfsz	??_pinMode^0,f,c
  4718  000FE0  EFED  F007         	goto	u1585
  4719  000FE4  5006               	movf	(??_pinMode+1)^0,w,c
  4720  000FE6  1292               	iorwf	146,f,c	;volatile
  4721  000FE8  EFF5  F008         	goto	l195
  4722  000FEC                     l2351:
  4723  000FEC  C001  F005         	movff	pinMode@pin,??_pinMode
  4724  000FF0  0E01               	movlw	1
  4725  000FF2  6E06               	movwf	(??_pinMode+1)^0,c
  4726  000FF4  2A05               	incf	??_pinMode^0,f,c
  4727  000FF6  EFFF  F007         	goto	u1594
  4728  000FFA                     u1595:
  4729  000FFA  90D8               	bcf	status,0,c
  4730  000FFC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4731  000FFE                     u1594:
  4732  000FFE  2E05               	decfsz	??_pinMode^0,f,c
  4733  001000  EFFD  F007         	goto	u1595
  4734  001004  5006               	movf	(??_pinMode+1)^0,w,c
  4735  001006  0AFF               	xorlw	255
  4736  001008  1692               	andwf	146,f,c	;volatile
  4737  00100A  EFF5  F008         	goto	l195
  4738  00100E                     l2353:
  4739  00100E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4740  001010  EF15  F008         	goto	u1600
  4741  001014  5002               	movf	(pinMode@pin+1)^0,w,c
  4742  001016  E107               	bnz	u1601
  4743  001018  0E10               	movlw	16
  4744  00101A  5C01               	subwf	pinMode@pin^0,w,c
  4745  00101C  B0D8               	btfsc	status,0,c
  4746  00101E  EF13  F008         	goto	u1601
  4747  001022  EF15  F008         	goto	u1600
  4748  001026                     u1601:
  4749  001026  EF43  F008         	goto	l2361
  4750  00102A                     u1600:
  4751  00102A                     
  4752                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4753  00102A  5003               	movf	pinMode@type^0,w,c
  4754  00102C  1004               	iorwf	(pinMode@type+1)^0,w,c
  4755  00102E  B4D8               	btfsc	status,2,c
  4756  001030  EF1C  F008         	goto	u1611
  4757  001034  EF1E  F008         	goto	u1610
  4758  001038                     u1611:
  4759  001038  EF30  F008         	goto	l2359
  4760  00103C                     u1610:
  4761  00103C  C001  F005         	movff	pinMode@pin,??_pinMode
  4762  001040  0EF8               	movlw	-8
  4763  001042  2605               	addwf	??_pinMode^0,f,c
  4764  001044  0E01               	movlw	1
  4765  001046  6E06               	movwf	(??_pinMode+1)^0,c
  4766  001048  2A05               	incf	??_pinMode^0,f,c
  4767  00104A  EF29  F008         	goto	u1624
  4768  00104E                     u1625:
  4769  00104E  90D8               	bcf	status,0,c
  4770  001050  3606               	rlcf	(??_pinMode+1)^0,f,c
  4771  001052                     u1624:
  4772  001052  2E05               	decfsz	??_pinMode^0,f,c
  4773  001054  EF27  F008         	goto	u1625
  4774  001058  5006               	movf	(??_pinMode+1)^0,w,c
  4775  00105A  1293               	iorwf	147,f,c	;volatile
  4776  00105C  EFF5  F008         	goto	l195
  4777  001060                     l2359:
  4778  001060  C001  F005         	movff	pinMode@pin,??_pinMode
  4779  001064  0EF8               	movlw	-8
  4780  001066  2605               	addwf	??_pinMode^0,f,c
  4781  001068  0E01               	movlw	1
  4782  00106A  6E06               	movwf	(??_pinMode+1)^0,c
  4783  00106C  2A05               	incf	??_pinMode^0,f,c
  4784  00106E  EF3B  F008         	goto	u1634
  4785  001072                     u1635:
  4786  001072  90D8               	bcf	status,0,c
  4787  001074  3606               	rlcf	(??_pinMode+1)^0,f,c
  4788  001076                     u1634:
  4789  001076  2E05               	decfsz	??_pinMode^0,f,c
  4790  001078  EF39  F008         	goto	u1635
  4791  00107C  5006               	movf	(??_pinMode+1)^0,w,c
  4792  00107E  0AFF               	xorlw	255
  4793  001080  1693               	andwf	147,f,c	;volatile
  4794  001082  EFF5  F008         	goto	l195
  4795  001086                     l2361:
  4796  001086  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4797  001088  EF51  F008         	goto	u1640
  4798  00108C  5002               	movf	(pinMode@pin+1)^0,w,c
  4799  00108E  E107               	bnz	u1641
  4800  001090  0E18               	movlw	24
  4801  001092  5C01               	subwf	pinMode@pin^0,w,c
  4802  001094  B0D8               	btfsc	status,0,c
  4803  001096  EF4F  F008         	goto	u1641
  4804  00109A  EF51  F008         	goto	u1640
  4805  00109E                     u1641:
  4806  00109E  EF7F  F008         	goto	l2369
  4807  0010A2                     u1640:
  4808  0010A2                     
  4809                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4810  0010A2  5003               	movf	pinMode@type^0,w,c
  4811  0010A4  1004               	iorwf	(pinMode@type+1)^0,w,c
  4812  0010A6  B4D8               	btfsc	status,2,c
  4813  0010A8  EF58  F008         	goto	u1651
  4814  0010AC  EF5A  F008         	goto	u1650
  4815  0010B0                     u1651:
  4816  0010B0  EF6C  F008         	goto	l2367
  4817  0010B4                     u1650:
  4818  0010B4  C001  F005         	movff	pinMode@pin,??_pinMode
  4819  0010B8  0EF0               	movlw	-16
  4820  0010BA  2605               	addwf	??_pinMode^0,f,c
  4821  0010BC  0E01               	movlw	1
  4822  0010BE  6E06               	movwf	(??_pinMode+1)^0,c
  4823  0010C0  2A05               	incf	??_pinMode^0,f,c
  4824  0010C2  EF65  F008         	goto	u1664
  4825  0010C6                     u1665:
  4826  0010C6  90D8               	bcf	status,0,c
  4827  0010C8  3606               	rlcf	(??_pinMode+1)^0,f,c
  4828  0010CA                     u1664:
  4829  0010CA  2E05               	decfsz	??_pinMode^0,f,c
  4830  0010CC  EF63  F008         	goto	u1665
  4831  0010D0  5006               	movf	(??_pinMode+1)^0,w,c
  4832  0010D2  1294               	iorwf	148,f,c	;volatile
  4833  0010D4  EFF5  F008         	goto	l195
  4834  0010D8                     l2367:
  4835  0010D8  C001  F005         	movff	pinMode@pin,??_pinMode
  4836  0010DC  0EF0               	movlw	-16
  4837  0010DE  2605               	addwf	??_pinMode^0,f,c
  4838  0010E0  0E01               	movlw	1
  4839  0010E2  6E06               	movwf	(??_pinMode+1)^0,c
  4840  0010E4  2A05               	incf	??_pinMode^0,f,c
  4841  0010E6  EF77  F008         	goto	u1674
  4842  0010EA                     u1675:
  4843  0010EA  90D8               	bcf	status,0,c
  4844  0010EC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4845  0010EE                     u1674:
  4846  0010EE  2E05               	decfsz	??_pinMode^0,f,c
  4847  0010F0  EF75  F008         	goto	u1675
  4848  0010F4  5006               	movf	(??_pinMode+1)^0,w,c
  4849  0010F6  0AFF               	xorlw	255
  4850  0010F8  1694               	andwf	148,f,c	;volatile
  4851  0010FA  EFF5  F008         	goto	l195
  4852  0010FE                     l2369:
  4853  0010FE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4854  001100  EF8D  F008         	goto	u1680
  4855  001104  5002               	movf	(pinMode@pin+1)^0,w,c
  4856  001106  E107               	bnz	u1681
  4857  001108  0E20               	movlw	32
  4858  00110A  5C01               	subwf	pinMode@pin^0,w,c
  4859  00110C  B0D8               	btfsc	status,0,c
  4860  00110E  EF8B  F008         	goto	u1681
  4861  001112  EF8D  F008         	goto	u1680
  4862  001116                     u1681:
  4863  001116  EFBB  F008         	goto	l2377
  4864  00111A                     u1680:
  4865  00111A                     
  4866                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4867  00111A  5003               	movf	pinMode@type^0,w,c
  4868  00111C  1004               	iorwf	(pinMode@type+1)^0,w,c
  4869  00111E  B4D8               	btfsc	status,2,c
  4870  001120  EF94  F008         	goto	u1691
  4871  001124  EF96  F008         	goto	u1690
  4872  001128                     u1691:
  4873  001128  EFA8  F008         	goto	l2375
  4874  00112C                     u1690:
  4875  00112C  C001  F005         	movff	pinMode@pin,??_pinMode
  4876  001130  0EE8               	movlw	-24
  4877  001132  2605               	addwf	??_pinMode^0,f,c
  4878  001134  0E01               	movlw	1
  4879  001136  6E06               	movwf	(??_pinMode+1)^0,c
  4880  001138  2A05               	incf	??_pinMode^0,f,c
  4881  00113A  EFA1  F008         	goto	u1704
  4882  00113E                     u1705:
  4883  00113E  90D8               	bcf	status,0,c
  4884  001140  3606               	rlcf	(??_pinMode+1)^0,f,c
  4885  001142                     u1704:
  4886  001142  2E05               	decfsz	??_pinMode^0,f,c
  4887  001144  EF9F  F008         	goto	u1705
  4888  001148  5006               	movf	(??_pinMode+1)^0,w,c
  4889  00114A  1295               	iorwf	149,f,c	;volatile
  4890  00114C  EFF5  F008         	goto	l195
  4891  001150                     l2375:
  4892  001150  C001  F005         	movff	pinMode@pin,??_pinMode
  4893  001154  0EE8               	movlw	-24
  4894  001156  2605               	addwf	??_pinMode^0,f,c
  4895  001158  0E01               	movlw	1
  4896  00115A  6E06               	movwf	(??_pinMode+1)^0,c
  4897  00115C  2A05               	incf	??_pinMode^0,f,c
  4898  00115E  EFB3  F008         	goto	u1714
  4899  001162                     u1715:
  4900  001162  90D8               	bcf	status,0,c
  4901  001164  3606               	rlcf	(??_pinMode+1)^0,f,c
  4902  001166                     u1714:
  4903  001166  2E05               	decfsz	??_pinMode^0,f,c
  4904  001168  EFB1  F008         	goto	u1715
  4905  00116C  5006               	movf	(??_pinMode+1)^0,w,c
  4906  00116E  0AFF               	xorlw	255
  4907  001170  1695               	andwf	149,f,c	;volatile
  4908  001172  EFF5  F008         	goto	l195
  4909  001176                     l2377:
  4910  001176  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4911  001178  EFC9  F008         	goto	u1720
  4912  00117C  5002               	movf	(pinMode@pin+1)^0,w,c
  4913  00117E  E107               	bnz	u1721
  4914  001180  0E28               	movlw	40
  4915  001182  5C01               	subwf	pinMode@pin^0,w,c
  4916  001184  B0D8               	btfsc	status,0,c
  4917  001186  EFC7  F008         	goto	u1721
  4918  00118A  EFC9  F008         	goto	u1720
  4919  00118E                     u1721:
  4920  00118E  EFF5  F008         	goto	l195
  4921  001192                     u1720:
  4922  001192                     
  4923                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  4924  001192  5003               	movf	pinMode@type^0,w,c
  4925  001194  1004               	iorwf	(pinMode@type+1)^0,w,c
  4926  001196  B4D8               	btfsc	status,2,c
  4927  001198  EFD0  F008         	goto	u1731
  4928  00119C  EFD2  F008         	goto	u1730
  4929  0011A0                     u1731:
  4930  0011A0  EFE4  F008         	goto	l2383
  4931  0011A4                     u1730:
  4932  0011A4  C001  F005         	movff	pinMode@pin,??_pinMode
  4933  0011A8  0EE0               	movlw	-32
  4934  0011AA  2605               	addwf	??_pinMode^0,f,c
  4935  0011AC  0E01               	movlw	1
  4936  0011AE  6E06               	movwf	(??_pinMode+1)^0,c
  4937  0011B0  2A05               	incf	??_pinMode^0,f,c
  4938  0011B2  EFDD  F008         	goto	u1744
  4939  0011B6                     u1745:
  4940  0011B6  90D8               	bcf	status,0,c
  4941  0011B8  3606               	rlcf	(??_pinMode+1)^0,f,c
  4942  0011BA                     u1744:
  4943  0011BA  2E05               	decfsz	??_pinMode^0,f,c
  4944  0011BC  EFDB  F008         	goto	u1745
  4945  0011C0  5006               	movf	(??_pinMode+1)^0,w,c
  4946  0011C2  1296               	iorwf	150,f,c	;volatile
  4947  0011C4  EFF5  F008         	goto	l195
  4948  0011C8                     l2383:
  4949  0011C8  C001  F005         	movff	pinMode@pin,??_pinMode
  4950  0011CC  0EE0               	movlw	-32
  4951  0011CE  2605               	addwf	??_pinMode^0,f,c
  4952  0011D0  0E01               	movlw	1
  4953  0011D2  6E06               	movwf	(??_pinMode+1)^0,c
  4954  0011D4  2A05               	incf	??_pinMode^0,f,c
  4955  0011D6  EFEF  F008         	goto	u1754
  4956  0011DA                     u1755:
  4957  0011DA  90D8               	bcf	status,0,c
  4958  0011DC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4959  0011DE                     u1754:
  4960  0011DE  2E05               	decfsz	??_pinMode^0,f,c
  4961  0011E0  EFED  F008         	goto	u1755
  4962  0011E4  5006               	movf	(??_pinMode+1)^0,w,c
  4963  0011E6  0AFF               	xorlw	255
  4964  0011E8  1696               	andwf	150,f,c	;volatile
  4965  0011EA                     l195:
  4966  0011EA  0012               	return		;funcret
  4967  0011EC                     __end_of_pinMode:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function ___llmod *****************
  4971 ;; Defined at:
  4972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  dividend        4   13[COMRAM] unsigned long 
  4975 ;;  divisor         4   17[COMRAM] unsigned long 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  counter         1   21[COMRAM] unsigned char 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  4   13[COMRAM] unsigned long 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4987 ;;      Params:         8       0       0       0       0       0       0
  4988 ;;      Locals:         1       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0
  4990 ;;      Totals:         9       0       0       0       0       0       0
  4991 ;;Total ram usage:        9 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text32
  5001  00190C                     __ptext32:
  5002                           	callstack 0
  5003  00190C                     ___llmod:
  5004                           	callstack 30
  5005  00190C  5012               	movf	___llmod@divisor^0,w,c
  5006  00190E  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5007  001910  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5008  001912  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5009  001914  B4D8               	btfsc	status,2,c
  5010  001916  EF8F  F00C         	goto	u2271
  5011  00191A  EF91  F00C         	goto	u2270
  5012  00191E                     u2271:
  5013  00191E  EFC1  F00C         	goto	l974
  5014  001922                     u2270:
  5015  001922  0E01               	movlw	1
  5016  001924  6E16               	movwf	___llmod@counter^0,c
  5017  001926  EF9B  F00C         	goto	l2787
  5018  00192A                     l2785:
  5019  00192A  90D8               	bcf	status,0,c
  5020  00192C  3612               	rlcf	___llmod@divisor^0,f,c
  5021  00192E  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5022  001930  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5023  001932  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5024  001934  2A16               	incf	___llmod@counter^0,f,c
  5025  001936                     l2787:
  5026  001936  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5027  001938  EFA0  F00C         	goto	u2281
  5028  00193C  EFA2  F00C         	goto	u2280
  5029  001940                     u2281:
  5030  001940  EF95  F00C         	goto	l2785
  5031  001944                     u2280:
  5032  001944                     l2789:
  5033  001944  5012               	movf	___llmod@divisor^0,w,c
  5034  001946  5C0E               	subwf	___llmod@dividend^0,w,c
  5035  001948  5013               	movf	(___llmod@divisor+1)^0,w,c
  5036  00194A  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5037  00194C  5014               	movf	(___llmod@divisor+2)^0,w,c
  5038  00194E  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5039  001950  5015               	movf	(___llmod@divisor+3)^0,w,c
  5040  001952  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5041  001954  A0D8               	btfss	status,0,c
  5042  001956  EFAF  F00C         	goto	u2291
  5043  00195A  EFB1  F00C         	goto	u2290
  5044  00195E                     u2291:
  5045  00195E  EFB9  F00C         	goto	l2793
  5046  001962                     u2290:
  5047  001962  5012               	movf	___llmod@divisor^0,w,c
  5048  001964  5E0E               	subwf	___llmod@dividend^0,f,c
  5049  001966  5013               	movf	(___llmod@divisor+1)^0,w,c
  5050  001968  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5051  00196A  5014               	movf	(___llmod@divisor+2)^0,w,c
  5052  00196C  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5053  00196E  5015               	movf	(___llmod@divisor+3)^0,w,c
  5054  001970  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5055  001972                     l2793:
  5056  001972  90D8               	bcf	status,0,c
  5057  001974  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5058  001976  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5059  001978  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5060  00197A  3212               	rrcf	___llmod@divisor^0,f,c
  5061  00197C  2E16               	decfsz	___llmod@counter^0,f,c
  5062  00197E  EFA2  F00C         	goto	l2789
  5063  001982                     l974:
  5064  001982  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5065  001986  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5066  00198A  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5067  00198E  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5068  001992  0012               	return		;funcret
  5069  001994                     __end_of___llmod:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function ___lldiv *****************
  5073 ;; Defined at:
  5074 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  dividend        4    0[COMRAM] unsigned long 
  5077 ;;  divisor         4    4[COMRAM] unsigned long 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  quotient        4    8[COMRAM] unsigned long 
  5080 ;;  counter         1   12[COMRAM] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  4    0[COMRAM] unsigned long 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5090 ;;      Params:         8       0       0       0       0       0       0
  5091 ;;      Locals:         5       0       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0
  5093 ;;      Totals:        13       0       0       0       0       0       0
  5094 ;;Total ram usage:       13 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text33
  5104  001868                     __ptext33:
  5105                           	callstack 0
  5106  001868                     ___lldiv:
  5107                           	callstack 30
  5108  001868  0E00               	movlw	0
  5109  00186A  6E09               	movwf	___lldiv@quotient^0,c
  5110  00186C  0E00               	movlw	0
  5111  00186E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5112  001870  0E00               	movlw	0
  5113  001872  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5114  001874  0E00               	movlw	0
  5115  001876  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5116  001878  5005               	movf	___lldiv@divisor^0,w,c
  5117  00187A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5118  00187C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5119  00187E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5120  001880  B4D8               	btfsc	status,2,c
  5121  001882  EF45  F00C         	goto	u2241
  5122  001886  EF47  F00C         	goto	u2240
  5123  00188A                     u2241:
  5124  00188A  EF7D  F00C         	goto	l581
  5125  00188E                     u2240:
  5126  00188E  0E01               	movlw	1
  5127  001890  6E0D               	movwf	___lldiv@counter^0,c
  5128  001892  EF51  F00C         	goto	l2767
  5129  001896                     l2765:
  5130  001896  90D8               	bcf	status,0,c
  5131  001898  3605               	rlcf	___lldiv@divisor^0,f,c
  5132  00189A  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5133  00189C  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5134  00189E  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5135  0018A0  2A0D               	incf	___lldiv@counter^0,f,c
  5136  0018A2                     l2767:
  5137  0018A2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5138  0018A4  EF56  F00C         	goto	u2251
  5139  0018A8  EF58  F00C         	goto	u2250
  5140  0018AC                     u2251:
  5141  0018AC  EF4B  F00C         	goto	l2765
  5142  0018B0                     u2250:
  5143  0018B0                     l2769:
  5144  0018B0  90D8               	bcf	status,0,c
  5145  0018B2  3609               	rlcf	___lldiv@quotient^0,f,c
  5146  0018B4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5147  0018B6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5148  0018B8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5149  0018BA  5005               	movf	___lldiv@divisor^0,w,c
  5150  0018BC  5C01               	subwf	___lldiv@dividend^0,w,c
  5151  0018BE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5152  0018C0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5153  0018C2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5154  0018C4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5155  0018C6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5156  0018C8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5157  0018CA  A0D8               	btfss	status,0,c
  5158  0018CC  EF6A  F00C         	goto	u2261
  5159  0018D0  EF6C  F00C         	goto	u2260
  5160  0018D4                     u2261:
  5161  0018D4  EF75  F00C         	goto	l2777
  5162  0018D8                     u2260:
  5163  0018D8  5005               	movf	___lldiv@divisor^0,w,c
  5164  0018DA  5E01               	subwf	___lldiv@dividend^0,f,c
  5165  0018DC  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5166  0018DE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5167  0018E0  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5168  0018E2  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5169  0018E4  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5170  0018E6  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5171  0018E8  8009               	bsf	___lldiv@quotient^0,0,c
  5172  0018EA                     l2777:
  5173  0018EA  90D8               	bcf	status,0,c
  5174  0018EC  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5175  0018EE  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5176  0018F0  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5177  0018F2  3205               	rrcf	___lldiv@divisor^0,f,c
  5178  0018F4  2E0D               	decfsz	___lldiv@counter^0,f,c
  5179  0018F6  EF58  F00C         	goto	l2769
  5180  0018FA                     l581:
  5181  0018FA  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5182  0018FE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5183  001902  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5184  001906  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5185  00190A  0012               	return		;funcret
  5186  00190C                     __end_of___lldiv:
  5187                           	callstack 0
  5188                           
  5189                           	psect	rparam
  5190  0000                     
  5191                           	psect	idloc
  5192                           
  5193                           ;Config register IDLOC0 @ 0x200000
  5194                           ;	unspecified, using default values
  5195  200000                     	org	2097152
  5196  200000  FF                 	db	255
  5197                           
  5198                           ;Config register IDLOC1 @ 0x200001
  5199                           ;	unspecified, using default values
  5200  200001                     	org	2097153
  5201  200001  FF                 	db	255
  5202                           
  5203                           ;Config register IDLOC2 @ 0x200002
  5204                           ;	unspecified, using default values
  5205  200002                     	org	2097154
  5206  200002  FF                 	db	255
  5207                           
  5208                           ;Config register IDLOC3 @ 0x200003
  5209                           ;	unspecified, using default values
  5210  200003                     	org	2097155
  5211  200003  FF                 	db	255
  5212                           
  5213                           ;Config register IDLOC4 @ 0x200004
  5214                           ;	unspecified, using default values
  5215  200004                     	org	2097156
  5216  200004  FF                 	db	255
  5217                           
  5218                           ;Config register IDLOC5 @ 0x200005
  5219                           ;	unspecified, using default values
  5220  200005                     	org	2097157
  5221  200005  FF                 	db	255
  5222                           
  5223                           ;Config register IDLOC6 @ 0x200006
  5224                           ;	unspecified, using default values
  5225  200006                     	org	2097158
  5226  200006  FF                 	db	255
  5227                           
  5228                           ;Config register IDLOC7 @ 0x200007
  5229                           ;	unspecified, using default values
  5230  200007                     	org	2097159
  5231  200007  FF                 	db	255
  5232                           
  5233                           	psect	config
  5234                           
  5235                           ; Padding undefined space
  5236  300000                     	org	3145728
  5237  300000  FF                 	db	255
  5238                           
  5239                           ;Config register CONFIG1H @ 0x300001
  5240                           ;	Oscillator Selection bits
  5241                           ;	OSC = HS, HS oscillator
  5242                           ;	Fail-Safe Clock Monitor Enable bit
  5243                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5244                           ;	Internal/External Oscillator Switchover bit
  5245                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5246  300001                     	org	3145729
  5247  300001  02                 	db	2
  5248                           
  5249                           ;Config register CONFIG2L @ 0x300002
  5250                           ;	Power-up Timer Enable bit
  5251                           ;	PWRT = OFF, PWRT disabled
  5252                           ;	Brown-out Reset Enable bits
  5253                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5254                           ;	Brown Out Reset Voltage bits
  5255                           ;	BORV = 0x2E, user specified literal
  5256  300002                     	org	3145730
  5257  300002  71                 	db	369
  5258                           
  5259                           ;Config register CONFIG2H @ 0x300003
  5260                           ;	Watchdog Timer Enable bit
  5261                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5262                           ;	Watchdog Timer Postscale Select bits
  5263                           ;	WDTPS = 1, 1:1
  5264  300003                     	org	3145731
  5265  300003  00                 	db	0
  5266                           
  5267                           ; Padding undefined space
  5268  300004                     	org	3145732
  5269  300004  FF                 	db	255
  5270                           
  5271                           ;Config register CONFIG3H @ 0x300005
  5272                           ;	CCP2 MUX bit
  5273                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5274                           ;	PORTB A/D Enable bit
  5275                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5276                           ;	Low-Power Timer1 Oscillator Enable bit
  5277                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5278                           ;	MCLR Pin Enable bit
  5279                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5280  300005                     	org	3145733
  5281  300005  83                 	db	131
  5282                           
  5283                           ;Config register CONFIG4L @ 0x300006
  5284                           ;	Stack Full/Underflow Reset Enable bit
  5285                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5286                           ;	Single-Supply ICSP Enable bit
  5287                           ;	LVP = OFF, Single-Supply ICSP disabled
  5288                           ;	Extended Instruction Set Enable bit
  5289                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5290                           ;	Background Debugger Enable bit
  5291                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5292  300006                     	org	3145734
  5293  300006  80                 	db	128
  5294                           
  5295                           ; Padding undefined space
  5296  300007                     	org	3145735
  5297  300007  FF                 	db	255
  5298                           
  5299                           ;Config register CONFIG5L @ 0x300008
  5300                           ;	Code Protection bit
  5301                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5302                           ;	Code Protection bit
  5303                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5304                           ;	Code Protection bit
  5305                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5306                           ;	Code Protection bit
  5307                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5308  300008                     	org	3145736
  5309  300008  0F                 	db	15
  5310                           
  5311                           ;Config register CONFIG5H @ 0x300009
  5312                           ;	Boot Block Code Protection bit
  5313                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5314                           ;	Data EEPROM Code Protection bit
  5315                           ;	CPD = OFF, Data EEPROM not code-protected
  5316  300009                     	org	3145737
  5317  300009  C0                 	db	192
  5318                           
  5319                           ;Config register CONFIG6L @ 0x30000A
  5320                           ;	Write Protection bit
  5321                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5322                           ;	Write Protection bit
  5323                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5324                           ;	Write Protection bit
  5325                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5326                           ;	Write Protection bit
  5327                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5328  30000A                     	org	3145738
  5329  30000A  0F                 	db	15
  5330                           
  5331                           ;Config register CONFIG6H @ 0x30000B
  5332                           ;	Configuration Register Write Protection bit
  5333                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5334                           ;	Boot Block Write Protection bit
  5335                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5336                           ;	Data EEPROM Write Protection bit
  5337                           ;	WRTD = OFF, Data EEPROM not write-protected
  5338  30000B                     	org	3145739
  5339  30000B  E0                 	db	224
  5340                           
  5341                           ;Config register CONFIG7L @ 0x30000C
  5342                           ;	Table Read Protection bit
  5343                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5344                           ;	Table Read Protection bit
  5345                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5346                           ;	Table Read Protection bit
  5347                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5348                           ;	Table Read Protection bit
  5349                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5350  30000C                     	org	3145740
  5351  30000C  0F                 	db	15
  5352                           
  5353                           ;Config register CONFIG7H @ 0x30000D
  5354                           ;	Boot Block Table Read Protection bit
  5355                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5356  30000D                     	org	3145741
  5357  30000D  40                 	db	64
  5358                           tosu	equ	0xFFF
  5359                           tosh	equ	0xFFE
  5360                           tosl	equ	0xFFD
  5361                           stkptr	equ	0xFFC
  5362                           pclatu	equ	0xFFB
  5363                           pclath	equ	0xFFA
  5364                           pcl	equ	0xFF9
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           prodh	equ	0xFF4
  5370                           prodl	equ	0xFF3
  5371                           indf0	equ	0xFEF
  5372                           postinc0	equ	0xFEE
  5373                           postdec0	equ	0xFED
  5374                           preinc0	equ	0xFEC
  5375                           plusw0	equ	0xFEB
  5376                           fsr0h	equ	0xFEA
  5377                           fsr0l	equ	0xFE9
  5378                           wreg	equ	0xFE8
  5379                           indf1	equ	0xFE7
  5380                           postinc1	equ	0xFE6
  5381                           postdec1	equ	0xFE5
  5382                           preinc1	equ	0xFE4
  5383                           plusw1	equ	0xFE3
  5384                           fsr1h	equ	0xFE2
  5385                           fsr1l	equ	0xFE1
  5386                           bsr	equ	0xFE0
  5387                           indf2	equ	0xFDF
  5388                           postinc2	equ	0xFDE
  5389                           postdec2	equ	0xFDD
  5390                           preinc2	equ	0xFDC
  5391                           plusw2	equ	0xFDB
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     55      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___llmod
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _rgbColor->_digitalWrite
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _lcdChar->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0  196425
                                             22 COMRAM    33    33      0
                            ___lldiv
                            ___llmod
                            _adcInit
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                            _lcdInit
                        _lcdPosition
                            _pwmInit
                             _pwmSet
                           _rgbColor
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   22593
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _rgbColor                                             2     0      2    5754
                                              6 COMRAM     2     0      2
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     868
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   30197
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   66428
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   28781
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   29045
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdChar                                              1     1      0   29075
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   28673
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    5840
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    7872
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   17769
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   17133
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    5460
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    5460
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     524
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    3936
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3936
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8    1223
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8    1226
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   _adcInit
     _pinMode
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _rgbColor
     _digitalWrite
   _ssdDigit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     37      44       1       53.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      15        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 21:47:05 2021

         _pulseEnablePin 1C12                       l15 1C10                       _v0 0041  
                     _v1 0040                       _v2 003F                       _v3 003E  
    ___wmul@multiplicand 0003                      l212 1E68                      l302 1A72  
                    l232 15DE                      l161 0F9C                      l305 1DCC  
                    l321 1866                      l170 14BC                      l234 15F6  
                    l260 1DF2                      l308 1E48                      l165 14C0  
                    l237 1CFC                      l413 1B24                      l166 14BC  
                    l254 1D2C                      l263 1ACC                      l271 1CCA  
                    l423 1356                      l248 1E72                      l257 1C52  
                    l274 1E2E                      l266 1E10                      l426 1B7A  
                    l530 06AE                      l195 11EA                      l381 1D80  
                    l375 1C90                      l536 0CD6                      l289 17B6  
                    l633 1702                      l449 1E70                      l378 1D56  
                    l386 1BC8                      l554 1DA6                      l581 18FA  
                    l588 190A                      l981 1992                      l974 1982  
                    _PR2 000FCB                      wreg 000FE8                     l1052 1A06  
                   l1045 19FE                     l3001 0A6E                     l3011 0AA6  
                   l3003 0A7A                     l2301 0EB0                     l3101 0C0C  
                   l3021 0AD2                     l3013 0AAE                     l3005 0A88  
                   l2311 0F44                     l2303 0ECC                     l3111 0C38  
                   l3103 0C12                     l3031 0B08                     l3023 0ADA  
                   l3007 0A8E                     l3015 0AB2                     l2313 0F5E  
                   l2305 0EE6                     l2321 1B7C                     l2401 161E  
                   l3121 0C56                     l3113 0C3E                     l3105 0C26  
                   l3041 0B26                     l3033 0B0E                     l3025 0AEA  
                   l3017 0AC0                     l3009 0A96                     l2315 0F7E  
                   l2307 0F06                     l2331 1BAC                     l2323 1B90  
                   l2411 1666                     l2403 162C                     l3131 0C74  
                   l3123 0C5C                     l3115 0C44                     l3107 0C2C  
                   l3051 0B44                     l3043 0B2C                     l3035 0B14  
                   l3027 0AEE                     l3019 0ACC                     l2309 0F28  
                   l2317 1D2E                     l2333 1BB2                     l2341 1C26  
                   l2421 16B0                     l2413 166E                     l2405 163C  
                   l2501 1994                     l3141 0CB6                     l3133 0C7A  
                   l3125 0C62                     l3117 0C4A                     l3109 0C32  
                   l3061 0B62                     l3053 0B4A                     l3045 0B32  
                   l3037 0B1A                     l3029 0B02                     l2351 0FEC  
                   l2319 1D58                     l2335 1BB4                     l2343 1C32  
                   l2431 16E2                     l2423 16C0                     l2415 167A  
                   l2407 1640                     l2511 19CC                     l2503 199C  
                   l3143 0CC6                     l3135 0C80                     l3127 0C68  
                   l3119 0C50                     l3071 0B8E                     l3063 0B76  
                   l3055 0B50                     l3047 0B38                     l3039 0B20  
                   l2361 1086                     l2353 100E                     l2345 0F9E  
                   l2441 1358                     l2281 0D7E                     l2337 1BC4  
                   l2329 1B94                     l2601 1E60                     l2433 16F2  
                   l2425 16C2                     l2417 1688                     l2409 1650  
                   l2521 19F8                     l2513 19D2                     l2505 19AE  
                   l3145 0CDE                     l3129 0C6E                     l3081 0BB4  
                   l3137 0C8E                     l3073 0B94                     l3065 0B7C  
                   l3057 0B56                     l3049 0B3E                     l2371 111A  
                   l2363 10A2                     l2355 102A                     l2347 0FBA  
                   l2523 1BCA                     l2451 13B8                     l2443 1374  
                   l2291 0E16                     l2283 0D9E                     l2611 153E  
                   l2603 14C2                     l2339 1C12                     l2427 16CC  
                   l2419 1692                     l2515 19E8                     l2507 19B6  
                   l3147 0D06                     l3139 0C9C                     l3091 0BEE  
                   l3083 0BCA                     l3075 0B9A                     l3067 0B82  
                   l3059 0B5C                     l3163 0D12                     l2381 11A4  
                   l2373 112C                     l2365 10B4                     l2357 103C  
                   l2349 0FCC                     l2525 1C06                     l2293 0E38  
                   l2285 0DC0                     l2277 0D50                     l2613 1564  
                   l2621 15B4                     l2605 14D2                     l2429 16D2  
                   l2517 19F0                     l2509 19BE                     l2701 1AD0  
                   l3149 0D06                     l3093 0BF4                     l3085 0BCE  
                   l3077 0BA0                     l3069 0B88                     l2383 11C8  
                   l2375 1150                     l2367 10D8                     l2359 1060  
                   l2527 1C08                     l2295 0E54                     l2287 0DDC  
                   l2279 0D6C                     l2623 15CC                     l2615 1582  
                   l2631 1CCC                     l2391 1A76                     l2519 19F2  
                   l2711 1B0A                     l2703 1AE0                     l3159 0D0A  
                   l3095 0BFA                     l3087 0BE2                     l3079 0BA6  
                   l2377 1176                     l2369 10FE                     l2529 1C0C  
                   l2473 1474                     l2465 142C                     l2457 13E4  
                   l2449 139C                     l2297 0E6E                     l2289 0DF6  
                   l2625 15D2                     l2617 15AC                     l2609 14F2  
                   l2633 1CF8                     l2385 1CFE                     l2641 1CC0  
                   l2393 15F8                     l2713 1B0E                     l2705 1AE4  
                   l2721 1264                     l3177 0D26                     l3097 0C00  
                   l3089 0BE8                     l2379 1192                     l2475 1490  
                   l2467 1448                     l2459 1400                     l2299 0E8E  
                   l2627 15D6                     l2643 1E14                     l2387 1D0A  
                   l2491 1DF6                     l2651 1770                     l2635 1C92  
                   l2395 15FC                     l2715 1B20                     l2707 1AF4  
                   l3179 1330                     l2731 12B4                     l2723 1278  
                   l3099 0C06                     l2629 15EE                     l2645 1E22  
                   l2389 1D0E                     l2661 17B0                     l2653 178A  
                   l2637 1CA4                     l2397 160A                     l2493 1DA8  
                   l2709 1AF8                     l2741 1314                     l2733 12CC  
                   l2725 1280                     l2717 11EC                     l2487 1C54  
                   l2655 1798                     l2647 1704                     l2639 1CAE  
                   l2399 161A                     l2495 1D82                     l2671 1A64  
                   l2663 1A0A                     l2735 12E0                     l2727 1298  
                   l2719 124C                     l2911 066C                     l2761 1878  
                   l2489 1DD0                     l2657 17A4                     l2649 1764  
                   l2681 1E3C                     l2673 1E30                     l2497 1D9E  
                   l2665 1A28                     l2753 1B26                     l2737 12E8  
                   l2729 12AC                     l2921 0684                     l2913 0670  
                   l2905 061C                     l2771 18BA                     l2763 188E  
                   l2659 17AA                     l2675 1E32                     l2667 1A44  
                   l2691 1800                     l2683 17B8                     l2739 1300  
                   l2747 131C                     l2755 1E6A                     l2931 06D4  
                   l2915 0674                     l2907 0664                     l2773 18D8  
                   l2765 1896                     l2781 190C                     l2677 1E36  
                   l2669 1A4C                     l2693 1818                     l2685 17C6  
                   l2757 1E6E                     l2941 0984                     l2933 0948  
                   l2917 0678                     l2909 0668                     l2775 18E8  
                   l2767 18A2                     l2759 1868                     l2791 1962  
                   l2783 1922                     l2679 1E38                     l2695 182C  
                   l2687 17DE                     l2951 09A2                     l2943 098A  
                   l2935 095E                     l2927 0694                     l2919 067C  
                   l2777 18EA                     l2769 18B0                     l2793 1972  
                   l2785 192A                     l2697 183A                     l2689 17F2  
                   l2961 09CE                     l2953 09A8                     l2945 0990  
                   l2937 096A                     l2929 06A4                     l2779 18F4  
                   l2795 197C                     l2787 1936                     l2699 1852  
                   l2971 09EC                     l2963 09D4                     l2955 09AE  
                   l2947 0996                     l2939 097E                     l2789 1944  
                   l2981 0A0A                     l2973 09F2                     l2965 09DA  
                   l2957 09C2                     l2949 099C                     l2991 0A34  
                   l2983 0A10                     l2975 09F8                     l2967 09E0  
                   l2959 09C8                     l2993 0A3A                     l2985 0A16  
                   l2977 09FE                     l2969 09E6                     l2995 0A46  
                   l2987 0A1C                     l2979 0A04                     l2997 0A4A  
                   l2989 0A22                     l2999 0A52                     u2110 1582  
                   u2111 157E                     u1400 0DF6                     u2104 1556  
                   u2200 1AE0                     u1401 0DF2                     u2105 1550  
                   u2201 1ADC                     u2130 15CC                     u2210 1AF4  
                   u2131 15C8                     u2211 1AF0                     u2140 15EE  
                   u2124 159E                     u2220 1B0A                     u2141 15EA  
                   u2125 1598                     u2221 1B06                     u1510 0F44  
                   u1430 0E54                     u1414 0E08                     u1350 0D6C  
                   u2070 14EE                     u2150 1CA4                     u2230 1B20  
                   u1511 0F40                     u1431 0E50                     u1415 0E04  
                   u1351 0D68                     u2071 14EA                     u2151 1CA0  
                   u2231 1B1C                     u2240 188E                     u1600 102A  
                   u1520 0F5E                     u1504 0F18                     u1440 0E6E  
                   u1424 0E28                     u1360 0D7E                     u2160 1CC0  
                   u2241 188A                     u1601 1026                     u1521 0F5A  
                   u1505 0F14                     u1441 0E6A                     u1425 0E24  
                   u1361 0D7A                     u2161 1CBC                     u2250 18B0  
                   u1610 103C                     u2090 153E                     u2170 17C6  
                   u2251 18AC                     u1611 1038                     u2091 153A  
                   u2171 17C2                     u2260 18D8                     u2084 150E  
                   u2180 1800                     u2500 0A88                     u2261 18D4  
                   u2085 1508                     u2181 17FC                     u2501 0A84  
                   u2270 1922                     u1534 0F70                     u1470 0ECC  
                   u1454 0E80                     u1390 0DDC                     u1374 0D90  
                   u1550 1BC4                     u2190 183A                     u2510 0AA6  
                   u2271 191E                     u1535 0F6C                     u1471 0EC8  
                   u1455 0E7C                     u1391 0DD8                     u1375 0D8C  
                   u1551 1BC0                     u2191 1836                     u2511 0AA2  
                   u2280 1944                     u1720 1192                     u1704 1142  
                   u1640 10A2                     u1624 1052                     u1560 0FBA  
                   u1544 0F90                     u1480 0EE6                     u1464 0EA0  
                   u1384 0DB0                     u1800 1688                     u2520 0AC0  
                   u2281 1940                     u1721 118E                     u1705 113E  
                   u1641 109E                     u1625 104E                     u1561 0FB6  
                   u1545 0F8C                     u1481 0EE2                     u1465 0E9C  
                   u1385 0DAC                     u1801 1684                     u2521 0ABC  
                   u2290 1962                     u1730 11A4                     u1714 1166  
                   u1650 10B4                     u1634 1076                     u1570 0FCC  
                   u1810 16B0                     u2530 0BB4                     u2450 06A4  
                   u2291 195E                     u1731 11A0                     u1715 1162  
                   u1651 10B0                     u1635 1072                     u1571 0FC8  
                   u1811 16AC                     u2531 0BB0                     u2451 06A0  
                   u1820 16E2                     u2540 0BCA                     u2460 06D4  
                   u1821 16DE                     u2541 0BC6                     u2461 06D0  
                   u1910 1448                     u1494 0EF8                     u2550 0C9C  
                   u2470 095E                     u1911 1444                     u1495 0EF4  
                   u2551 0C98                     u2471 095A                     u1744 11BA  
                   u1680 111A                     u1664 10CA                     u1584 0FDE  
                   u1904 1416                     u1760 1D2C                     u2560 0CB6  
                   u2480 0A34                     u1745 11B6                     u1681 1116  
                   u1665 10C6                     u1585 0FDA                     u1905 1412  
                   u1761 1D28                     u2561 0CB2                     u2481 0A30  
                   u1754 11DE                     u1690 112C                     u1674 10EE  
                   u1594 0FFE                     u1930 1490                     u1850 1374  
                   u1770 160A                     u2490 0A6E                     u1755 11DA  
                   u1691 1128                     u1675 10EA                     u1595 0FFA  
                   u1931 148C                     u1851 1370                     u1771 1606  
                   u2491 0A6A                     u1924 145E                     u1780 162C  
                   u1925 145A                     u1781 1628                     u1870 13B8  
                   u1790 1666                     u1871 13B4                     u1791 1662  
                   u1944 14A6                     u1864 1386                     u1945 14A2  
                   u1865 1382                     u1890 1400                     u1970 19AE  
                   u1891 13FC                     u1971 19AA                     u1884 13CE  
                   u1980 19CC                     u1885 13CA                     u1981 19C8  
                   u1990 19E8                     u1991 19E4                     _PIR1 000F9E  
                   _main 061C                     _keys 003C         ??_PulseClockData 0007  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 1C54  
         pwmSet@porcento 000A          __end_of___aldiv 1704                    ?_main 0001  
        __end_of_adcInit 1C12          __end_of___lldiv 190C                    _T0CON 000FD5  
        __end_of___llmod 1994                    _T2CON 000FCA          __end_of___lwdiv 1A08  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_lcdChar 1E30          __end_of_lcdInit 17B8          __end_of_pinMode 11EC  
                  _valor 0601                    main@i 002C          __end_of_soWrite 1BCA  
                  tablat 000FF5          __end_of_ssdInit 1B7C          __end_of_pwmInit 1E4A  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 0F9E  
        __initialization 1E4A          ?_pulseEnablePin 0001             __end_of_main 0D50  
                 ??_main 0017            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 000E                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB              rgbColor@led 0007                   _INTCON 000FF2  
                 _SPBRGH 000FB0     __size_of_lcdPosition 003A                ??___aldiv 0009  
                 ___wmul 1D82                ??_adcInit 0007                ??___lldiv 0009  
              ??___llmod 0016                ??___lwdiv 0005                   _kpInit 1CCC  
                 _kpRead 1E60         __end_of_rgbColor 1868                   clear_0 1E50  
                 _soInit 1C54                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   _pwmSet 1A08                   main@op 0027  
       __end_of_ssdDigit 1B26                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007                ??_pwmInit 0011  
       __end_of_pushByte 1ACE               __accesstop 0080  __end_of__initialization 1E56  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0611       __size_of_delayMili 0030  
  __size_of_digitalWrite 024E               _delayMicro 1E72               _lcdCommand 1DF4  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP2CON 000FBA                  _BAUDCON 000FB8                  ?_soInit 0001  
             _kpDebounce 14C2                  ?_pwmSet 0001       __size_of_timerInit 0008  
     __size_of_ssdUpdate 016C             _digitalWrite 0D50        __end_of_delayMili 1D2E  
              ?_rgbColor 0007         ??_pulseEnablePin 0007                  __Hparam 0000  
                __Lparam 0000                ?_ssdDigit 0001          kpDebounce@tempo 0043  
                ___aldiv 15F8                  _adcInit 1BCA                ?_pushByte 000A  
                ___lldiv 1868          __size_of___wmul 0026                  ___llmod 190C  
                ___lwdiv 1994             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611              ssdDigit@val 0002  
            ssdDigit@pos 0001                  __pcinit 1E4A                  _lcdChar 1E12  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 1704  
                __ptext0 061C                  __ptext1 1E6A                  __ptext2 11EC  
                __ptext3 1B26                  __ptext4 1ACE                  __ptext5 17B8  
                __ptext6 1A08                  __ptext7 1D82                  __ptext8 1994  
                __ptext9 1E30          __size_of_pwmSet 006C                  _display 0042  
                _pinMode 0F9E         ___aldiv@dividend 0001               delayMili@a 0001  
             delayMili@i 0004                  _soWrite 1B7C                  _ssdInit 1B26  
                _pwmInit 1E30                  _started 0044                  main@win 0025  
   end_of_initialization 1E56            ?_PulseEnClock 0001               ??_rgbColor 0009  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_timerInit 1E72          ___lldiv@divisor 0005  
      __end_of_ssdUpdate 1358          ___lldiv@counter 000D               ??_ssdDigit 0002  
       ___aldiv@quotient 000B              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               _pushNibble 1DCE            ??_lcdPosition 0013  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011               main@stoped 0031  
         __end_of___wmul 1DA8           __end_of_kpInit 1CFE           __end_of_kpRead 1E6A  
         __end_of_soInit 1C92           __end_of_pwmSet 1A74      __size_of_delayMicro 0002  
    start_initialization 1E4A      __end_of_digitalRead 14C2      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136          ___llmod@divisor 0012          ___llmod@counter 0016  
    __end_of_lcdPosition 1CCC        kpDebounce@oldRead 0038        kpDebounce@newRead 003A  
               ??___wmul 0005                 ??_kpInit 0007                 ??_kpRead 0003  
               ??_soInit 0007                 ??_pwmSet 0008              __pbssCOMRAM 0038  
            ?_pushNibble 000A               pinMode@pin 0001        __size_of_rgbColor 00B0  
              _delayMili 1CFE                _main$1350 001D                _main$1351 0021  
       ___lwdiv@dividend 0001                 ?___aldiv 0001                 ?_adcInit 0001  
               ?___lldiv 0001        __size_of_ssdDigit 0058                 ?___llmod 000E  
         _PulseClockData 1D58                 ?___lwdiv 0001     __end_of_PulseEnClock 1D58  
            _digitalRead 1358                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001     __end_of_pwmFrequency 1DCE              __smallconst 0600  
               ?_pinMode 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
               ?_pwmInit 0001         ___lwdiv@quotient 0005              _lcdPosition 1C92  
       pwmFrequency@freq 000F          ___aldiv@divisor 0005          ___aldiv@counter 0009  
         ___wmul@product 0005             ??_delayMicro 0003               ?_delayMili 0001  
 __end_of_PulseClockData 1D82      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _timerInit 1E6A                _ssdUpdate 11EC             ??_kpDebounce 000A  
              main@i_615 0030        ___wmul@multiplier 0001          lcdCommand@value 000E  
              main@tecla 0032                main@round 0028       __end_of_delayMicro 1E74  
     __end_of_lcdCommand 1E12               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 15F8                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 000F          ?_PulseClockData 0001               ?_timerInit 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of_adcInit 0048  
__size_of_pulseEnablePin 0042         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 1DA8                 __ptext11 15F8                 __ptext20 1E72  
               __ptext12 1C92                 __ptext21 1E60                 __ptext13 1704  
               __ptext30 1BCA                 __ptext22 1CCC                 __ptext14 1DCE  
               __ptext31 0F9E                 __ptext23 1C54                 __ptext15 1DF4  
               __ptext32 190C                 __ptext24 14C2                 __ptext16 1CFE  
               __ptext33 1868                 __ptext25 1B7C                 __ptext17 1E12  
               __ptext26 1D2E                 __ptext18 1A74                 __ptext27 1D58  
               __ptext19 1C12                 __ptext28 0D50                 __ptext29 1358  
       __size_of_soWrite 004E         __size_of_ssdInit 0056         __size_of_pwmInit 001A  
               _rgbColor 17B8            __size_of_main 0734              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 1ACE              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 1A74                pwmSet@val 000B                 main@cont 0034  
               main@nled 0019             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 1D2E        digitalWrite@value 0003  
       ___lldiv@dividend 0001             _pwmFrequency 1DA8                 soWrite@i 0009  
            ??_timerInit 0001              ??_ssdUpdate 000A       __end_of_pushNibble 1DF4  
           ?_digitalRead 0001         ___lldiv@quotient 0009              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A             ?_lcdPosition 000F  
        digitalWrite@pin 0001  
